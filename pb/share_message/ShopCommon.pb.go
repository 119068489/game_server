// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ShopCommon.proto

package share_message

import (
	fmt "fmt"
	github_com_akqp2019_protobuf_proto "github.com/akqp2019/protobuf/proto"
	proto "github.com/akqp2019/protobuf/proto"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

//这个枚举只用于页面传参数
type CommQuery_Con int32

const (
	CommQuery_Con_ALL    CommQuery_Con = 0
	CommQuery_Con_NEW    CommQuery_Con = 1
	CommQuery_Con_GOOD   CommQuery_Con = 2
	CommQuery_Con_MIDDLE CommQuery_Con = 3
	CommQuery_Con_BAD    CommQuery_Con = 4
)

var CommQuery_Con_name = map[int32]string{
	0: "ALL",
	1: "NEW",
	2: "GOOD",
	3: "MIDDLE",
	4: "BAD",
}

var CommQuery_Con_value = map[string]int32{
	"ALL":    0,
	"NEW":    1,
	"GOOD":   2,
	"MIDDLE": 3,
	"BAD":    4,
}

func (x CommQuery_Con) Enum() *CommQuery_Con {
	p := new(CommQuery_Con)
	*p = x
	return p
}

func (x CommQuery_Con) String() string {
	return proto.EnumName(CommQuery_Con_name, int32(x))
}

func (x *CommQuery_Con) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CommQuery_Con_value, data, "CommQuery_Con")
	if err != nil {
		return err
	}
	*x = CommQuery_Con(value)
	return nil
}

func (CommQuery_Con) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{0}
}

type BuySell_Type int32

const (
	BuySell_Type_Buyer  BuySell_Type = 0
	BuySell_Type_Seller BuySell_Type = 1
)

var BuySell_Type_name = map[int32]string{
	0: "Buyer",
	1: "Seller",
}

var BuySell_Type_value = map[string]int32{
	"Buyer":  0,
	"Seller": 1,
}

func (x BuySell_Type) Enum() *BuySell_Type {
	p := new(BuySell_Type)
	*p = x
	return p
}

func (x BuySell_Type) String() string {
	return proto.EnumName(BuySell_Type_name, int32(x))
}

func (x *BuySell_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BuySell_Type_value, data, "BuySell_Type")
	if err != nil {
		return err
	}
	*x = BuySell_Type(value)
	return nil
}

func (BuySell_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{1}
}

type Search_Type int32

const (
	Search_Type_Composite Search_Type = 0
	Search_Type_PriceAsc  Search_Type = 1
	Search_Type_PriceDesc Search_Type = 2
	Search_Type_NewSort   Search_Type = 3
	Search_Type_SalesSort Search_Type = 4
	Search_Type_StoreSort Search_Type = 5
)

var Search_Type_name = map[int32]string{
	0: "Composite",
	1: "PriceAsc",
	2: "PriceDesc",
	3: "NewSort",
	4: "SalesSort",
	5: "StoreSort",
}

var Search_Type_value = map[string]int32{
	"Composite": 0,
	"PriceAsc":  1,
	"PriceDesc": 2,
	"NewSort":   3,
	"SalesSort": 4,
	"StoreSort": 5,
}

func (x Search_Type) Enum() *Search_Type {
	p := new(Search_Type)
	*p = x
	return p
}

func (x Search_Type) String() string {
	return proto.EnumName(Search_Type_name, int32(x))
}

func (x *Search_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Search_Type_value, data, "Search_Type")
	if err != nil {
		return err
	}
	*x = Search_Type(value)
	return nil
}

func (Search_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{2}
}

//这个枚举只用于页面传参数
type SearchOrder_Con int32

const (
	SearchOrder_Con_ALL_ORDER    SearchOrder_Con = 0
	SearchOrder_Con_WAIT_PAY     SearchOrder_Con = 1
	SearchOrder_Con_WAIT_SEND    SearchOrder_Con = 2
	SearchOrder_Con_WAIT_RECEIVE SearchOrder_Con = 3
	SearchOrder_Con_FINISH_ORDER SearchOrder_Con = 4
)

var SearchOrder_Con_name = map[int32]string{
	0: "ALL_ORDER",
	1: "WAIT_PAY",
	2: "WAIT_SEND",
	3: "WAIT_RECEIVE",
	4: "FINISH_ORDER",
}

var SearchOrder_Con_value = map[string]int32{
	"ALL_ORDER":    0,
	"WAIT_PAY":     1,
	"WAIT_SEND":    2,
	"WAIT_RECEIVE": 3,
	"FINISH_ORDER": 4,
}

func (x SearchOrder_Con) Enum() *SearchOrder_Con {
	p := new(SearchOrder_Con)
	*p = x
	return p
}

func (x SearchOrder_Con) String() string {
	return proto.EnumName(SearchOrder_Con_name, int32(x))
}

func (x *SearchOrder_Con) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SearchOrder_Con_value, data, "SearchOrder_Con")
	if err != nil {
		return err
	}
	*x = SearchOrder_Con(value)
	return nil
}

func (SearchOrder_Con) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{3}
}

type Express_Status int32

const (
	Express_Status_PENDING    Express_Status = 0
	Express_Status_NO_RECORD  Express_Status = 1
	Express_Status_ERROR      Express_Status = 2
	Express_Status_IN_TRANSIT Express_Status = 3
	Express_Status_DELIVERING Express_Status = 4
	Express_Status_SIGNED     Express_Status = 5
	Express_Status_REJECTED   Express_Status = 6
	Express_Status_PROBLEM    Express_Status = 7
	Express_Status_INVALID    Express_Status = 8
	Express_Status_TIMEOUT    Express_Status = 9
	Express_Status_FAILED     Express_Status = 10
	Express_Status_SEND_BACK  Express_Status = 11
	Express_Status_TAKING     Express_Status = 12
)

var Express_Status_name = map[int32]string{
	0:  "PENDING",
	1:  "NO_RECORD",
	2:  "ERROR",
	3:  "IN_TRANSIT",
	4:  "DELIVERING",
	5:  "SIGNED",
	6:  "REJECTED",
	7:  "PROBLEM",
	8:  "INVALID",
	9:  "TIMEOUT",
	10: "FAILED",
	11: "SEND_BACK",
	12: "TAKING",
}

var Express_Status_value = map[string]int32{
	"PENDING":    0,
	"NO_RECORD":  1,
	"ERROR":      2,
	"IN_TRANSIT": 3,
	"DELIVERING": 4,
	"SIGNED":     5,
	"REJECTED":   6,
	"PROBLEM":    7,
	"INVALID":    8,
	"TIMEOUT":    9,
	"FAILED":     10,
	"SEND_BACK":  11,
	"TAKING":     12,
}

func (x Express_Status) Enum() *Express_Status {
	p := new(Express_Status)
	*p = x
	return p
}

func (x Express_Status) String() string {
	return proto.EnumName(Express_Status_name, int32(x))
}

func (x *Express_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Express_Status_value, data, "Express_Status")
	if err != nil {
		return err
	}
	*x = Express_Status(value)
	return nil
}

func (Express_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{4}
}

type ShopInfo struct {
	Page     *int32 `protobuf:"varint,1,req,name=page" json:"page,omitempty" bson:"page,omitempty"`
	PageSize *int32 `protobuf:"varint,2,req,name=page_size" json:"page_size,omitempty" bson:"page_size,omitempty"`
	Type     *int32 `protobuf:"varint,3,req,name=type" json:"type,omitempty" bson:"type,omitempty"`
	// 全部 0(针对商店列表)
	// 推荐 1      (10086暂时不处理)
	// ==========母婴玩具 (为了应对通联支付审核,目前页面删除,这个分类的值不记入数据库,自己对应需求上小分类)
	// 数码电器 2
	//========== 美妆个护  (为了应对通联支付审核,目前页面删除,这个分类的值不记入数据库,自己对应需求上小分类)
	// 服装服饰 3
	// 家居家居 4
	//========= 图书文具  (为了应对通联支付审核,目前页面删除,这个分类的值不记入数据库,自己对应需求上小分类)
	//========== 宠物用品 (为了应对通联支付审核,目前页面删除,这个分类的值不记入数据库,自己对应需求上小分类)
	// 其他 5
	CacheItemTypes       []int32  `protobuf:"varint,4,rep,name=cache_item_types" json:"cache_item_types,omitempty" bson:"cache_item_types,omitempty"`
	CacheSearch          []string `protobuf:"bytes,5,rep,name=cache_search" json:"cache_search,omitempty" bson:"cache_search,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ShopInfo) Reset()         { *m = ShopInfo{} }
func (m *ShopInfo) String() string { return proto.CompactTextString(m) }
func (*ShopInfo) ProtoMessage()    {}
func (*ShopInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{0}
}
func (m *ShopInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopInfo.Merge(m, src)
}
func (m *ShopInfo) XXX_Size() int {
	return m.Size()
}
func (m *ShopInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ShopInfo proto.InternalMessageInfo

func (m *ShopInfo) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *ShopInfo) GetPageSize() int32 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return 0
}

func (m *ShopInfo) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *ShopInfo) GetCacheItemTypes() []int32 {
	if m != nil {
		return m.CacheItemTypes
	}
	return nil
}

func (m *ShopInfo) GetCacheSearch() []string {
	if m != nil {
		return m.CacheSearch
	}
	return nil
}

type ItemFile struct {
	FileUrl              *string  `protobuf:"bytes,1,req,name=file_url" json:"file_url,omitempty" bson:"file_url,omitempty"`
	FileType             *int32   `protobuf:"varint,2,req,name=file_type" json:"file_type,omitempty" bson:"file_type,omitempty"`
	FileWidth            *string  `protobuf:"bytes,3,opt,name=file_width" json:"file_width,omitempty" bson:"file_width,omitempty"`
	FileHeight           *string  `protobuf:"bytes,4,opt,name=file_height" json:"file_height,omitempty" bson:"file_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ItemFile) Reset()         { *m = ItemFile{} }
func (m *ItemFile) String() string { return proto.CompactTextString(m) }
func (*ItemFile) ProtoMessage()    {}
func (*ItemFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{1}
}
func (m *ItemFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ItemFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ItemFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ItemFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemFile.Merge(m, src)
}
func (m *ItemFile) XXX_Size() int {
	return m.Size()
}
func (m *ItemFile) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemFile.DiscardUnknown(m)
}

var xxx_messageInfo_ItemFile proto.InternalMessageInfo

func (m *ItemFile) GetFileUrl() string {
	if m != nil && m.FileUrl != nil {
		return *m.FileUrl
	}
	return ""
}

func (m *ItemFile) GetFileType() int32 {
	if m != nil && m.FileType != nil {
		return *m.FileType
	}
	return 0
}

func (m *ItemFile) GetFileWidth() string {
	if m != nil && m.FileWidth != nil {
		return *m.FileWidth
	}
	return ""
}

func (m *ItemFile) GetFileHeight() string {
	if m != nil && m.FileHeight != nil {
		return *m.FileHeight
	}
	return ""
}

type ShopItem struct {
	ItemId               *int64    `protobuf:"varint,1,req,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	Price                *int32    `protobuf:"varint,2,opt,name=price" json:"price,omitempty" bson:"price,omitempty"`
	ItemFile             *ItemFile `protobuf:"bytes,3,opt,name=item_file" json:"item_file,omitempty" bson:"item_file,omitempty"`
	Title                *string   `protobuf:"bytes,4,opt,name=title" json:"title,omitempty" bson:"title,omitempty"`
	StoreCount           *int32    `protobuf:"varint,5,opt,name=store_count" json:"store_count,omitempty" bson:"store_count,omitempty"`
	PlayerId             *int64    `protobuf:"varint,6,opt,name=player_id" json:"player_id,omitempty" bson:"player_id,omitempty"`
	Nickname             *string   `protobuf:"bytes,7,opt,name=nickname" json:"nickname,omitempty" bson:"nickname,omitempty"`
	Avatar               *string   `protobuf:"bytes,8,opt,name=avatar" json:"avatar,omitempty" bson:"avatar,omitempty"`
	ShortAddress         *string   `protobuf:"bytes,9,opt,name=short_address" json:"short_address,omitempty" bson:"short_address,omitempty"`
	Account              *string   `protobuf:"bytes,10,opt,name=account" json:"account,omitempty" bson:"account,omitempty"`
	Sex                  *int32    `protobuf:"varint,11,opt,name=sex" json:"sex,omitempty" bson:"sex,omitempty"`
	Name                 *string   `protobuf:"bytes,12,opt,name=name" json:"name,omitempty" bson:"name,omitempty"`
	State                *int32    `protobuf:"varint,13,opt,name=state" json:"state,omitempty" bson:"state,omitempty"`
	ItemType             *int32    `protobuf:"varint,14,opt,name=item_type" json:"item_type,omitempty" bson:"item_type,omitempty"`
	MayEnjoy             *bool     `protobuf:"varint,15,opt,name=may_enjoy" json:"may_enjoy,omitempty" bson:"may_enjoy,omitempty"`
	ItemFlag             *bool     `protobuf:"varint,16,opt,name=item_flag" json:"item_flag,omitempty" bson:"item_flag,omitempty"`
	CopyName             *string   `protobuf:"bytes,17,opt,name=copy_name" json:"copy_name,omitempty" bson:"copy_name,omitempty"`
	Types                *int32    `protobuf:"varint,18,opt,name=Types" json:"Types,omitempty" bson:"Types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" bson:"-"`
	XXX_unrecognized     []byte    `json:"-" bson:"-"`
	XXX_sizecache        int32     `json:"-" bson:"-"`
}

func (m *ShopItem) Reset()         { *m = ShopItem{} }
func (m *ShopItem) String() string { return proto.CompactTextString(m) }
func (*ShopItem) ProtoMessage()    {}
func (*ShopItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{2}
}
func (m *ShopItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItem.Merge(m, src)
}
func (m *ShopItem) XXX_Size() int {
	return m.Size()
}
func (m *ShopItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItem.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItem proto.InternalMessageInfo

func (m *ShopItem) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *ShopItem) GetPrice() int32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *ShopItem) GetItemFile() *ItemFile {
	if m != nil {
		return m.ItemFile
	}
	return nil
}

func (m *ShopItem) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *ShopItem) GetStoreCount() int32 {
	if m != nil && m.StoreCount != nil {
		return *m.StoreCount
	}
	return 0
}

func (m *ShopItem) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *ShopItem) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *ShopItem) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

func (m *ShopItem) GetShortAddress() string {
	if m != nil && m.ShortAddress != nil {
		return *m.ShortAddress
	}
	return ""
}

func (m *ShopItem) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *ShopItem) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *ShopItem) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ShopItem) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *ShopItem) GetItemType() int32 {
	if m != nil && m.ItemType != nil {
		return *m.ItemType
	}
	return 0
}

func (m *ShopItem) GetMayEnjoy() bool {
	if m != nil && m.MayEnjoy != nil {
		return *m.MayEnjoy
	}
	return false
}

func (m *ShopItem) GetItemFlag() bool {
	if m != nil && m.ItemFlag != nil {
		return *m.ItemFlag
	}
	return false
}

func (m *ShopItem) GetCopyName() string {
	if m != nil && m.CopyName != nil {
		return *m.CopyName
	}
	return ""
}

func (m *ShopItem) GetTypes() int32 {
	if m != nil && m.Types != nil {
		return *m.Types
	}
	return 0
}

type ItemList struct {
	Items                []*ShopItem `protobuf:"bytes,1,rep,name=items" json:"items,omitempty" bson:"items,omitempty"`
	Page                 *int32      `protobuf:"varint,2,req,name=page" json:"page,omitempty" bson:"page,omitempty"`
	PageSize             *int32      `protobuf:"varint,3,req,name=page_size" json:"page_size,omitempty" bson:"page_size,omitempty"`
	Count                *int32      `protobuf:"varint,4,req,name=count" json:"count,omitempty" bson:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-" bson:"-"`
	XXX_unrecognized     []byte      `json:"-" bson:"-"`
	XXX_sizecache        int32       `json:"-" bson:"-"`
}

func (m *ItemList) Reset()         { *m = ItemList{} }
func (m *ItemList) String() string { return proto.CompactTextString(m) }
func (*ItemList) ProtoMessage()    {}
func (*ItemList) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{3}
}
func (m *ItemList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ItemList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ItemList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ItemList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemList.Merge(m, src)
}
func (m *ItemList) XXX_Size() int {
	return m.Size()
}
func (m *ItemList) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemList.DiscardUnknown(m)
}

var xxx_messageInfo_ItemList proto.InternalMessageInfo

func (m *ItemList) GetItems() []*ShopItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ItemList) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *ItemList) GetPageSize() int32 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return 0
}

func (m *ItemList) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type MyReleaseInfo struct {
	Page                 *int32   `protobuf:"varint,1,req,name=page" json:"page,omitempty" bson:"page,omitempty"`
	PageSize             *int32   `protobuf:"varint,2,req,name=page_size" json:"page_size,omitempty" bson:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *MyReleaseInfo) Reset()         { *m = MyReleaseInfo{} }
func (m *MyReleaseInfo) String() string { return proto.CompactTextString(m) }
func (*MyReleaseInfo) ProtoMessage()    {}
func (*MyReleaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{4}
}
func (m *MyReleaseInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MyReleaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MyReleaseInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MyReleaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MyReleaseInfo.Merge(m, src)
}
func (m *MyReleaseInfo) XXX_Size() int {
	return m.Size()
}
func (m *MyReleaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MyReleaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MyReleaseInfo proto.InternalMessageInfo

func (m *MyReleaseInfo) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *MyReleaseInfo) GetPageSize() int32 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return 0
}

type ItemListForMyRelease struct {
	Items                []*ShopItem `protobuf:"bytes,1,rep,name=items" json:"items,omitempty" bson:"items,omitempty"`
	Page                 *int32      `protobuf:"varint,2,req,name=page" json:"page,omitempty" bson:"page,omitempty"`
	PageSize             *int32      `protobuf:"varint,3,req,name=page_size" json:"page_size,omitempty" bson:"page_size,omitempty"`
	Count                *int32      `protobuf:"varint,4,req,name=count" json:"count,omitempty" bson:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-" bson:"-"`
	XXX_unrecognized     []byte      `json:"-" bson:"-"`
	XXX_sizecache        int32       `json:"-" bson:"-"`
}

func (m *ItemListForMyRelease) Reset()         { *m = ItemListForMyRelease{} }
func (m *ItemListForMyRelease) String() string { return proto.CompactTextString(m) }
func (*ItemListForMyRelease) ProtoMessage()    {}
func (*ItemListForMyRelease) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{5}
}
func (m *ItemListForMyRelease) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ItemListForMyRelease) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ItemListForMyRelease.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ItemListForMyRelease) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemListForMyRelease.Merge(m, src)
}
func (m *ItemListForMyRelease) XXX_Size() int {
	return m.Size()
}
func (m *ItemListForMyRelease) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemListForMyRelease.DiscardUnknown(m)
}

var xxx_messageInfo_ItemListForMyRelease proto.InternalMessageInfo

func (m *ItemListForMyRelease) GetItems() []*ShopItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ItemListForMyRelease) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *ItemListForMyRelease) GetPageSize() int32 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return 0
}

func (m *ItemListForMyRelease) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type BuyItem struct {
	ItemId               *int64          `protobuf:"varint,1,req,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	ItemFile             *ItemFile       `protobuf:"bytes,2,req,name=item_file" json:"item_file,omitempty" bson:"item_file,omitempty"`
	Name                 *string         `protobuf:"bytes,3,opt,name=name" json:"name,omitempty" bson:"name,omitempty"`
	OriginPrice          *int32          `protobuf:"varint,4,opt,name=origin_price" json:"origin_price,omitempty" bson:"origin_price,omitempty"`
	Price                *int32          `protobuf:"varint,5,opt,name=price" json:"price,omitempty" bson:"price,omitempty"`
	SponsorId            *int64          `protobuf:"varint,6,opt,name=sponsor_id" json:"sponsor_id,omitempty" bson:"sponsor_id,omitempty"`
	Avatar               *string         `protobuf:"bytes,7,opt,name=avatar" json:"avatar,omitempty" bson:"avatar,omitempty"`
	Nickname             *string         `protobuf:"bytes,8,opt,name=nickname" json:"nickname,omitempty" bson:"nickname,omitempty"`
	Count                *int32          `protobuf:"varint,9,opt,name=count" json:"count,omitempty" bson:"count,omitempty"`
	Sex                  *int32          `protobuf:"varint,10,opt,name=sex" json:"sex,omitempty" bson:"sex,omitempty"`
	Title                *string         `protobuf:"bytes,11,opt,name=title" json:"title,omitempty" bson:"title,omitempty"`
	DeliverAddress       *DeliverAddress `protobuf:"bytes,12,opt,name=deliver_address" json:"deliver_address,omitempty" bson:"deliver_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *BuyItem) Reset()         { *m = BuyItem{} }
func (m *BuyItem) String() string { return proto.CompactTextString(m) }
func (*BuyItem) ProtoMessage()    {}
func (*BuyItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{6}
}
func (m *BuyItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BuyItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BuyItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BuyItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuyItem.Merge(m, src)
}
func (m *BuyItem) XXX_Size() int {
	return m.Size()
}
func (m *BuyItem) XXX_DiscardUnknown() {
	xxx_messageInfo_BuyItem.DiscardUnknown(m)
}

var xxx_messageInfo_BuyItem proto.InternalMessageInfo

func (m *BuyItem) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *BuyItem) GetItemFile() *ItemFile {
	if m != nil {
		return m.ItemFile
	}
	return nil
}

func (m *BuyItem) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *BuyItem) GetOriginPrice() int32 {
	if m != nil && m.OriginPrice != nil {
		return *m.OriginPrice
	}
	return 0
}

func (m *BuyItem) GetPrice() int32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *BuyItem) GetSponsorId() int64 {
	if m != nil && m.SponsorId != nil {
		return *m.SponsorId
	}
	return 0
}

func (m *BuyItem) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

func (m *BuyItem) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *BuyItem) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *BuyItem) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *BuyItem) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *BuyItem) GetDeliverAddress() *DeliverAddress {
	if m != nil {
		return m.DeliverAddress
	}
	return nil
}

type BuyItemID struct {
	ItemId               *int64   `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	Count                *int32   `protobuf:"varint,2,opt,name=count" json:"count,omitempty" bson:"count,omitempty"`
	Remark               *string  `protobuf:"bytes,3,opt,name=remark" json:"remark,omitempty" bson:"remark,omitempty"`
	ItemTitle            *string  `protobuf:"bytes,4,opt,name=item_title" json:"item_title,omitempty" bson:"item_title,omitempty"`
	ItemName             *string  `protobuf:"bytes,5,opt,name=item_name" json:"item_name,omitempty" bson:"item_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *BuyItemID) Reset()         { *m = BuyItemID{} }
func (m *BuyItemID) String() string { return proto.CompactTextString(m) }
func (*BuyItemID) ProtoMessage()    {}
func (*BuyItemID) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{7}
}
func (m *BuyItemID) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BuyItemID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BuyItemID.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BuyItemID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuyItemID.Merge(m, src)
}
func (m *BuyItemID) XXX_Size() int {
	return m.Size()
}
func (m *BuyItemID) XXX_DiscardUnknown() {
	xxx_messageInfo_BuyItemID.DiscardUnknown(m)
}

var xxx_messageInfo_BuyItemID proto.InternalMessageInfo

func (m *BuyItemID) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *BuyItemID) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *BuyItemID) GetRemark() string {
	if m != nil && m.Remark != nil {
		return *m.Remark
	}
	return ""
}

func (m *BuyItemID) GetItemTitle() string {
	if m != nil && m.ItemTitle != nil {
		return *m.ItemTitle
	}
	return ""
}

func (m *BuyItemID) GetItemName() string {
	if m != nil && m.ItemName != nil {
		return *m.ItemName
	}
	return ""
}

type BuyItemInfo struct {
	Items                []*BuyItemID    `protobuf:"bytes,1,rep,name=items" json:"items,omitempty" bson:"items,omitempty"`
	Address              *ReceiveAddress `protobuf:"bytes,2,req,name=address" json:"address,omitempty" bson:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *BuyItemInfo) Reset()         { *m = BuyItemInfo{} }
func (m *BuyItemInfo) String() string { return proto.CompactTextString(m) }
func (*BuyItemInfo) ProtoMessage()    {}
func (*BuyItemInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{8}
}
func (m *BuyItemInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BuyItemInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BuyItemInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BuyItemInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuyItemInfo.Merge(m, src)
}
func (m *BuyItemInfo) XXX_Size() int {
	return m.Size()
}
func (m *BuyItemInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BuyItemInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BuyItemInfo proto.InternalMessageInfo

func (m *BuyItemInfo) GetItems() []*BuyItemID {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *BuyItemInfo) GetAddress() *ReceiveAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

type BuyItemResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	OrderId              *int64   `protobuf:"varint,3,opt,name=order_id" json:"order_id,omitempty" bson:"order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *BuyItemResult) Reset()         { *m = BuyItemResult{} }
func (m *BuyItemResult) String() string { return proto.CompactTextString(m) }
func (*BuyItemResult) ProtoMessage()    {}
func (*BuyItemResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{9}
}
func (m *BuyItemResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BuyItemResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BuyItemResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BuyItemResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuyItemResult.Merge(m, src)
}
func (m *BuyItemResult) XXX_Size() int {
	return m.Size()
}
func (m *BuyItemResult) XXX_DiscardUnknown() {
	xxx_messageInfo_BuyItemResult.DiscardUnknown(m)
}

var xxx_messageInfo_BuyItemResult proto.InternalMessageInfo

func (m *BuyItemResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *BuyItemResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *BuyItemResult) GetOrderId() int64 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

type SettlementItemID struct {
	ItemId               *int64   `protobuf:"varint,1,req,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	Count                *int32   `protobuf:"varint,2,req,name=count" json:"count,omitempty" bson:"count,omitempty"`
	ItemTitle            *string  `protobuf:"bytes,3,req,name=item_title" json:"item_title,omitempty" bson:"item_title,omitempty"`
	ItemName             *string  `protobuf:"bytes,4,req,name=item_name" json:"item_name,omitempty" bson:"item_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *SettlementItemID) Reset()         { *m = SettlementItemID{} }
func (m *SettlementItemID) String() string { return proto.CompactTextString(m) }
func (*SettlementItemID) ProtoMessage()    {}
func (*SettlementItemID) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{10}
}
func (m *SettlementItemID) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SettlementItemID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SettlementItemID.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SettlementItemID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettlementItemID.Merge(m, src)
}
func (m *SettlementItemID) XXX_Size() int {
	return m.Size()
}
func (m *SettlementItemID) XXX_DiscardUnknown() {
	xxx_messageInfo_SettlementItemID.DiscardUnknown(m)
}

var xxx_messageInfo_SettlementItemID proto.InternalMessageInfo

func (m *SettlementItemID) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *SettlementItemID) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *SettlementItemID) GetItemTitle() string {
	if m != nil && m.ItemTitle != nil {
		return *m.ItemTitle
	}
	return ""
}

func (m *SettlementItemID) GetItemName() string {
	if m != nil && m.ItemName != nil {
		return *m.ItemName
	}
	return ""
}

type SettlementInfo struct {
	Items                []*SettlementItemID `protobuf:"bytes,1,rep,name=items" json:"items,omitempty" bson:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-" bson:"-"`
	XXX_unrecognized     []byte              `json:"-" bson:"-"`
	XXX_sizecache        int32               `json:"-" bson:"-"`
}

func (m *SettlementInfo) Reset()         { *m = SettlementInfo{} }
func (m *SettlementInfo) String() string { return proto.CompactTextString(m) }
func (*SettlementInfo) ProtoMessage()    {}
func (*SettlementInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{11}
}
func (m *SettlementInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SettlementInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SettlementInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SettlementInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettlementInfo.Merge(m, src)
}
func (m *SettlementInfo) XXX_Size() int {
	return m.Size()
}
func (m *SettlementInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SettlementInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SettlementInfo proto.InternalMessageInfo

func (m *SettlementInfo) GetItems() []*SettlementItemID {
	if m != nil {
		return m.Items
	}
	return nil
}

type SettlementResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	NoSaleMessages       []string `protobuf:"bytes,2,rep,name=no_sale_messages" json:"no_sale_messages,omitempty" bson:"no_sale_messages,omitempty"`
	NoStockMessages      []string `protobuf:"bytes,3,rep,name=no_stock_messages" json:"no_stock_messages,omitempty" bson:"no_stock_messages,omitempty"`
	BlackMessages        []string `protobuf:"bytes,4,rep,name=black_messages" json:"black_messages,omitempty" bson:"black_messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *SettlementResult) Reset()         { *m = SettlementResult{} }
func (m *SettlementResult) String() string { return proto.CompactTextString(m) }
func (*SettlementResult) ProtoMessage()    {}
func (*SettlementResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{12}
}
func (m *SettlementResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SettlementResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SettlementResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SettlementResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettlementResult.Merge(m, src)
}
func (m *SettlementResult) XXX_Size() int {
	return m.Size()
}
func (m *SettlementResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SettlementResult.DiscardUnknown(m)
}

var xxx_messageInfo_SettlementResult proto.InternalMessageInfo

func (m *SettlementResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *SettlementResult) GetNoSaleMessages() []string {
	if m != nil {
		return m.NoSaleMessages
	}
	return nil
}

func (m *SettlementResult) GetNoStockMessages() []string {
	if m != nil {
		return m.NoStockMessages
	}
	return nil
}

func (m *SettlementResult) GetBlackMessages() []string {
	if m != nil {
		return m.BlackMessages
	}
	return nil
}

type OrderInfo struct {
	Type                 *BuySell_Type    `protobuf:"varint,1,req,name=type,enum=share_message.BuySell_Type" json:"type,omitempty" bson:"type,omitempty"`
	ItemType             *SearchOrder_Con `protobuf:"varint,2,req,name=item_type,enum=share_message.SearchOrder_Con" json:"item_type,omitempty" bson:"item_type,omitempty"`
	Page                 *int32           `protobuf:"varint,3,req,name=page" json:"page,omitempty" bson:"page,omitempty"`
	PageSize             *int32           `protobuf:"varint,4,req,name=page_size" json:"page_size,omitempty" bson:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-" bson:"-"`
	XXX_unrecognized     []byte           `json:"-" bson:"-"`
	XXX_sizecache        int32            `json:"-" bson:"-"`
}

func (m *OrderInfo) Reset()         { *m = OrderInfo{} }
func (m *OrderInfo) String() string { return proto.CompactTextString(m) }
func (*OrderInfo) ProtoMessage()    {}
func (*OrderInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{13}
}
func (m *OrderInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OrderInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OrderInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OrderInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderInfo.Merge(m, src)
}
func (m *OrderInfo) XXX_Size() int {
	return m.Size()
}
func (m *OrderInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OrderInfo proto.InternalMessageInfo

func (m *OrderInfo) GetType() BuySell_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return BuySell_Type_Buyer
}

func (m *OrderInfo) GetItemType() SearchOrder_Con {
	if m != nil && m.ItemType != nil {
		return *m.ItemType
	}
	return SearchOrder_Con_ALL_ORDER
}

func (m *OrderInfo) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *OrderInfo) GetPageSize() int32 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return 0
}

type OrderDetailInfoPara struct {
	Type                 *BuySell_Type `protobuf:"varint,1,req,name=type,enum=share_message.BuySell_Type" json:"type,omitempty" bson:"type,omitempty"`
	OrderId              *int64        `protobuf:"varint,2,req,name=order_id" json:"order_id,omitempty" bson:"order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-" bson:"-"`
	XXX_unrecognized     []byte        `json:"-" bson:"-"`
	XXX_sizecache        int32         `json:"-" bson:"-"`
}

func (m *OrderDetailInfoPara) Reset()         { *m = OrderDetailInfoPara{} }
func (m *OrderDetailInfoPara) String() string { return proto.CompactTextString(m) }
func (*OrderDetailInfoPara) ProtoMessage()    {}
func (*OrderDetailInfoPara) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{14}
}
func (m *OrderDetailInfoPara) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OrderDetailInfoPara) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OrderDetailInfoPara.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OrderDetailInfoPara) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderDetailInfoPara.Merge(m, src)
}
func (m *OrderDetailInfoPara) XXX_Size() int {
	return m.Size()
}
func (m *OrderDetailInfoPara) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderDetailInfoPara.DiscardUnknown(m)
}

var xxx_messageInfo_OrderDetailInfoPara proto.InternalMessageInfo

func (m *OrderDetailInfoPara) GetType() BuySell_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return BuySell_Type_Buyer
}

func (m *OrderDetailInfoPara) GetOrderId() int64 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

type OrderID struct {
	OrderId              *int64   `protobuf:"varint,1,req,name=order_id" json:"order_id,omitempty" bson:"order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *OrderID) Reset()         { *m = OrderID{} }
func (m *OrderID) String() string { return proto.CompactTextString(m) }
func (*OrderID) ProtoMessage()    {}
func (*OrderID) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{15}
}
func (m *OrderID) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OrderID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OrderID.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OrderID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderID.Merge(m, src)
}
func (m *OrderID) XXX_Size() int {
	return m.Size()
}
func (m *OrderID) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderID.DiscardUnknown(m)
}

var xxx_messageInfo_OrderID proto.InternalMessageInfo

func (m *OrderID) GetOrderId() int64 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

type EditOrderAddress struct {
	OrderId              *int64          `protobuf:"varint,1,req,name=order_id" json:"order_id,omitempty" bson:"order_id,omitempty"`
	Address              *ReceiveAddress `protobuf:"bytes,2,req,name=address" json:"address,omitempty" bson:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *EditOrderAddress) Reset()         { *m = EditOrderAddress{} }
func (m *EditOrderAddress) String() string { return proto.CompactTextString(m) }
func (*EditOrderAddress) ProtoMessage()    {}
func (*EditOrderAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{16}
}
func (m *EditOrderAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EditOrderAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EditOrderAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EditOrderAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditOrderAddress.Merge(m, src)
}
func (m *EditOrderAddress) XXX_Size() int {
	return m.Size()
}
func (m *EditOrderAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_EditOrderAddress.DiscardUnknown(m)
}

var xxx_messageInfo_EditOrderAddress proto.InternalMessageInfo

func (m *EditOrderAddress) GetOrderId() int64 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

func (m *EditOrderAddress) GetAddress() *ReceiveAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

type EditOrderAddressResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *EditOrderAddressResult) Reset()         { *m = EditOrderAddressResult{} }
func (m *EditOrderAddressResult) String() string { return proto.CompactTextString(m) }
func (*EditOrderAddressResult) ProtoMessage()    {}
func (*EditOrderAddressResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{17}
}
func (m *EditOrderAddressResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EditOrderAddressResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EditOrderAddressResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EditOrderAddressResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditOrderAddressResult.Merge(m, src)
}
func (m *EditOrderAddressResult) XXX_Size() int {
	return m.Size()
}
func (m *EditOrderAddressResult) XXX_DiscardUnknown() {
	xxx_messageInfo_EditOrderAddressResult.DiscardUnknown(m)
}

var xxx_messageInfo_EditOrderAddressResult proto.InternalMessageInfo

func (m *EditOrderAddressResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *EditOrderAddressResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type EditDeliverAddress struct {
	OrderId              *int64          `protobuf:"varint,1,req,name=order_id" json:"order_id,omitempty" bson:"order_id,omitempty"`
	Address              *DeliverAddress `protobuf:"bytes,2,req,name=address" json:"address,omitempty" bson:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *EditDeliverAddress) Reset()         { *m = EditDeliverAddress{} }
func (m *EditDeliverAddress) String() string { return proto.CompactTextString(m) }
func (*EditDeliverAddress) ProtoMessage()    {}
func (*EditDeliverAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{18}
}
func (m *EditDeliverAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EditDeliverAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EditDeliverAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EditDeliverAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditDeliverAddress.Merge(m, src)
}
func (m *EditDeliverAddress) XXX_Size() int {
	return m.Size()
}
func (m *EditDeliverAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_EditDeliverAddress.DiscardUnknown(m)
}

var xxx_messageInfo_EditDeliverAddress proto.InternalMessageInfo

func (m *EditDeliverAddress) GetOrderId() int64 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

func (m *EditDeliverAddress) GetAddress() *DeliverAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

type EditDeliverAddressResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *EditDeliverAddressResult) Reset()         { *m = EditDeliverAddressResult{} }
func (m *EditDeliverAddressResult) String() string { return proto.CompactTextString(m) }
func (*EditDeliverAddressResult) ProtoMessage()    {}
func (*EditDeliverAddressResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{19}
}
func (m *EditDeliverAddressResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EditDeliverAddressResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EditDeliverAddressResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EditDeliverAddressResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditDeliverAddressResult.Merge(m, src)
}
func (m *EditDeliverAddressResult) XXX_Size() int {
	return m.Size()
}
func (m *EditDeliverAddressResult) XXX_DiscardUnknown() {
	xxx_messageInfo_EditDeliverAddressResult.DiscardUnknown(m)
}

var xxx_messageInfo_EditDeliverAddressResult proto.InternalMessageInfo

func (m *EditDeliverAddressResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *EditDeliverAddressResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type ShopAddressResult struct {
	Result               *int32          `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string         `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	DeliverAddress       *DeliverAddress `protobuf:"bytes,3,opt,name=deliver_address" json:"deliver_address,omitempty" bson:"deliver_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *ShopAddressResult) Reset()         { *m = ShopAddressResult{} }
func (m *ShopAddressResult) String() string { return proto.CompactTextString(m) }
func (*ShopAddressResult) ProtoMessage()    {}
func (*ShopAddressResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{20}
}
func (m *ShopAddressResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopAddressResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopAddressResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopAddressResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopAddressResult.Merge(m, src)
}
func (m *ShopAddressResult) XXX_Size() int {
	return m.Size()
}
func (m *ShopAddressResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopAddressResult.DiscardUnknown(m)
}

var xxx_messageInfo_ShopAddressResult proto.InternalMessageInfo

func (m *ShopAddressResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *ShopAddressResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *ShopAddressResult) GetDeliverAddress() *DeliverAddress {
	if m != nil {
		return m.DeliverAddress
	}
	return nil
}

type ShopAddressInfo struct {
	ItemId               *int64   `protobuf:"varint,1,req,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ShopAddressInfo) Reset()         { *m = ShopAddressInfo{} }
func (m *ShopAddressInfo) String() string { return proto.CompactTextString(m) }
func (*ShopAddressInfo) ProtoMessage()    {}
func (*ShopAddressInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{21}
}
func (m *ShopAddressInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopAddressInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopAddressInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopAddressInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopAddressInfo.Merge(m, src)
}
func (m *ShopAddressInfo) XXX_Size() int {
	return m.Size()
}
func (m *ShopAddressInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopAddressInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ShopAddressInfo proto.InternalMessageInfo

func (m *ShopAddressInfo) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type ConfirmReceiveResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ConfirmReceiveResult) Reset()         { *m = ConfirmReceiveResult{} }
func (m *ConfirmReceiveResult) String() string { return proto.CompactTextString(m) }
func (*ConfirmReceiveResult) ProtoMessage()    {}
func (*ConfirmReceiveResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{22}
}
func (m *ConfirmReceiveResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConfirmReceiveResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConfirmReceiveResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConfirmReceiveResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmReceiveResult.Merge(m, src)
}
func (m *ConfirmReceiveResult) XXX_Size() int {
	return m.Size()
}
func (m *ConfirmReceiveResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmReceiveResult.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmReceiveResult proto.InternalMessageInfo

func (m *ConfirmReceiveResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *ConfirmReceiveResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type DelayReceiveResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DelayReceiveResult) Reset()         { *m = DelayReceiveResult{} }
func (m *DelayReceiveResult) String() string { return proto.CompactTextString(m) }
func (*DelayReceiveResult) ProtoMessage()    {}
func (*DelayReceiveResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{23}
}
func (m *DelayReceiveResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DelayReceiveResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DelayReceiveResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DelayReceiveResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelayReceiveResult.Merge(m, src)
}
func (m *DelayReceiveResult) XXX_Size() int {
	return m.Size()
}
func (m *DelayReceiveResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DelayReceiveResult.DiscardUnknown(m)
}

var xxx_messageInfo_DelayReceiveResult proto.InternalMessageInfo

func (m *DelayReceiveResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *DelayReceiveResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type NotifySendItemResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *NotifySendItemResult) Reset()         { *m = NotifySendItemResult{} }
func (m *NotifySendItemResult) String() string { return proto.CompactTextString(m) }
func (*NotifySendItemResult) ProtoMessage()    {}
func (*NotifySendItemResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{24}
}
func (m *NotifySendItemResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NotifySendItemResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NotifySendItemResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NotifySendItemResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifySendItemResult.Merge(m, src)
}
func (m *NotifySendItemResult) XXX_Size() int {
	return m.Size()
}
func (m *NotifySendItemResult) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifySendItemResult.DiscardUnknown(m)
}

var xxx_messageInfo_NotifySendItemResult proto.InternalMessageInfo

func (m *NotifySendItemResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *NotifySendItemResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type ReceiveAddress struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty" bson:"name,omitempty"`
	Phone                *string  `protobuf:"bytes,2,opt,name=phone" json:"phone,omitempty" bson:"phone,omitempty"`
	Region               *string  `protobuf:"bytes,3,opt,name=region" json:"region,omitempty" bson:"region,omitempty"`
	DetailAddress        *string  `protobuf:"bytes,4,opt,name=detail_address" json:"detail_address,omitempty" bson:"detail_address,omitempty"`
	DefaultFlag          *int32   `protobuf:"varint,5,opt,name=default_flag" json:"default_flag,omitempty" bson:"default_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ReceiveAddress) Reset()         { *m = ReceiveAddress{} }
func (m *ReceiveAddress) String() string { return proto.CompactTextString(m) }
func (*ReceiveAddress) ProtoMessage()    {}
func (*ReceiveAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{25}
}
func (m *ReceiveAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReceiveAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReceiveAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReceiveAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiveAddress.Merge(m, src)
}
func (m *ReceiveAddress) XXX_Size() int {
	return m.Size()
}
func (m *ReceiveAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiveAddress.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiveAddress proto.InternalMessageInfo

func (m *ReceiveAddress) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ReceiveAddress) GetPhone() string {
	if m != nil && m.Phone != nil {
		return *m.Phone
	}
	return ""
}

func (m *ReceiveAddress) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

func (m *ReceiveAddress) GetDetailAddress() string {
	if m != nil && m.DetailAddress != nil {
		return *m.DetailAddress
	}
	return ""
}

func (m *ReceiveAddress) GetDefaultFlag() int32 {
	if m != nil && m.DefaultFlag != nil {
		return *m.DefaultFlag
	}
	return 0
}

type ReceiveAddressInfo struct {
	AddressId            *int64          `protobuf:"varint,1,req,name=address_id" json:"address_id,omitempty" bson:"address_id,omitempty"`
	Address              *ReceiveAddress `protobuf:"bytes,2,req,name=address" json:"address,omitempty" bson:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *ReceiveAddressInfo) Reset()         { *m = ReceiveAddressInfo{} }
func (m *ReceiveAddressInfo) String() string { return proto.CompactTextString(m) }
func (*ReceiveAddressInfo) ProtoMessage()    {}
func (*ReceiveAddressInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{26}
}
func (m *ReceiveAddressInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReceiveAddressInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReceiveAddressInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReceiveAddressInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiveAddressInfo.Merge(m, src)
}
func (m *ReceiveAddressInfo) XXX_Size() int {
	return m.Size()
}
func (m *ReceiveAddressInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiveAddressInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiveAddressInfo proto.InternalMessageInfo

func (m *ReceiveAddressInfo) GetAddressId() int64 {
	if m != nil && m.AddressId != nil {
		return *m.AddressId
	}
	return 0
}

func (m *ReceiveAddressInfo) GetAddress() *ReceiveAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

type ReceiveAddressList struct {
	List                 []*ReceiveAddressInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty" bson:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-" bson:"-"`
	XXX_unrecognized     []byte                `json:"-" bson:"-"`
	XXX_sizecache        int32                 `json:"-" bson:"-"`
}

func (m *ReceiveAddressList) Reset()         { *m = ReceiveAddressList{} }
func (m *ReceiveAddressList) String() string { return proto.CompactTextString(m) }
func (*ReceiveAddressList) ProtoMessage()    {}
func (*ReceiveAddressList) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{27}
}
func (m *ReceiveAddressList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReceiveAddressList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReceiveAddressList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReceiveAddressList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiveAddressList.Merge(m, src)
}
func (m *ReceiveAddressList) XXX_Size() int {
	return m.Size()
}
func (m *ReceiveAddressList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiveAddressList.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiveAddressList proto.InternalMessageInfo

func (m *ReceiveAddressList) GetList() []*ReceiveAddressInfo {
	if m != nil {
		return m.List
	}
	return nil
}

type ReceiveAddressID struct {
	AddressId            *int64   `protobuf:"varint,1,req,name=address_id" json:"address_id,omitempty" bson:"address_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ReceiveAddressID) Reset()         { *m = ReceiveAddressID{} }
func (m *ReceiveAddressID) String() string { return proto.CompactTextString(m) }
func (*ReceiveAddressID) ProtoMessage()    {}
func (*ReceiveAddressID) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{28}
}
func (m *ReceiveAddressID) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReceiveAddressID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReceiveAddressID.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReceiveAddressID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiveAddressID.Merge(m, src)
}
func (m *ReceiveAddressID) XXX_Size() int {
	return m.Size()
}
func (m *ReceiveAddressID) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiveAddressID.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiveAddressID proto.InternalMessageInfo

func (m *ReceiveAddressID) GetAddressId() int64 {
	if m != nil && m.AddressId != nil {
		return *m.AddressId
	}
	return 0
}

type PlayerID struct {
	PlayerId             *int64   `protobuf:"varint,1,req,name=player_id" json:"player_id,omitempty" bson:"player_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *PlayerID) Reset()         { *m = PlayerID{} }
func (m *PlayerID) String() string { return proto.CompactTextString(m) }
func (*PlayerID) ProtoMessage()    {}
func (*PlayerID) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{29}
}
func (m *PlayerID) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlayerID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PlayerID.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PlayerID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerID.Merge(m, src)
}
func (m *PlayerID) XXX_Size() int {
	return m.Size()
}
func (m *PlayerID) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerID.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerID proto.InternalMessageInfo

func (m *PlayerID) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type ReceiveAddressAddResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	AddressId            *int64   `protobuf:"varint,3,opt,name=address_id" json:"address_id,omitempty" bson:"address_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ReceiveAddressAddResult) Reset()         { *m = ReceiveAddressAddResult{} }
func (m *ReceiveAddressAddResult) String() string { return proto.CompactTextString(m) }
func (*ReceiveAddressAddResult) ProtoMessage()    {}
func (*ReceiveAddressAddResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{30}
}
func (m *ReceiveAddressAddResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReceiveAddressAddResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReceiveAddressAddResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReceiveAddressAddResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiveAddressAddResult.Merge(m, src)
}
func (m *ReceiveAddressAddResult) XXX_Size() int {
	return m.Size()
}
func (m *ReceiveAddressAddResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiveAddressAddResult.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiveAddressAddResult proto.InternalMessageInfo

func (m *ReceiveAddressAddResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *ReceiveAddressAddResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *ReceiveAddressAddResult) GetAddressId() int64 {
	if m != nil && m.AddressId != nil {
		return *m.AddressId
	}
	return 0
}

type ReceiveAddressRemoveResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ReceiveAddressRemoveResult) Reset()         { *m = ReceiveAddressRemoveResult{} }
func (m *ReceiveAddressRemoveResult) String() string { return proto.CompactTextString(m) }
func (*ReceiveAddressRemoveResult) ProtoMessage()    {}
func (*ReceiveAddressRemoveResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{31}
}
func (m *ReceiveAddressRemoveResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReceiveAddressRemoveResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReceiveAddressRemoveResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReceiveAddressRemoveResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiveAddressRemoveResult.Merge(m, src)
}
func (m *ReceiveAddressRemoveResult) XXX_Size() int {
	return m.Size()
}
func (m *ReceiveAddressRemoveResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiveAddressRemoveResult.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiveAddressRemoveResult proto.InternalMessageInfo

func (m *ReceiveAddressRemoveResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *ReceiveAddressRemoveResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type ReceiveAddressEditResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ReceiveAddressEditResult) Reset()         { *m = ReceiveAddressEditResult{} }
func (m *ReceiveAddressEditResult) String() string { return proto.CompactTextString(m) }
func (*ReceiveAddressEditResult) ProtoMessage()    {}
func (*ReceiveAddressEditResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{32}
}
func (m *ReceiveAddressEditResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReceiveAddressEditResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReceiveAddressEditResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReceiveAddressEditResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiveAddressEditResult.Merge(m, src)
}
func (m *ReceiveAddressEditResult) XXX_Size() int {
	return m.Size()
}
func (m *ReceiveAddressEditResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiveAddressEditResult.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiveAddressEditResult proto.InternalMessageInfo

func (m *ReceiveAddressEditResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *ReceiveAddressEditResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type DeliverAddress struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty" bson:"name,omitempty"`
	Phone                *string  `protobuf:"bytes,2,opt,name=phone" json:"phone,omitempty" bson:"phone,omitempty"`
	Region               *string  `protobuf:"bytes,3,opt,name=region" json:"region,omitempty" bson:"region,omitempty"`
	DetailAddress        *string  `protobuf:"bytes,4,opt,name=detail_address" json:"detail_address,omitempty" bson:"detail_address,omitempty"`
	DefaultFlag          *int32   `protobuf:"varint,5,opt,name=default_flag" json:"default_flag,omitempty" bson:"default_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeliverAddress) Reset()         { *m = DeliverAddress{} }
func (m *DeliverAddress) String() string { return proto.CompactTextString(m) }
func (*DeliverAddress) ProtoMessage()    {}
func (*DeliverAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{33}
}
func (m *DeliverAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeliverAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeliverAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeliverAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliverAddress.Merge(m, src)
}
func (m *DeliverAddress) XXX_Size() int {
	return m.Size()
}
func (m *DeliverAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliverAddress.DiscardUnknown(m)
}

var xxx_messageInfo_DeliverAddress proto.InternalMessageInfo

func (m *DeliverAddress) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *DeliverAddress) GetPhone() string {
	if m != nil && m.Phone != nil {
		return *m.Phone
	}
	return ""
}

func (m *DeliverAddress) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

func (m *DeliverAddress) GetDetailAddress() string {
	if m != nil && m.DetailAddress != nil {
		return *m.DetailAddress
	}
	return ""
}

func (m *DeliverAddress) GetDefaultFlag() int32 {
	if m != nil && m.DefaultFlag != nil {
		return *m.DefaultFlag
	}
	return 0
}

type DeliverAddressInfo struct {
	AddressId            *int64          `protobuf:"varint,1,req,name=address_id" json:"address_id,omitempty" bson:"address_id,omitempty"`
	Address              *DeliverAddress `protobuf:"bytes,2,req,name=address" json:"address,omitempty" bson:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *DeliverAddressInfo) Reset()         { *m = DeliverAddressInfo{} }
func (m *DeliverAddressInfo) String() string { return proto.CompactTextString(m) }
func (*DeliverAddressInfo) ProtoMessage()    {}
func (*DeliverAddressInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{34}
}
func (m *DeliverAddressInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeliverAddressInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeliverAddressInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeliverAddressInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliverAddressInfo.Merge(m, src)
}
func (m *DeliverAddressInfo) XXX_Size() int {
	return m.Size()
}
func (m *DeliverAddressInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliverAddressInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DeliverAddressInfo proto.InternalMessageInfo

func (m *DeliverAddressInfo) GetAddressId() int64 {
	if m != nil && m.AddressId != nil {
		return *m.AddressId
	}
	return 0
}

func (m *DeliverAddressInfo) GetAddress() *DeliverAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

type DeliverAddressList struct {
	List                 []*DeliverAddressInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty" bson:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-" bson:"-"`
	XXX_unrecognized     []byte                `json:"-" bson:"-"`
	XXX_sizecache        int32                 `json:"-" bson:"-"`
}

func (m *DeliverAddressList) Reset()         { *m = DeliverAddressList{} }
func (m *DeliverAddressList) String() string { return proto.CompactTextString(m) }
func (*DeliverAddressList) ProtoMessage()    {}
func (*DeliverAddressList) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{35}
}
func (m *DeliverAddressList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeliverAddressList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeliverAddressList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeliverAddressList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliverAddressList.Merge(m, src)
}
func (m *DeliverAddressList) XXX_Size() int {
	return m.Size()
}
func (m *DeliverAddressList) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliverAddressList.DiscardUnknown(m)
}

var xxx_messageInfo_DeliverAddressList proto.InternalMessageInfo

func (m *DeliverAddressList) GetList() []*DeliverAddressInfo {
	if m != nil {
		return m.List
	}
	return nil
}

type DeliverAddressID struct {
	AddressId            *int64   `protobuf:"varint,1,req,name=address_id" json:"address_id,omitempty" bson:"address_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeliverAddressID) Reset()         { *m = DeliverAddressID{} }
func (m *DeliverAddressID) String() string { return proto.CompactTextString(m) }
func (*DeliverAddressID) ProtoMessage()    {}
func (*DeliverAddressID) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{36}
}
func (m *DeliverAddressID) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeliverAddressID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeliverAddressID.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeliverAddressID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliverAddressID.Merge(m, src)
}
func (m *DeliverAddressID) XXX_Size() int {
	return m.Size()
}
func (m *DeliverAddressID) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliverAddressID.DiscardUnknown(m)
}

var xxx_messageInfo_DeliverAddressID proto.InternalMessageInfo

func (m *DeliverAddressID) GetAddressId() int64 {
	if m != nil && m.AddressId != nil {
		return *m.AddressId
	}
	return 0
}

type DeliverAddressAddResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	AddressId            *int64   `protobuf:"varint,3,opt,name=address_id" json:"address_id,omitempty" bson:"address_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeliverAddressAddResult) Reset()         { *m = DeliverAddressAddResult{} }
func (m *DeliverAddressAddResult) String() string { return proto.CompactTextString(m) }
func (*DeliverAddressAddResult) ProtoMessage()    {}
func (*DeliverAddressAddResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{37}
}
func (m *DeliverAddressAddResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeliverAddressAddResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeliverAddressAddResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeliverAddressAddResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliverAddressAddResult.Merge(m, src)
}
func (m *DeliverAddressAddResult) XXX_Size() int {
	return m.Size()
}
func (m *DeliverAddressAddResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliverAddressAddResult.DiscardUnknown(m)
}

var xxx_messageInfo_DeliverAddressAddResult proto.InternalMessageInfo

func (m *DeliverAddressAddResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *DeliverAddressAddResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *DeliverAddressAddResult) GetAddressId() int64 {
	if m != nil && m.AddressId != nil {
		return *m.AddressId
	}
	return 0
}

type DeliverAddressRemoveResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeliverAddressRemoveResult) Reset()         { *m = DeliverAddressRemoveResult{} }
func (m *DeliverAddressRemoveResult) String() string { return proto.CompactTextString(m) }
func (*DeliverAddressRemoveResult) ProtoMessage()    {}
func (*DeliverAddressRemoveResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{38}
}
func (m *DeliverAddressRemoveResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeliverAddressRemoveResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeliverAddressRemoveResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeliverAddressRemoveResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliverAddressRemoveResult.Merge(m, src)
}
func (m *DeliverAddressRemoveResult) XXX_Size() int {
	return m.Size()
}
func (m *DeliverAddressRemoveResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliverAddressRemoveResult.DiscardUnknown(m)
}

var xxx_messageInfo_DeliverAddressRemoveResult proto.InternalMessageInfo

func (m *DeliverAddressRemoveResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *DeliverAddressRemoveResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type DeliverAddressEditResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeliverAddressEditResult) Reset()         { *m = DeliverAddressEditResult{} }
func (m *DeliverAddressEditResult) String() string { return proto.CompactTextString(m) }
func (*DeliverAddressEditResult) ProtoMessage()    {}
func (*DeliverAddressEditResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{39}
}
func (m *DeliverAddressEditResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeliverAddressEditResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeliverAddressEditResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeliverAddressEditResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliverAddressEditResult.Merge(m, src)
}
func (m *DeliverAddressEditResult) XXX_Size() int {
	return m.Size()
}
func (m *DeliverAddressEditResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliverAddressEditResult.DiscardUnknown(m)
}

var xxx_messageInfo_DeliverAddressEditResult proto.InternalMessageInfo

func (m *DeliverAddressEditResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *DeliverAddressEditResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type OrderDetailInfo struct {
	OrderId              *int64              `protobuf:"varint,1,req,name=order_id" json:"order_id,omitempty" bson:"order_id,omitempty"`
	Item                 *BuyItem            `protobuf:"bytes,2,req,name=item" json:"item,omitempty" bson:"item,omitempty"`
	State                *int32              `protobuf:"varint,3,req,name=state" json:"state,omitempty" bson:"state,omitempty"`
	Address              *ReceiveAddress     `protobuf:"bytes,4,opt,name=address" json:"address,omitempty" bson:"address,omitempty"`
	ExpressCode          *string             `protobuf:"bytes,5,opt,name=express_code" json:"express_code,omitempty" bson:"express_code,omitempty"`
	ExpressCom           *string             `protobuf:"bytes,6,opt,name=express_com" json:"express_com,omitempty" bson:"express_com,omitempty"`
	ExpressName          *string             `protobuf:"bytes,7,opt,name=express_name" json:"express_name,omitempty" bson:"express_name,omitempty"`
	CreateTime           *int64              `protobuf:"varint,8,opt,name=create_time" json:"create_time,omitempty" bson:"create_time,omitempty"`
	ServerNowTime        *int64              `protobuf:"varint,9,opt,name=server_now_time" json:"server_now_time,omitempty" bson:"server_now_time,omitempty"`
	PayTime              *int64              `protobuf:"varint,10,opt,name=pay_time" json:"pay_time,omitempty" bson:"pay_time,omitempty"`
	SendTime             *int64              `protobuf:"varint,11,opt,name=send_time" json:"send_time,omitempty" bson:"send_time,omitempty"`
	FinishTime           *int64              `protobuf:"varint,12,opt,name=finish_time" json:"finish_time,omitempty" bson:"finish_time,omitempty"`
	ExpressInfos         []*QueryExpressBody `protobuf:"bytes,13,rep,name=expressInfos" json:"expressInfos,omitempty" bson:"expressInfos,omitempty"`
	ExpressPhone         *string             `protobuf:"bytes,14,opt,name=expressPhone" json:"expressPhone,omitempty" bson:"expressPhone,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-" bson:"-"`
	XXX_unrecognized     []byte              `json:"-" bson:"-"`
	XXX_sizecache        int32               `json:"-" bson:"-"`
}

func (m *OrderDetailInfo) Reset()         { *m = OrderDetailInfo{} }
func (m *OrderDetailInfo) String() string { return proto.CompactTextString(m) }
func (*OrderDetailInfo) ProtoMessage()    {}
func (*OrderDetailInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{40}
}
func (m *OrderDetailInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OrderDetailInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OrderDetailInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OrderDetailInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderDetailInfo.Merge(m, src)
}
func (m *OrderDetailInfo) XXX_Size() int {
	return m.Size()
}
func (m *OrderDetailInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderDetailInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OrderDetailInfo proto.InternalMessageInfo

func (m *OrderDetailInfo) GetOrderId() int64 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

func (m *OrderDetailInfo) GetItem() *BuyItem {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *OrderDetailInfo) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *OrderDetailInfo) GetAddress() *ReceiveAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *OrderDetailInfo) GetExpressCode() string {
	if m != nil && m.ExpressCode != nil {
		return *m.ExpressCode
	}
	return ""
}

func (m *OrderDetailInfo) GetExpressCom() string {
	if m != nil && m.ExpressCom != nil {
		return *m.ExpressCom
	}
	return ""
}

func (m *OrderDetailInfo) GetExpressName() string {
	if m != nil && m.ExpressName != nil {
		return *m.ExpressName
	}
	return ""
}

func (m *OrderDetailInfo) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *OrderDetailInfo) GetServerNowTime() int64 {
	if m != nil && m.ServerNowTime != nil {
		return *m.ServerNowTime
	}
	return 0
}

func (m *OrderDetailInfo) GetPayTime() int64 {
	if m != nil && m.PayTime != nil {
		return *m.PayTime
	}
	return 0
}

func (m *OrderDetailInfo) GetSendTime() int64 {
	if m != nil && m.SendTime != nil {
		return *m.SendTime
	}
	return 0
}

func (m *OrderDetailInfo) GetFinishTime() int64 {
	if m != nil && m.FinishTime != nil {
		return *m.FinishTime
	}
	return 0
}

func (m *OrderDetailInfo) GetExpressInfos() []*QueryExpressBody {
	if m != nil {
		return m.ExpressInfos
	}
	return nil
}

func (m *OrderDetailInfo) GetExpressPhone() string {
	if m != nil && m.ExpressPhone != nil {
		return *m.ExpressPhone
	}
	return ""
}

type OrderDetailInfoShow struct {
	Result               *int32           `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string          `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	OrderDetailInfo      *OrderDetailInfo `protobuf:"bytes,3,opt,name=orderDetailInfo" json:"orderDetailInfo,omitempty" bson:"orderDetailInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-" bson:"-"`
	XXX_unrecognized     []byte           `json:"-" bson:"-"`
	XXX_sizecache        int32            `json:"-" bson:"-"`
}

func (m *OrderDetailInfoShow) Reset()         { *m = OrderDetailInfoShow{} }
func (m *OrderDetailInfoShow) String() string { return proto.CompactTextString(m) }
func (*OrderDetailInfoShow) ProtoMessage()    {}
func (*OrderDetailInfoShow) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{41}
}
func (m *OrderDetailInfoShow) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OrderDetailInfoShow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OrderDetailInfoShow.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OrderDetailInfoShow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderDetailInfoShow.Merge(m, src)
}
func (m *OrderDetailInfoShow) XXX_Size() int {
	return m.Size()
}
func (m *OrderDetailInfoShow) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderDetailInfoShow.DiscardUnknown(m)
}

var xxx_messageInfo_OrderDetailInfoShow proto.InternalMessageInfo

func (m *OrderDetailInfoShow) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *OrderDetailInfoShow) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *OrderDetailInfoShow) GetOrderDetailInfo() *OrderDetailInfo {
	if m != nil {
		return m.OrderDetailInfo
	}
	return nil
}

type ExpressMsg struct {
	Info                 *string  `protobuf:"bytes,1,opt,name=info" json:"info,omitempty" bson:"info,omitempty"`
	Time                 *int64   `protobuf:"varint,2,opt,name=time" json:"time,omitempty" bson:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ExpressMsg) Reset()         { *m = ExpressMsg{} }
func (m *ExpressMsg) String() string { return proto.CompactTextString(m) }
func (*ExpressMsg) ProtoMessage()    {}
func (*ExpressMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{42}
}
func (m *ExpressMsg) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExpressMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExpressMsg.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExpressMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpressMsg.Merge(m, src)
}
func (m *ExpressMsg) XXX_Size() int {
	return m.Size()
}
func (m *ExpressMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpressMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ExpressMsg proto.InternalMessageInfo

func (m *ExpressMsg) GetInfo() string {
	if m != nil && m.Info != nil {
		return *m.Info
	}
	return ""
}

func (m *ExpressMsg) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

type CancelOrderResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CancelOrderResult) Reset()         { *m = CancelOrderResult{} }
func (m *CancelOrderResult) String() string { return proto.CompactTextString(m) }
func (*CancelOrderResult) ProtoMessage()    {}
func (*CancelOrderResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{43}
}
func (m *CancelOrderResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CancelOrderResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CancelOrderResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CancelOrderResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelOrderResult.Merge(m, src)
}
func (m *CancelOrderResult) XXX_Size() int {
	return m.Size()
}
func (m *CancelOrderResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelOrderResult.DiscardUnknown(m)
}

var xxx_messageInfo_CancelOrderResult proto.InternalMessageInfo

func (m *CancelOrderResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *CancelOrderResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type DeleteOrderResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteOrderResult) Reset()         { *m = DeleteOrderResult{} }
func (m *DeleteOrderResult) String() string { return proto.CompactTextString(m) }
func (*DeleteOrderResult) ProtoMessage()    {}
func (*DeleteOrderResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{44}
}
func (m *DeleteOrderResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteOrderResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteOrderResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteOrderResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteOrderResult.Merge(m, src)
}
func (m *DeleteOrderResult) XXX_Size() int {
	return m.Size()
}
func (m *DeleteOrderResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteOrderResult.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteOrderResult proto.InternalMessageInfo

func (m *DeleteOrderResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *DeleteOrderResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type CheckoutResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	OrderId              *int64   `protobuf:"varint,3,opt,name=order_id" json:"order_id,omitempty" bson:"order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CheckoutResult) Reset()         { *m = CheckoutResult{} }
func (m *CheckoutResult) String() string { return proto.CompactTextString(m) }
func (*CheckoutResult) ProtoMessage()    {}
func (*CheckoutResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{45}
}
func (m *CheckoutResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckoutResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckoutResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CheckoutResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckoutResult.Merge(m, src)
}
func (m *CheckoutResult) XXX_Size() int {
	return m.Size()
}
func (m *CheckoutResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckoutResult.DiscardUnknown(m)
}

var xxx_messageInfo_CheckoutResult proto.InternalMessageInfo

func (m *CheckoutResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *CheckoutResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *CheckoutResult) GetOrderId() int64 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

type ShopItemID struct {
	ItemId               *int64   `protobuf:"varint,1,req,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ShopItemID) Reset()         { *m = ShopItemID{} }
func (m *ShopItemID) String() string { return proto.CompactTextString(m) }
func (*ShopItemID) ProtoMessage()    {}
func (*ShopItemID) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{46}
}
func (m *ShopItemID) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopItemID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopItemID.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopItemID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItemID.Merge(m, src)
}
func (m *ShopItemID) XXX_Size() int {
	return m.Size()
}
func (m *ShopItemID) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItemID.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItemID proto.InternalMessageInfo

func (m *ShopItemID) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type ShopItemInfo struct {
	ItemId               *int64        `protobuf:"varint,1,req,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	Flag                 *BuySell_Type `protobuf:"varint,2,req,name=flag,enum=share_message.BuySell_Type" json:"flag,omitempty" bson:"flag,omitempty"`
	PageViewFlag         *int32        `protobuf:"varint,3,opt,name=page_view_flag" json:"page_view_flag,omitempty" bson:"page_view_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-" bson:"-"`
	XXX_unrecognized     []byte        `json:"-" bson:"-"`
	XXX_sizecache        int32         `json:"-" bson:"-"`
}

func (m *ShopItemInfo) Reset()         { *m = ShopItemInfo{} }
func (m *ShopItemInfo) String() string { return proto.CompactTextString(m) }
func (*ShopItemInfo) ProtoMessage()    {}
func (*ShopItemInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{47}
}
func (m *ShopItemInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopItemInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopItemInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopItemInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItemInfo.Merge(m, src)
}
func (m *ShopItemInfo) XXX_Size() int {
	return m.Size()
}
func (m *ShopItemInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItemInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItemInfo proto.InternalMessageInfo

func (m *ShopItemInfo) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *ShopItemInfo) GetFlag() BuySell_Type {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return BuySell_Type_Buyer
}

func (m *ShopItemInfo) GetPageViewFlag() int32 {
	if m != nil && m.PageViewFlag != nil {
		return *m.PageViewFlag
	}
	return 0
}

type ShopItemType struct {
	Type *int32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty" bson:"type,omitempty"`
	// 手机 1
	// 农用物资 2
	// 生鲜水果 3
	// 童鞋 4
	// 园艺植物 5
	// 五金工具 6
	// 游戏 7
	// 电子零件 8
	// 动漫/周边 9
	//================ 图书 10(为了应对通联支付审核,目前页面删除,但不改变其他分类的type值)
	//================  宠物/用品  11(为了应对通联支付审核,目前页面删除,但不改变其他分类的type值)
	// 网络设备 12
	// 服饰配件 13
	// 家装/建材 14
	// 家纺布艺 15
	// 珠宝首饰 16
	// 钟表眼镜 17
	// 古董收藏 18
	// 女士鞋靴 19
	// 箱包 20
	// 男士鞋靴 21
	// 办公用品 22
	// 游戏设备 23
	// 运动户外 24
	// 实体卡/券/票 25
	// 工艺礼品 26
	//================  玩具乐器 27(为了应对通联支付审核,目前页面删除,但不改变其他分类的type值)
	//================ 母婴用品 28(为了应对通联支付审核,目前页面删除,但不改变其他分类的type值)
	// 童装 29
	// 女士服装 30
	// 家具 31
	// 居家用品 32
	// 家用电器 33
	//=============== 个护美妆 34(为了应对通联支付审核,目前页面删除,但不改变其他分类的type值)
	//=============== 保健护理 35(为了应对通联支付审核,目前页面删除,但不改变其他分类的type值)
	// 摩托车/用品 36
	// 自行车/用品 37
	// 汽车/用品 38
	// 电动车/用品 39
	// 3C数码 40
	// 男士服装 41
	// 其他闲置 42
	// 音像 43
	// 演艺/表演类门票 44
	// 点卡 45
	OtherType            []string `protobuf:"bytes,2,rep,name=other_type" json:"other_type,omitempty" bson:"other_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ShopItemType) Reset()         { *m = ShopItemType{} }
func (m *ShopItemType) String() string { return proto.CompactTextString(m) }
func (*ShopItemType) ProtoMessage()    {}
func (*ShopItemType) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{48}
}
func (m *ShopItemType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopItemType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopItemType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopItemType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItemType.Merge(m, src)
}
func (m *ShopItemType) XXX_Size() int {
	return m.Size()
}
func (m *ShopItemType) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItemType.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItemType proto.InternalMessageInfo

func (m *ShopItemType) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *ShopItemType) GetOtherType() []string {
	if m != nil {
		return m.OtherType
	}
	return nil
}

type ShopItemTypeName struct {
	TypeName *string `protobuf:"bytes,1,opt,name=typeName" json:"typeName,omitempty" bson:"typeName,omitempty"`
	// 手机 1
	// 农用物资 2
	// 生鲜水果 3
	// 童鞋 4
	// 园艺植物 5
	// 五金工具 6
	// 游戏 7
	// 电子零件 8
	// 动漫/周边 9
	//================ 图书 10(为了应对通联支付审核,目前页面删除,但不改变其他分类的type值)
	// ================宠物/用品  11(为了应对通联支付审核,目前页面删除,但不改变其他分类的type值)
	// 网络设备 12
	// 服饰配件 13
	// 家装/建材 14
	// 家纺布艺 15
	// 珠宝首饰 16
	// 钟表眼镜 17
	// 古董收藏 18
	// 女士鞋靴 19
	// 箱包 20
	// 男士鞋靴 21
	// 办公用品 22
	// 游戏设备 23
	// 运动户外 24
	// 实体卡/券/票 25
	// 工艺礼品 26
	//=============== 玩具乐器 27(为了应对通联支付审核,目前页面删除,但不改变其他分类的type值)
	//=============== 母婴用品 28(为了应对通联支付审核,目前页面删除,但不改变其他分类的type值)
	// 童装 29
	// 女士服装 30
	// 家具 31
	// 居家用品 32
	// 家用电器 33
	//=============== 个护美妆 34(为了应对通联支付审核,目前页面删除,但不改变其他分类的type值)
	//=============== 保健护理 35(为了应对通联支付审核,目前页面删除,但不改变其他分类的type值)
	// 摩托车/用品 36
	// 自行车/用品 37
	// 汽车/用品 38
	// 电动车/用品 39
	// 3C数码 40
	// 男士服装 41
	// 其他闲置 42
	// 音像 43
	// 演艺/表演类门票 44
	// 点卡 45
	OtherType            []string `protobuf:"bytes,2,rep,name=other_type" json:"other_type,omitempty" bson:"other_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ShopItemTypeName) Reset()         { *m = ShopItemTypeName{} }
func (m *ShopItemTypeName) String() string { return proto.CompactTextString(m) }
func (*ShopItemTypeName) ProtoMessage()    {}
func (*ShopItemTypeName) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{49}
}
func (m *ShopItemTypeName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopItemTypeName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopItemTypeName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopItemTypeName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItemTypeName.Merge(m, src)
}
func (m *ShopItemTypeName) XXX_Size() int {
	return m.Size()
}
func (m *ShopItemTypeName) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItemTypeName.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItemTypeName proto.InternalMessageInfo

func (m *ShopItemTypeName) GetTypeName() string {
	if m != nil && m.TypeName != nil {
		return *m.TypeName
	}
	return ""
}

func (m *ShopItemTypeName) GetOtherType() []string {
	if m != nil {
		return m.OtherType
	}
	return nil
}

type ShopItemUploadInfo struct {
	Title                *string           `protobuf:"bytes,1,req,name=title" json:"title,omitempty" bson:"title,omitempty"`
	ItemFiles            []*ItemFile       `protobuf:"bytes,2,rep,name=item_files" json:"item_files,omitempty" bson:"item_files,omitempty"`
	Price                *int32            `protobuf:"varint,3,req,name=price" json:"price,omitempty" bson:"price,omitempty"`
	OriginPrice          *int32            `protobuf:"varint,4,opt,name=origin_price" json:"origin_price,omitempty" bson:"origin_price,omitempty"`
	UserName             *string           `protobuf:"bytes,5,req,name=user_name" json:"user_name,omitempty" bson:"user_name,omitempty"`
	Phone                *string           `protobuf:"bytes,6,req,name=phone" json:"phone,omitempty" bson:"phone,omitempty"`
	Address              *string           `protobuf:"bytes,7,req,name=address" json:"address,omitempty" bson:"address,omitempty"`
	DetailAddress        *string           `protobuf:"bytes,8,req,name=detail_address" json:"detail_address,omitempty" bson:"detail_address,omitempty"`
	Type                 *ShopItemTypeName `protobuf:"bytes,9,req,name=type" json:"type,omitempty" bson:"type,omitempty"`
	StockCount           *int32            `protobuf:"varint,10,req,name=stock_count" json:"stock_count,omitempty" bson:"stock_count,omitempty"`
	Name                 *string           `protobuf:"bytes,11,req,name=name" json:"name,omitempty" bson:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *ShopItemUploadInfo) Reset()         { *m = ShopItemUploadInfo{} }
func (m *ShopItemUploadInfo) String() string { return proto.CompactTextString(m) }
func (*ShopItemUploadInfo) ProtoMessage()    {}
func (*ShopItemUploadInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{50}
}
func (m *ShopItemUploadInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopItemUploadInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopItemUploadInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopItemUploadInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItemUploadInfo.Merge(m, src)
}
func (m *ShopItemUploadInfo) XXX_Size() int {
	return m.Size()
}
func (m *ShopItemUploadInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItemUploadInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItemUploadInfo proto.InternalMessageInfo

func (m *ShopItemUploadInfo) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *ShopItemUploadInfo) GetItemFiles() []*ItemFile {
	if m != nil {
		return m.ItemFiles
	}
	return nil
}

func (m *ShopItemUploadInfo) GetPrice() int32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *ShopItemUploadInfo) GetOriginPrice() int32 {
	if m != nil && m.OriginPrice != nil {
		return *m.OriginPrice
	}
	return 0
}

func (m *ShopItemUploadInfo) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *ShopItemUploadInfo) GetPhone() string {
	if m != nil && m.Phone != nil {
		return *m.Phone
	}
	return ""
}

func (m *ShopItemUploadInfo) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *ShopItemUploadInfo) GetDetailAddress() string {
	if m != nil && m.DetailAddress != nil {
		return *m.DetailAddress
	}
	return ""
}

func (m *ShopItemUploadInfo) GetType() *ShopItemTypeName {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ShopItemUploadInfo) GetStockCount() int32 {
	if m != nil && m.StockCount != nil {
		return *m.StockCount
	}
	return 0
}

func (m *ShopItemUploadInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type ShopItemUploadResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	ItemId               *int64   `protobuf:"varint,3,opt,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ShopItemUploadResult) Reset()         { *m = ShopItemUploadResult{} }
func (m *ShopItemUploadResult) String() string { return proto.CompactTextString(m) }
func (*ShopItemUploadResult) ProtoMessage()    {}
func (*ShopItemUploadResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{51}
}
func (m *ShopItemUploadResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopItemUploadResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopItemUploadResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopItemUploadResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItemUploadResult.Merge(m, src)
}
func (m *ShopItemUploadResult) XXX_Size() int {
	return m.Size()
}
func (m *ShopItemUploadResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItemUploadResult.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItemUploadResult proto.InternalMessageInfo

func (m *ShopItemUploadResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *ShopItemUploadResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *ShopItemUploadResult) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type ShopItemDeleteResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ShopItemDeleteResult) Reset()         { *m = ShopItemDeleteResult{} }
func (m *ShopItemDeleteResult) String() string { return proto.CompactTextString(m) }
func (*ShopItemDeleteResult) ProtoMessage()    {}
func (*ShopItemDeleteResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{52}
}
func (m *ShopItemDeleteResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopItemDeleteResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopItemDeleteResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopItemDeleteResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItemDeleteResult.Merge(m, src)
}
func (m *ShopItemDeleteResult) XXX_Size() int {
	return m.Size()
}
func (m *ShopItemDeleteResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItemDeleteResult.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItemDeleteResult proto.InternalMessageInfo

func (m *ShopItemDeleteResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *ShopItemDeleteResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type ShopItemSoldOutResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ShopItemSoldOutResult) Reset()         { *m = ShopItemSoldOutResult{} }
func (m *ShopItemSoldOutResult) String() string { return proto.CompactTextString(m) }
func (*ShopItemSoldOutResult) ProtoMessage()    {}
func (*ShopItemSoldOutResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{53}
}
func (m *ShopItemSoldOutResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopItemSoldOutResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopItemSoldOutResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopItemSoldOutResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItemSoldOutResult.Merge(m, src)
}
func (m *ShopItemSoldOutResult) XXX_Size() int {
	return m.Size()
}
func (m *ShopItemSoldOutResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItemSoldOutResult.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItemSoldOutResult proto.InternalMessageInfo

func (m *ShopItemSoldOutResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *ShopItemSoldOutResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type ShopItemEditInfo struct {
	ItemId               *int64              `protobuf:"varint,1,req,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	Info                 *ShopItemUploadInfo `protobuf:"bytes,2,req,name=info" json:"info,omitempty" bson:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-" bson:"-"`
	XXX_unrecognized     []byte              `json:"-" bson:"-"`
	XXX_sizecache        int32               `json:"-" bson:"-"`
}

func (m *ShopItemEditInfo) Reset()         { *m = ShopItemEditInfo{} }
func (m *ShopItemEditInfo) String() string { return proto.CompactTextString(m) }
func (*ShopItemEditInfo) ProtoMessage()    {}
func (*ShopItemEditInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{54}
}
func (m *ShopItemEditInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopItemEditInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopItemEditInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopItemEditInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItemEditInfo.Merge(m, src)
}
func (m *ShopItemEditInfo) XXX_Size() int {
	return m.Size()
}
func (m *ShopItemEditInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItemEditInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItemEditInfo proto.InternalMessageInfo

func (m *ShopItemEditInfo) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *ShopItemEditInfo) GetInfo() *ShopItemUploadInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type ShopItemDetail struct {
	ItemId               *int64             `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	Price                *int32             `protobuf:"varint,2,opt,name=price" json:"price,omitempty" bson:"price,omitempty"`
	OriginPrice          *int32             `protobuf:"varint,3,opt,name=origin_price" json:"origin_price,omitempty" bson:"origin_price,omitempty"`
	ItemFiles            []*ItemFile        `protobuf:"bytes,4,rep,name=item_files" json:"item_files,omitempty" bson:"item_files,omitempty"`
	Title                *string            `protobuf:"bytes,5,opt,name=title" json:"title,omitempty" bson:"title,omitempty"`
	PlayerId             *int64             `protobuf:"varint,6,opt,name=player_id" json:"player_id,omitempty" bson:"player_id,omitempty"`
	Nickname             *string            `protobuf:"bytes,7,opt,name=nickname" json:"nickname,omitempty" bson:"nickname,omitempty"`
	Avatar               *string            `protobuf:"bytes,8,opt,name=avatar" json:"avatar,omitempty" bson:"avatar,omitempty"`
	ShortAddress         *string            `protobuf:"bytes,9,opt,name=short_address" json:"short_address,omitempty" bson:"short_address,omitempty"`
	StoreCount           *int32             `protobuf:"varint,10,opt,name=store_count" json:"store_count,omitempty" bson:"store_count,omitempty"`
	CreateTime           *int64             `protobuf:"varint,11,opt,name=create_time" json:"create_time,omitempty" bson:"create_time,omitempty"`
	Type                 *ShopItemType      `protobuf:"bytes,12,opt,name=type" json:"type,omitempty" bson:"type,omitempty"`
	StockCount           *int32             `protobuf:"varint,13,opt,name=stock_count" json:"stock_count,omitempty" bson:"stock_count,omitempty"`
	TimeLong             *string            `protobuf:"bytes,14,opt,name=time_long" json:"time_long,omitempty" bson:"time_long,omitempty"`
	Address              *string            `protobuf:"bytes,15,opt,name=address" json:"address,omitempty" bson:"address,omitempty"`
	DetailAddress        *string            `protobuf:"bytes,16,opt,name=detail_address" json:"detail_address,omitempty" bson:"detail_address,omitempty"`
	Name                 *string            `protobuf:"bytes,17,opt,name=name" json:"name,omitempty" bson:"name,omitempty"`
	Sex                  *int32             `protobuf:"varint,18,opt,name=sex" json:"sex,omitempty" bson:"sex,omitempty"`
	State                *int32             `protobuf:"varint,19,opt,name=state" json:"state,omitempty" bson:"state,omitempty"`
	UserName             *string            `protobuf:"bytes,20,opt,name=user_name" json:"user_name,omitempty" bson:"user_name,omitempty"`
	Phone                *string            `protobuf:"bytes,21,opt,name=phone" json:"phone,omitempty" bson:"phone,omitempty"`
	StoreFlag            *bool              `protobuf:"varint,22,opt,name=store_flag" json:"store_flag,omitempty" bson:"store_flag,omitempty"`
	PointCardName        *string            `protobuf:"bytes,23,opt,name=point_card_name" json:"point_card_name,omitempty" bson:"point_card_name,omitempty"`
	CopyName             *string            `protobuf:"bytes,24,opt,name=copy_name" json:"copy_name,omitempty" bson:"copy_name,omitempty"`
	RelatedShopItems     []*RelatedShopItem `protobuf:"bytes,25,rep,name=relatedShopItems" json:"relatedShopItems,omitempty" bson:"relatedShopItems,omitempty"`
	Types                *int32             `protobuf:"varint,26,opt,name=Types" json:"Types,omitempty" bson:"Types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-" bson:"-"`
	XXX_unrecognized     []byte             `json:"-" bson:"-"`
	XXX_sizecache        int32              `json:"-" bson:"-"`
}

func (m *ShopItemDetail) Reset()         { *m = ShopItemDetail{} }
func (m *ShopItemDetail) String() string { return proto.CompactTextString(m) }
func (*ShopItemDetail) ProtoMessage()    {}
func (*ShopItemDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{55}
}
func (m *ShopItemDetail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopItemDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopItemDetail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopItemDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItemDetail.Merge(m, src)
}
func (m *ShopItemDetail) XXX_Size() int {
	return m.Size()
}
func (m *ShopItemDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItemDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItemDetail proto.InternalMessageInfo

func (m *ShopItemDetail) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *ShopItemDetail) GetPrice() int32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *ShopItemDetail) GetOriginPrice() int32 {
	if m != nil && m.OriginPrice != nil {
		return *m.OriginPrice
	}
	return 0
}

func (m *ShopItemDetail) GetItemFiles() []*ItemFile {
	if m != nil {
		return m.ItemFiles
	}
	return nil
}

func (m *ShopItemDetail) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *ShopItemDetail) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *ShopItemDetail) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *ShopItemDetail) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

func (m *ShopItemDetail) GetShortAddress() string {
	if m != nil && m.ShortAddress != nil {
		return *m.ShortAddress
	}
	return ""
}

func (m *ShopItemDetail) GetStoreCount() int32 {
	if m != nil && m.StoreCount != nil {
		return *m.StoreCount
	}
	return 0
}

func (m *ShopItemDetail) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *ShopItemDetail) GetType() *ShopItemType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ShopItemDetail) GetStockCount() int32 {
	if m != nil && m.StockCount != nil {
		return *m.StockCount
	}
	return 0
}

func (m *ShopItemDetail) GetTimeLong() string {
	if m != nil && m.TimeLong != nil {
		return *m.TimeLong
	}
	return ""
}

func (m *ShopItemDetail) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *ShopItemDetail) GetDetailAddress() string {
	if m != nil && m.DetailAddress != nil {
		return *m.DetailAddress
	}
	return ""
}

func (m *ShopItemDetail) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ShopItemDetail) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *ShopItemDetail) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *ShopItemDetail) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *ShopItemDetail) GetPhone() string {
	if m != nil && m.Phone != nil {
		return *m.Phone
	}
	return ""
}

func (m *ShopItemDetail) GetStoreFlag() bool {
	if m != nil && m.StoreFlag != nil {
		return *m.StoreFlag
	}
	return false
}

func (m *ShopItemDetail) GetPointCardName() string {
	if m != nil && m.PointCardName != nil {
		return *m.PointCardName
	}
	return ""
}

func (m *ShopItemDetail) GetCopyName() string {
	if m != nil && m.CopyName != nil {
		return *m.CopyName
	}
	return ""
}

func (m *ShopItemDetail) GetRelatedShopItems() []*RelatedShopItem {
	if m != nil {
		return m.RelatedShopItems
	}
	return nil
}

func (m *ShopItemDetail) GetTypes() int32 {
	if m != nil && m.Types != nil {
		return *m.Types
	}
	return 0
}

type RelatedShopItem struct {
	ItemId               *int64      `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	ItemFiles            []*ItemFile `protobuf:"bytes,2,rep,name=item_files" json:"item_files,omitempty" bson:"item_files,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-" bson:"-"`
	XXX_unrecognized     []byte      `json:"-" bson:"-"`
	XXX_sizecache        int32       `json:"-" bson:"-"`
}

func (m *RelatedShopItem) Reset()         { *m = RelatedShopItem{} }
func (m *RelatedShopItem) String() string { return proto.CompactTextString(m) }
func (*RelatedShopItem) ProtoMessage()    {}
func (*RelatedShopItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{56}
}
func (m *RelatedShopItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RelatedShopItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RelatedShopItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RelatedShopItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelatedShopItem.Merge(m, src)
}
func (m *RelatedShopItem) XXX_Size() int {
	return m.Size()
}
func (m *RelatedShopItem) XXX_DiscardUnknown() {
	xxx_messageInfo_RelatedShopItem.DiscardUnknown(m)
}

var xxx_messageInfo_RelatedShopItem proto.InternalMessageInfo

func (m *RelatedShopItem) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *RelatedShopItem) GetItemFiles() []*ItemFile {
	if m != nil {
		return m.ItemFiles
	}
	return nil
}

type SellerInfo struct {
	Nickname             *string  `protobuf:"bytes,1,opt,name=nickname" json:"nickname,omitempty" bson:"nickname,omitempty"`
	Avatar               *string  `protobuf:"bytes,2,opt,name=avatar" json:"avatar,omitempty" bson:"avatar,omitempty"`
	RegisterDay          *int32   `protobuf:"varint,3,opt,name=register_day" json:"register_day,omitempty" bson:"register_day,omitempty"`
	SellItemCount        *int32   `protobuf:"varint,4,opt,name=sell_item_count" json:"sell_item_count,omitempty" bson:"sell_item_count,omitempty"`
	NameAuth             *int32   `protobuf:"varint,5,opt,name=name_auth" json:"name_auth,omitempty" bson:"name_auth,omitempty"`
	PlayerId             *int64   `protobuf:"varint,6,opt,name=player_id" json:"player_id,omitempty" bson:"player_id,omitempty"`
	Account              *string  `protobuf:"bytes,7,opt,name=account" json:"account,omitempty" bson:"account,omitempty"`
	Phone                *string  `protobuf:"bytes,8,opt,name=phone" json:"phone,omitempty" bson:"phone,omitempty"`
	Photo                *string  `protobuf:"bytes,9,opt,name=Photo" json:"Photo,omitempty" bson:"Photo,omitempty"`
	Signature            *string  `protobuf:"bytes,10,opt,name=Signature" json:"Signature,omitempty" bson:"Signature,omitempty"`
	Sex                  *int32   `protobuf:"varint,11,opt,name=sex" json:"sex,omitempty" bson:"sex,omitempty"`
	PaymentCount         *int32   `protobuf:"varint,12,opt,name=payment_count" json:"payment_count,omitempty" bson:"payment_count,omitempty"`
	PageViews            *int32   `protobuf:"varint,13,opt,name=page_views" json:"page_views,omitempty" bson:"page_views,omitempty"`
	Types                *int32   `protobuf:"varint,14,opt,name=Types" json:"Types,omitempty" bson:"Types,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *SellerInfo) Reset()         { *m = SellerInfo{} }
func (m *SellerInfo) String() string { return proto.CompactTextString(m) }
func (*SellerInfo) ProtoMessage()    {}
func (*SellerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{57}
}
func (m *SellerInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SellerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SellerInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SellerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SellerInfo.Merge(m, src)
}
func (m *SellerInfo) XXX_Size() int {
	return m.Size()
}
func (m *SellerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SellerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SellerInfo proto.InternalMessageInfo

func (m *SellerInfo) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *SellerInfo) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

func (m *SellerInfo) GetRegisterDay() int32 {
	if m != nil && m.RegisterDay != nil {
		return *m.RegisterDay
	}
	return 0
}

func (m *SellerInfo) GetSellItemCount() int32 {
	if m != nil && m.SellItemCount != nil {
		return *m.SellItemCount
	}
	return 0
}

func (m *SellerInfo) GetNameAuth() int32 {
	if m != nil && m.NameAuth != nil {
		return *m.NameAuth
	}
	return 0
}

func (m *SellerInfo) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *SellerInfo) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *SellerInfo) GetPhone() string {
	if m != nil && m.Phone != nil {
		return *m.Phone
	}
	return ""
}

func (m *SellerInfo) GetPhoto() string {
	if m != nil && m.Photo != nil {
		return *m.Photo
	}
	return ""
}

func (m *SellerInfo) GetSignature() string {
	if m != nil && m.Signature != nil {
		return *m.Signature
	}
	return ""
}

func (m *SellerInfo) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *SellerInfo) GetPaymentCount() int32 {
	if m != nil && m.PaymentCount != nil {
		return *m.PaymentCount
	}
	return 0
}

func (m *SellerInfo) GetPageViews() int32 {
	if m != nil && m.PageViews != nil {
		return *m.PageViews
	}
	return 0
}

func (m *SellerInfo) GetTypes() int32 {
	if m != nil && m.Types != nil {
		return *m.Types
	}
	return 0
}

type ShopItemShowDetail struct {
	Result               *int32             `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string            `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	ShopItemDetail       *ShopItemDetail    `protobuf:"bytes,3,opt,name=shopItemDetail" json:"shopItemDetail,omitempty" bson:"shopItemDetail,omitempty"`
	SellerInfo           *SellerInfo        `protobuf:"bytes,4,opt,name=sellerInfo" json:"sellerInfo,omitempty" bson:"sellerInfo,omitempty"`
	CommentInfo          *CommInfoForDetail `protobuf:"bytes,5,opt,name=commentInfo" json:"commentInfo,omitempty" bson:"commentInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-" bson:"-"`
	XXX_unrecognized     []byte             `json:"-" bson:"-"`
	XXX_sizecache        int32              `json:"-" bson:"-"`
}

func (m *ShopItemShowDetail) Reset()         { *m = ShopItemShowDetail{} }
func (m *ShopItemShowDetail) String() string { return proto.CompactTextString(m) }
func (*ShopItemShowDetail) ProtoMessage()    {}
func (*ShopItemShowDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{58}
}
func (m *ShopItemShowDetail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopItemShowDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopItemShowDetail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopItemShowDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItemShowDetail.Merge(m, src)
}
func (m *ShopItemShowDetail) XXX_Size() int {
	return m.Size()
}
func (m *ShopItemShowDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItemShowDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItemShowDetail proto.InternalMessageInfo

func (m *ShopItemShowDetail) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *ShopItemShowDetail) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *ShopItemShowDetail) GetShopItemDetail() *ShopItemDetail {
	if m != nil {
		return m.ShopItemDetail
	}
	return nil
}

func (m *ShopItemShowDetail) GetSellerInfo() *SellerInfo {
	if m != nil {
		return m.SellerInfo
	}
	return nil
}

func (m *ShopItemShowDetail) GetCommentInfo() *CommInfoForDetail {
	if m != nil {
		return m.CommentInfo
	}
	return nil
}

type CommInfoForDetail struct {
	CommentInfo          *CommentInfo `protobuf:"bytes,1,opt,name=comment_info" json:"comment_info,omitempty" bson:"comment_info,omitempty"`
	CommentCount         *int32       `protobuf:"varint,2,opt,name=comment_count" json:"comment_count,omitempty" bson:"comment_count,omitempty"`
	GoodCommentRate      *int32       `protobuf:"varint,3,opt,name=good_comment_rate" json:"good_comment_rate,omitempty" bson:"good_comment_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-" bson:"-"`
	XXX_unrecognized     []byte       `json:"-" bson:"-"`
	XXX_sizecache        int32        `json:"-" bson:"-"`
}

func (m *CommInfoForDetail) Reset()         { *m = CommInfoForDetail{} }
func (m *CommInfoForDetail) String() string { return proto.CompactTextString(m) }
func (*CommInfoForDetail) ProtoMessage()    {}
func (*CommInfoForDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{59}
}
func (m *CommInfoForDetail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CommInfoForDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CommInfoForDetail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CommInfoForDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommInfoForDetail.Merge(m, src)
}
func (m *CommInfoForDetail) XXX_Size() int {
	return m.Size()
}
func (m *CommInfoForDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_CommInfoForDetail.DiscardUnknown(m)
}

var xxx_messageInfo_CommInfoForDetail proto.InternalMessageInfo

func (m *CommInfoForDetail) GetCommentInfo() *CommentInfo {
	if m != nil {
		return m.CommentInfo
	}
	return nil
}

func (m *CommInfoForDetail) GetCommentCount() int32 {
	if m != nil && m.CommentCount != nil {
		return *m.CommentCount
	}
	return 0
}

func (m *CommInfoForDetail) GetGoodCommentRate() int32 {
	if m != nil && m.GoodCommentRate != nil {
		return *m.GoodCommentRate
	}
	return 0
}

type CommentInfo struct {
	CommentId            *int64   `protobuf:"varint,1,opt,name=comment_id" json:"comment_id,omitempty" bson:"comment_id,omitempty"`
	PlayerId             *int64   `protobuf:"varint,2,opt,name=player_id" json:"player_id,omitempty" bson:"player_id,omitempty"`
	Avatar               *string  `protobuf:"bytes,3,opt,name=avatar" json:"avatar,omitempty" bson:"avatar,omitempty"`
	Nickname             *string  `protobuf:"bytes,4,opt,name=nickname" json:"nickname,omitempty" bson:"nickname,omitempty"`
	Content              *string  `protobuf:"bytes,5,opt,name=content" json:"content,omitempty" bson:"content,omitempty"`
	ItemId               *int64   `protobuf:"varint,6,opt,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	TimeLong             *string  `protobuf:"bytes,7,opt,name=time_long" json:"time_long,omitempty" bson:"time_long,omitempty"`
	Sex                  *int32   `protobuf:"varint,8,opt,name=sex" json:"sex,omitempty" bson:"sex,omitempty"`
	StarLevel            *int32   `protobuf:"varint,9,opt,name=star_level" json:"star_level,omitempty" bson:"star_level,omitempty"`
	LikeCount            *int32   `protobuf:"varint,10,opt,name=like_count" json:"like_count,omitempty" bson:"like_count,omitempty"`
	ReContent            *string  `protobuf:"bytes,11,opt,name=reContent" json:"reContent,omitempty" bson:"reContent,omitempty"`
	Status               *int32   `protobuf:"varint,12,opt,name=status" json:"status,omitempty" bson:"status,omitempty"`
	ReTime               *string  `protobuf:"bytes,13,opt,name=re_time" json:"re_time,omitempty" bson:"re_time,omitempty"`
	IsLike               *bool    `protobuf:"varint,14,opt,name=isLike" json:"isLike,omitempty" bson:"isLike,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CommentInfo) Reset()         { *m = CommentInfo{} }
func (m *CommentInfo) String() string { return proto.CompactTextString(m) }
func (*CommentInfo) ProtoMessage()    {}
func (*CommentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{60}
}
func (m *CommentInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CommentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CommentInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CommentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommentInfo.Merge(m, src)
}
func (m *CommentInfo) XXX_Size() int {
	return m.Size()
}
func (m *CommentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CommentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CommentInfo proto.InternalMessageInfo

func (m *CommentInfo) GetCommentId() int64 {
	if m != nil && m.CommentId != nil {
		return *m.CommentId
	}
	return 0
}

func (m *CommentInfo) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CommentInfo) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

func (m *CommentInfo) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *CommentInfo) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func (m *CommentInfo) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CommentInfo) GetTimeLong() string {
	if m != nil && m.TimeLong != nil {
		return *m.TimeLong
	}
	return ""
}

func (m *CommentInfo) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *CommentInfo) GetStarLevel() int32 {
	if m != nil && m.StarLevel != nil {
		return *m.StarLevel
	}
	return 0
}

func (m *CommentInfo) GetLikeCount() int32 {
	if m != nil && m.LikeCount != nil {
		return *m.LikeCount
	}
	return 0
}

func (m *CommentInfo) GetReContent() string {
	if m != nil && m.ReContent != nil {
		return *m.ReContent
	}
	return ""
}

func (m *CommentInfo) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *CommentInfo) GetReTime() string {
	if m != nil && m.ReTime != nil {
		return *m.ReTime
	}
	return ""
}

func (m *CommentInfo) GetIsLike() bool {
	if m != nil && m.IsLike != nil {
		return *m.IsLike
	}
	return false
}

type UploadComment struct {
	ItemId               *int64   `protobuf:"varint,1,req,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	Content              *string  `protobuf:"bytes,2,req,name=content" json:"content,omitempty" bson:"content,omitempty"`
	Sponsor_Id           *int64   `protobuf:"varint,3,req,name=sponsor_Id" json:"sponsor_Id,omitempty" bson:"sponsor_Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UploadComment) Reset()         { *m = UploadComment{} }
func (m *UploadComment) String() string { return proto.CompactTextString(m) }
func (*UploadComment) ProtoMessage()    {}
func (*UploadComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{61}
}
func (m *UploadComment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UploadComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UploadComment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UploadComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadComment.Merge(m, src)
}
func (m *UploadComment) XXX_Size() int {
	return m.Size()
}
func (m *UploadComment) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadComment.DiscardUnknown(m)
}

var xxx_messageInfo_UploadComment proto.InternalMessageInfo

func (m *UploadComment) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *UploadComment) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func (m *UploadComment) GetSponsor_Id() int64 {
	if m != nil && m.Sponsor_Id != nil {
		return *m.Sponsor_Id
	}
	return 0
}

type UploadEvalute struct {
	ItemId               *int64   `protobuf:"varint,1,req,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	Content              *string  `protobuf:"bytes,2,req,name=content" json:"content,omitempty" bson:"content,omitempty"`
	OrderId              *int64   `protobuf:"varint,3,req,name=order_id" json:"order_id,omitempty" bson:"order_id,omitempty"`
	StarLevel            *int32   `protobuf:"varint,4,req,name=star_level" json:"star_level,omitempty" bson:"star_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UploadEvalute) Reset()         { *m = UploadEvalute{} }
func (m *UploadEvalute) String() string { return proto.CompactTextString(m) }
func (*UploadEvalute) ProtoMessage()    {}
func (*UploadEvalute) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{62}
}
func (m *UploadEvalute) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UploadEvalute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UploadEvalute.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UploadEvalute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadEvalute.Merge(m, src)
}
func (m *UploadEvalute) XXX_Size() int {
	return m.Size()
}
func (m *UploadEvalute) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadEvalute.DiscardUnknown(m)
}

var xxx_messageInfo_UploadEvalute proto.InternalMessageInfo

func (m *UploadEvalute) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *UploadEvalute) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func (m *UploadEvalute) GetOrderId() int64 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

func (m *UploadEvalute) GetStarLevel() int32 {
	if m != nil && m.StarLevel != nil {
		return *m.StarLevel
	}
	return 0
}

type UploadCommentResult struct {
	Result               *int32             `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string            `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	Comment              *CommInfoForDetail `protobuf:"bytes,3,opt,name=comment" json:"comment,omitempty" bson:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-" bson:"-"`
	XXX_unrecognized     []byte             `json:"-" bson:"-"`
	XXX_sizecache        int32              `json:"-" bson:"-"`
}

func (m *UploadCommentResult) Reset()         { *m = UploadCommentResult{} }
func (m *UploadCommentResult) String() string { return proto.CompactTextString(m) }
func (*UploadCommentResult) ProtoMessage()    {}
func (*UploadCommentResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{63}
}
func (m *UploadCommentResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UploadCommentResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UploadCommentResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UploadCommentResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadCommentResult.Merge(m, src)
}
func (m *UploadCommentResult) XXX_Size() int {
	return m.Size()
}
func (m *UploadCommentResult) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadCommentResult.DiscardUnknown(m)
}

var xxx_messageInfo_UploadCommentResult proto.InternalMessageInfo

func (m *UploadCommentResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *UploadCommentResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *UploadCommentResult) GetComment() *CommInfoForDetail {
	if m != nil {
		return m.Comment
	}
	return nil
}

type LikeCommentResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *LikeCommentResult) Reset()         { *m = LikeCommentResult{} }
func (m *LikeCommentResult) String() string { return proto.CompactTextString(m) }
func (*LikeCommentResult) ProtoMessage()    {}
func (*LikeCommentResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{64}
}
func (m *LikeCommentResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LikeCommentResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LikeCommentResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LikeCommentResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LikeCommentResult.Merge(m, src)
}
func (m *LikeCommentResult) XXX_Size() int {
	return m.Size()
}
func (m *LikeCommentResult) XXX_DiscardUnknown() {
	xxx_messageInfo_LikeCommentResult.DiscardUnknown(m)
}

var xxx_messageInfo_LikeCommentResult proto.InternalMessageInfo

func (m *LikeCommentResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *LikeCommentResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type LikeCommentInfo struct {
	CommentId            *int64   `protobuf:"varint,1,req,name=comment_id" json:"comment_id,omitempty" bson:"comment_id,omitempty"`
	LikeType             *bool    `protobuf:"varint,2,req,name=like_type" json:"like_type,omitempty" bson:"like_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *LikeCommentInfo) Reset()         { *m = LikeCommentInfo{} }
func (m *LikeCommentInfo) String() string { return proto.CompactTextString(m) }
func (*LikeCommentInfo) ProtoMessage()    {}
func (*LikeCommentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{65}
}
func (m *LikeCommentInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LikeCommentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LikeCommentInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LikeCommentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LikeCommentInfo.Merge(m, src)
}
func (m *LikeCommentInfo) XXX_Size() int {
	return m.Size()
}
func (m *LikeCommentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LikeCommentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LikeCommentInfo proto.InternalMessageInfo

func (m *LikeCommentInfo) GetCommentId() int64 {
	if m != nil && m.CommentId != nil {
		return *m.CommentId
	}
	return 0
}

func (m *LikeCommentInfo) GetLikeType() bool {
	if m != nil && m.LikeType != nil {
		return *m.LikeType
	}
	return false
}

type ShopCommentList struct {
	ItemId               *int64         `protobuf:"varint,1,req,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	Sponsor_Id           *int64         `protobuf:"varint,2,req,name=sponsor_Id" json:"sponsor_Id,omitempty" bson:"sponsor_Id,omitempty"`
	QueryCon             *CommQuery_Con `protobuf:"varint,3,req,name=queryCon,enum=share_message.CommQuery_Con" json:"queryCon,omitempty" bson:"queryCon,omitempty"`
	Page                 *int32         `protobuf:"varint,4,req,name=page" json:"page,omitempty" bson:"page,omitempty"`
	PageSize             *int32         `protobuf:"varint,5,req,name=page_size" json:"page_size,omitempty" bson:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-" bson:"-"`
	XXX_unrecognized     []byte         `json:"-" bson:"-"`
	XXX_sizecache        int32          `json:"-" bson:"-"`
}

func (m *ShopCommentList) Reset()         { *m = ShopCommentList{} }
func (m *ShopCommentList) String() string { return proto.CompactTextString(m) }
func (*ShopCommentList) ProtoMessage()    {}
func (*ShopCommentList) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{66}
}
func (m *ShopCommentList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopCommentList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopCommentList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopCommentList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopCommentList.Merge(m, src)
}
func (m *ShopCommentList) XXX_Size() int {
	return m.Size()
}
func (m *ShopCommentList) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopCommentList.DiscardUnknown(m)
}

var xxx_messageInfo_ShopCommentList proto.InternalMessageInfo

func (m *ShopCommentList) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *ShopCommentList) GetSponsor_Id() int64 {
	if m != nil && m.Sponsor_Id != nil {
		return *m.Sponsor_Id
	}
	return 0
}

func (m *ShopCommentList) GetQueryCon() CommQuery_Con {
	if m != nil && m.QueryCon != nil {
		return *m.QueryCon
	}
	return CommQuery_Con_ALL
}

func (m *ShopCommentList) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *ShopCommentList) GetPageSize() int32 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return 0
}

type ShopCommentListResult struct {
	Result               *int32         `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string        `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	Comments             []*CommentInfo `protobuf:"bytes,3,rep,name=comments" json:"comments,omitempty" bson:"comments,omitempty"`
	AllCommCount         *int32         `protobuf:"varint,4,opt,name=AllCommCount" json:"AllCommCount,omitempty" bson:"AllCommCount,omitempty"`
	Page                 *int32         `protobuf:"varint,5,opt,name=page" json:"page,omitempty" bson:"page,omitempty"`
	PageSize             *int32         `protobuf:"varint,6,opt,name=page_size" json:"page_size,omitempty" bson:"page_size,omitempty"`
	Count                *int32         `protobuf:"varint,7,opt,name=count" json:"count,omitempty" bson:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-" bson:"-"`
	XXX_unrecognized     []byte         `json:"-" bson:"-"`
	XXX_sizecache        int32          `json:"-" bson:"-"`
}

func (m *ShopCommentListResult) Reset()         { *m = ShopCommentListResult{} }
func (m *ShopCommentListResult) String() string { return proto.CompactTextString(m) }
func (*ShopCommentListResult) ProtoMessage()    {}
func (*ShopCommentListResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{67}
}
func (m *ShopCommentListResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopCommentListResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopCommentListResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopCommentListResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopCommentListResult.Merge(m, src)
}
func (m *ShopCommentListResult) XXX_Size() int {
	return m.Size()
}
func (m *ShopCommentListResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopCommentListResult.DiscardUnknown(m)
}

var xxx_messageInfo_ShopCommentListResult proto.InternalMessageInfo

func (m *ShopCommentListResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *ShopCommentListResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *ShopCommentListResult) GetComments() []*CommentInfo {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *ShopCommentListResult) GetAllCommCount() int32 {
	if m != nil && m.AllCommCount != nil {
		return *m.AllCommCount
	}
	return 0
}

func (m *ShopCommentListResult) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *ShopCommentListResult) GetPageSize() int32 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return 0
}

func (m *ShopCommentListResult) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type ExpressCodeResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ExpressCodeResult) Reset()         { *m = ExpressCodeResult{} }
func (m *ExpressCodeResult) String() string { return proto.CompactTextString(m) }
func (*ExpressCodeResult) ProtoMessage()    {}
func (*ExpressCodeResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{68}
}
func (m *ExpressCodeResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExpressCodeResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExpressCodeResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExpressCodeResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpressCodeResult.Merge(m, src)
}
func (m *ExpressCodeResult) XXX_Size() int {
	return m.Size()
}
func (m *ExpressCodeResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpressCodeResult.DiscardUnknown(m)
}

var xxx_messageInfo_ExpressCodeResult proto.InternalMessageInfo

func (m *ExpressCodeResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *ExpressCodeResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type StoreItemList struct {
	Result               *int32      `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string     `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	StoreItems           []*ShopItem `protobuf:"bytes,3,rep,name=storeItems" json:"storeItems,omitempty" bson:"storeItems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-" bson:"-"`
	XXX_unrecognized     []byte      `json:"-" bson:"-"`
	XXX_sizecache        int32       `json:"-" bson:"-"`
}

func (m *StoreItemList) Reset()         { *m = StoreItemList{} }
func (m *StoreItemList) String() string { return proto.CompactTextString(m) }
func (*StoreItemList) ProtoMessage()    {}
func (*StoreItemList) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{69}
}
func (m *StoreItemList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StoreItemList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StoreItemList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StoreItemList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreItemList.Merge(m, src)
}
func (m *StoreItemList) XXX_Size() int {
	return m.Size()
}
func (m *StoreItemList) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreItemList.DiscardUnknown(m)
}

var xxx_messageInfo_StoreItemList proto.InternalMessageInfo

func (m *StoreItemList) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *StoreItemList) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *StoreItemList) GetStoreItems() []*ShopItem {
	if m != nil {
		return m.StoreItems
	}
	return nil
}

type AddStoreResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	ItemId               *int64   `protobuf:"varint,3,opt,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *AddStoreResult) Reset()         { *m = AddStoreResult{} }
func (m *AddStoreResult) String() string { return proto.CompactTextString(m) }
func (*AddStoreResult) ProtoMessage()    {}
func (*AddStoreResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{70}
}
func (m *AddStoreResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddStoreResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddStoreResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddStoreResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddStoreResult.Merge(m, src)
}
func (m *AddStoreResult) XXX_Size() int {
	return m.Size()
}
func (m *AddStoreResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AddStoreResult.DiscardUnknown(m)
}

var xxx_messageInfo_AddStoreResult proto.InternalMessageInfo

func (m *AddStoreResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *AddStoreResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *AddStoreResult) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type RemoveStoreResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *RemoveStoreResult) Reset()         { *m = RemoveStoreResult{} }
func (m *RemoveStoreResult) String() string { return proto.CompactTextString(m) }
func (*RemoveStoreResult) ProtoMessage()    {}
func (*RemoveStoreResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{71}
}
func (m *RemoveStoreResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RemoveStoreResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RemoveStoreResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RemoveStoreResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveStoreResult.Merge(m, src)
}
func (m *RemoveStoreResult) XXX_Size() int {
	return m.Size()
}
func (m *RemoveStoreResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveStoreResult.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveStoreResult proto.InternalMessageInfo

func (m *RemoveStoreResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *RemoveStoreResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type BatchAddStoreResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *BatchAddStoreResult) Reset()         { *m = BatchAddStoreResult{} }
func (m *BatchAddStoreResult) String() string { return proto.CompactTextString(m) }
func (*BatchAddStoreResult) ProtoMessage()    {}
func (*BatchAddStoreResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{72}
}
func (m *BatchAddStoreResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BatchAddStoreResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BatchAddStoreResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BatchAddStoreResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchAddStoreResult.Merge(m, src)
}
func (m *BatchAddStoreResult) XXX_Size() int {
	return m.Size()
}
func (m *BatchAddStoreResult) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchAddStoreResult.DiscardUnknown(m)
}

var xxx_messageInfo_BatchAddStoreResult proto.InternalMessageInfo

func (m *BatchAddStoreResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *BatchAddStoreResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type CartItem struct {
	ItemId               *int64    `protobuf:"varint,1,req,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	Title                *string   `protobuf:"bytes,2,req,name=title" json:"title,omitempty" bson:"title,omitempty"`
	ItemFile             *ItemFile `protobuf:"bytes,3,req,name=item_file" json:"item_file,omitempty" bson:"item_file,omitempty"`
	Price                *int32    `protobuf:"varint,4,opt,name=price" json:"price,omitempty" bson:"price,omitempty"`
	AddCount             *int32    `protobuf:"varint,5,opt,name=add_count" json:"add_count,omitempty" bson:"add_count,omitempty"`
	OriginPrice          *int32    `protobuf:"varint,6,opt,name=origin_price" json:"origin_price,omitempty" bson:"origin_price,omitempty"`
	Name                 *string   `protobuf:"bytes,7,opt,name=name" json:"name,omitempty" bson:"name,omitempty"`
	Flag                 *int32    `protobuf:"varint,8,opt,name=flag" json:"flag,omitempty" bson:"flag,omitempty"`
	ErrContent           *string   `protobuf:"bytes,9,opt,name=err_content" json:"err_content,omitempty" bson:"err_content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" bson:"-"`
	XXX_unrecognized     []byte    `json:"-" bson:"-"`
	XXX_sizecache        int32     `json:"-" bson:"-"`
}

func (m *CartItem) Reset()         { *m = CartItem{} }
func (m *CartItem) String() string { return proto.CompactTextString(m) }
func (*CartItem) ProtoMessage()    {}
func (*CartItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{73}
}
func (m *CartItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CartItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CartItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CartItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CartItem.Merge(m, src)
}
func (m *CartItem) XXX_Size() int {
	return m.Size()
}
func (m *CartItem) XXX_DiscardUnknown() {
	xxx_messageInfo_CartItem.DiscardUnknown(m)
}

var xxx_messageInfo_CartItem proto.InternalMessageInfo

func (m *CartItem) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CartItem) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *CartItem) GetItemFile() *ItemFile {
	if m != nil {
		return m.ItemFile
	}
	return nil
}

func (m *CartItem) GetPrice() int32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *CartItem) GetAddCount() int32 {
	if m != nil && m.AddCount != nil {
		return *m.AddCount
	}
	return 0
}

func (m *CartItem) GetOriginPrice() int32 {
	if m != nil && m.OriginPrice != nil {
		return *m.OriginPrice
	}
	return 0
}

func (m *CartItem) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CartItem) GetFlag() int32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *CartItem) GetErrContent() string {
	if m != nil && m.ErrContent != nil {
		return *m.ErrContent
	}
	return ""
}

type CartItemInfo struct {
	CartItems            []*CartItem `protobuf:"bytes,1,rep,name=cartItems" json:"cartItems,omitempty" bson:"cartItems,omitempty"`
	SellerPlayerId       *int64      `protobuf:"varint,2,opt,name=seller_playerId" json:"seller_playerId,omitempty" bson:"seller_playerId,omitempty"`
	SellerNickName       *string     `protobuf:"bytes,3,opt,name=seller_nickName" json:"seller_nickName,omitempty" bson:"seller_nickName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-" bson:"-"`
	XXX_unrecognized     []byte      `json:"-" bson:"-"`
	XXX_sizecache        int32       `json:"-" bson:"-"`
}

func (m *CartItemInfo) Reset()         { *m = CartItemInfo{} }
func (m *CartItemInfo) String() string { return proto.CompactTextString(m) }
func (*CartItemInfo) ProtoMessage()    {}
func (*CartItemInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{74}
}
func (m *CartItemInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CartItemInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CartItemInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CartItemInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CartItemInfo.Merge(m, src)
}
func (m *CartItemInfo) XXX_Size() int {
	return m.Size()
}
func (m *CartItemInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CartItemInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CartItemInfo proto.InternalMessageInfo

func (m *CartItemInfo) GetCartItems() []*CartItem {
	if m != nil {
		return m.CartItems
	}
	return nil
}

func (m *CartItemInfo) GetSellerPlayerId() int64 {
	if m != nil && m.SellerPlayerId != nil {
		return *m.SellerPlayerId
	}
	return 0
}

func (m *CartItemInfo) GetSellerNickName() string {
	if m != nil && m.SellerNickName != nil {
		return *m.SellerNickName
	}
	return ""
}

type CartItemInfoList struct {
	CartItemInfos        []*CartItemInfo `protobuf:"bytes,1,rep,name=cartItemInfos" json:"cartItemInfos,omitempty" bson:"cartItemInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *CartItemInfoList) Reset()         { *m = CartItemInfoList{} }
func (m *CartItemInfoList) String() string { return proto.CompactTextString(m) }
func (*CartItemInfoList) ProtoMessage()    {}
func (*CartItemInfoList) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{75}
}
func (m *CartItemInfoList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CartItemInfoList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CartItemInfoList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CartItemInfoList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CartItemInfoList.Merge(m, src)
}
func (m *CartItemInfoList) XXX_Size() int {
	return m.Size()
}
func (m *CartItemInfoList) XXX_DiscardUnknown() {
	xxx_messageInfo_CartItemInfoList.DiscardUnknown(m)
}

var xxx_messageInfo_CartItemInfoList proto.InternalMessageInfo

func (m *CartItemInfoList) GetCartItemInfos() []*CartItemInfo {
	if m != nil {
		return m.CartItemInfos
	}
	return nil
}

type AddCartResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	ItemId               *int64   `protobuf:"varint,3,opt,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	AddCount             *int32   `protobuf:"varint,4,opt,name=add_count" json:"add_count,omitempty" bson:"add_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *AddCartResult) Reset()         { *m = AddCartResult{} }
func (m *AddCartResult) String() string { return proto.CompactTextString(m) }
func (*AddCartResult) ProtoMessage()    {}
func (*AddCartResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{76}
}
func (m *AddCartResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddCartResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddCartResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddCartResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCartResult.Merge(m, src)
}
func (m *AddCartResult) XXX_Size() int {
	return m.Size()
}
func (m *AddCartResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCartResult.DiscardUnknown(m)
}

var xxx_messageInfo_AddCartResult proto.InternalMessageInfo

func (m *AddCartResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *AddCartResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *AddCartResult) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *AddCartResult) GetAddCount() int32 {
	if m != nil && m.AddCount != nil {
		return *m.AddCount
	}
	return 0
}

type SubCartResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	ItemId               *int64   `protobuf:"varint,3,opt,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	AddCount             *int32   `protobuf:"varint,4,opt,name=add_count" json:"add_count,omitempty" bson:"add_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *SubCartResult) Reset()         { *m = SubCartResult{} }
func (m *SubCartResult) String() string { return proto.CompactTextString(m) }
func (*SubCartResult) ProtoMessage()    {}
func (*SubCartResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{77}
}
func (m *SubCartResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SubCartResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SubCartResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SubCartResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubCartResult.Merge(m, src)
}
func (m *SubCartResult) XXX_Size() int {
	return m.Size()
}
func (m *SubCartResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SubCartResult.DiscardUnknown(m)
}

var xxx_messageInfo_SubCartResult proto.InternalMessageInfo

func (m *SubCartResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *SubCartResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *SubCartResult) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *SubCartResult) GetAddCount() int32 {
	if m != nil && m.AddCount != nil {
		return *m.AddCount
	}
	return 0
}

type ItemIdList struct {
	ItemIds              []int64  `protobuf:"varint,1,rep,name=itemIds" json:"itemIds,omitempty" bson:"itemIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ItemIdList) Reset()         { *m = ItemIdList{} }
func (m *ItemIdList) String() string { return proto.CompactTextString(m) }
func (*ItemIdList) ProtoMessage()    {}
func (*ItemIdList) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{78}
}
func (m *ItemIdList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ItemIdList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ItemIdList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ItemIdList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemIdList.Merge(m, src)
}
func (m *ItemIdList) XXX_Size() int {
	return m.Size()
}
func (m *ItemIdList) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemIdList.DiscardUnknown(m)
}

var xxx_messageInfo_ItemIdList proto.InternalMessageInfo

func (m *ItemIdList) GetItemIds() []int64 {
	if m != nil {
		return m.ItemIds
	}
	return nil
}

type RemoveCartResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *RemoveCartResult) Reset()         { *m = RemoveCartResult{} }
func (m *RemoveCartResult) String() string { return proto.CompactTextString(m) }
func (*RemoveCartResult) ProtoMessage()    {}
func (*RemoveCartResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{79}
}
func (m *RemoveCartResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RemoveCartResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RemoveCartResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RemoveCartResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveCartResult.Merge(m, src)
}
func (m *RemoveCartResult) XXX_Size() int {
	return m.Size()
}
func (m *RemoveCartResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveCartResult.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveCartResult proto.InternalMessageInfo

func (m *RemoveCartResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *RemoveCartResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type SelectCartItemResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	ItemIds              []int64  `protobuf:"varint,3,rep,name=item_ids" json:"item_ids,omitempty" bson:"item_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *SelectCartItemResult) Reset()         { *m = SelectCartItemResult{} }
func (m *SelectCartItemResult) String() string { return proto.CompactTextString(m) }
func (*SelectCartItemResult) ProtoMessage()    {}
func (*SelectCartItemResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{80}
}
func (m *SelectCartItemResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SelectCartItemResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SelectCartItemResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SelectCartItemResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectCartItemResult.Merge(m, src)
}
func (m *SelectCartItemResult) XXX_Size() int {
	return m.Size()
}
func (m *SelectCartItemResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectCartItemResult.DiscardUnknown(m)
}

var xxx_messageInfo_SelectCartItemResult proto.InternalMessageInfo

func (m *SelectCartItemResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *SelectCartItemResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *SelectCartItemResult) GetItemIds() []int64 {
	if m != nil {
		return m.ItemIds
	}
	return nil
}

type SelectCartInfo struct {
	ItemId               []int64  `protobuf:"varint,1,rep,name=item_id" json:"item_id,omitempty" bson:"item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *SelectCartInfo) Reset()         { *m = SelectCartInfo{} }
func (m *SelectCartInfo) String() string { return proto.CompactTextString(m) }
func (*SelectCartInfo) ProtoMessage()    {}
func (*SelectCartInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{81}
}
func (m *SelectCartInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SelectCartInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SelectCartInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SelectCartInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectCartInfo.Merge(m, src)
}
func (m *SelectCartInfo) XXX_Size() int {
	return m.Size()
}
func (m *SelectCartInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectCartInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SelectCartInfo proto.InternalMessageInfo

func (m *SelectCartInfo) GetItemId() []int64 {
	if m != nil {
		return m.ItemId
	}
	return nil
}

type SearchInfo struct {
	Content              *string      `protobuf:"bytes,1,req,name=content" json:"content,omitempty" bson:"content,omitempty"`
	Page                 *int32       `protobuf:"varint,2,req,name=page" json:"page,omitempty" bson:"page,omitempty"`
	PageSize             *int32       `protobuf:"varint,3,req,name=page_size" json:"page_size,omitempty" bson:"page_size,omitempty"`
	SearchFlag           *Search_Type `protobuf:"varint,4,opt,name=search_flag,enum=share_message.Search_Type" json:"search_flag,omitempty" bson:"search_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-" bson:"-"`
	XXX_unrecognized     []byte       `json:"-" bson:"-"`
	XXX_sizecache        int32        `json:"-" bson:"-"`
}

func (m *SearchInfo) Reset()         { *m = SearchInfo{} }
func (m *SearchInfo) String() string { return proto.CompactTextString(m) }
func (*SearchInfo) ProtoMessage()    {}
func (*SearchInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{82}
}
func (m *SearchInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchInfo.Merge(m, src)
}
func (m *SearchInfo) XXX_Size() int {
	return m.Size()
}
func (m *SearchInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SearchInfo proto.InternalMessageInfo

func (m *SearchInfo) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func (m *SearchInfo) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *SearchInfo) GetPageSize() int32 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return 0
}

func (m *SearchInfo) GetSearchFlag() Search_Type {
	if m != nil && m.SearchFlag != nil {
		return *m.SearchFlag
	}
	return Search_Type_Composite
}

type SearchResult struct {
	Items                []*ShopItem `protobuf:"bytes,1,rep,name=items" json:"items,omitempty" bson:"items,omitempty"`
	Page                 *int32      `protobuf:"varint,2,req,name=page" json:"page,omitempty" bson:"page,omitempty"`
	PageSize             *int32      `protobuf:"varint,3,req,name=page_size" json:"page_size,omitempty" bson:"page_size,omitempty"`
	Count                *int32      `protobuf:"varint,4,req,name=count" json:"count,omitempty" bson:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-" bson:"-"`
	XXX_unrecognized     []byte      `json:"-" bson:"-"`
	XXX_sizecache        int32       `json:"-" bson:"-"`
}

func (m *SearchResult) Reset()         { *m = SearchResult{} }
func (m *SearchResult) String() string { return proto.CompactTextString(m) }
func (*SearchResult) ProtoMessage()    {}
func (*SearchResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{83}
}
func (m *SearchResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResult.Merge(m, src)
}
func (m *SearchResult) XXX_Size() int {
	return m.Size()
}
func (m *SearchResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResult.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResult proto.InternalMessageInfo

func (m *SearchResult) GetItems() []*ShopItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *SearchResult) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *SearchResult) GetPageSize() int32 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return 0
}

func (m *SearchResult) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type OrderItem struct {
	OrderId              *int64          `protobuf:"varint,1,req,name=order_id" json:"order_id,omitempty" bson:"order_id,omitempty"`
	Item                 *BuyItem        `protobuf:"bytes,2,req,name=item" json:"item,omitempty" bson:"item,omitempty"`
	State                *int32          `protobuf:"varint,3,req,name=state" json:"state,omitempty" bson:"state,omitempty"`
	Address              *ReceiveAddress `protobuf:"bytes,4,opt,name=address" json:"address,omitempty" bson:"address,omitempty"`
	ExpressCode          *string         `protobuf:"bytes,5,opt,name=express_code" json:"express_code,omitempty" bson:"express_code,omitempty"`
	ExpressCom           *string         `protobuf:"bytes,6,opt,name=express_com" json:"express_com,omitempty" bson:"express_com,omitempty"`
	CreateTime           *int64          `protobuf:"varint,7,opt,name=create_time" json:"create_time,omitempty" bson:"create_time,omitempty"`
	ServerNowTime        *int64          `protobuf:"varint,8,opt,name=server_now_time" json:"server_now_time,omitempty" bson:"server_now_time,omitempty"`
	DelayReceive         *int32          `protobuf:"varint,9,opt,name=delay_receive" json:"delay_receive,omitempty" bson:"delay_receive,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *OrderItem) Reset()         { *m = OrderItem{} }
func (m *OrderItem) String() string { return proto.CompactTextString(m) }
func (*OrderItem) ProtoMessage()    {}
func (*OrderItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{84}
}
func (m *OrderItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OrderItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OrderItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OrderItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderItem.Merge(m, src)
}
func (m *OrderItem) XXX_Size() int {
	return m.Size()
}
func (m *OrderItem) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderItem.DiscardUnknown(m)
}

var xxx_messageInfo_OrderItem proto.InternalMessageInfo

func (m *OrderItem) GetOrderId() int64 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

func (m *OrderItem) GetItem() *BuyItem {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *OrderItem) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *OrderItem) GetAddress() *ReceiveAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *OrderItem) GetExpressCode() string {
	if m != nil && m.ExpressCode != nil {
		return *m.ExpressCode
	}
	return ""
}

func (m *OrderItem) GetExpressCom() string {
	if m != nil && m.ExpressCom != nil {
		return *m.ExpressCom
	}
	return ""
}

func (m *OrderItem) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *OrderItem) GetServerNowTime() int64 {
	if m != nil && m.ServerNowTime != nil {
		return *m.ServerNowTime
	}
	return 0
}

func (m *OrderItem) GetDelayReceive() int32 {
	if m != nil && m.DelayReceive != nil {
		return *m.DelayReceive
	}
	return 0
}

type OrderItemList struct {
	Items                []*OrderItem `protobuf:"bytes,1,rep,name=items" json:"items,omitempty" bson:"items,omitempty"`
	Page                 *int32       `protobuf:"varint,2,req,name=page" json:"page,omitempty" bson:"page,omitempty"`
	PageSize             *int32       `protobuf:"varint,3,req,name=page_size" json:"page_size,omitempty" bson:"page_size,omitempty"`
	Count                *int32       `protobuf:"varint,4,req,name=count" json:"count,omitempty" bson:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-" bson:"-"`
	XXX_unrecognized     []byte       `json:"-" bson:"-"`
	XXX_sizecache        int32        `json:"-" bson:"-"`
}

func (m *OrderItemList) Reset()         { *m = OrderItemList{} }
func (m *OrderItemList) String() string { return proto.CompactTextString(m) }
func (*OrderItemList) ProtoMessage()    {}
func (*OrderItemList) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{85}
}
func (m *OrderItemList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OrderItemList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OrderItemList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OrderItemList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderItemList.Merge(m, src)
}
func (m *OrderItemList) XXX_Size() int {
	return m.Size()
}
func (m *OrderItemList) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderItemList.DiscardUnknown(m)
}

var xxx_messageInfo_OrderItemList proto.InternalMessageInfo

func (m *OrderItemList) GetItems() []*OrderItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *OrderItemList) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *OrderItemList) GetPageSize() int32 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return 0
}

func (m *OrderItemList) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type ExpressInfo struct {
	OrderId              *int64   `protobuf:"varint,1,req,name=order_id" json:"order_id,omitempty" bson:"order_id,omitempty"`
	Code                 *string  `protobuf:"bytes,2,req,name=code" json:"code,omitempty" bson:"code,omitempty"`
	Com                  *string  `protobuf:"bytes,3,req,name=com" json:"com,omitempty" bson:"com,omitempty"`
	SendPhone            *string  `protobuf:"bytes,4,req,name=send_phone" json:"send_phone,omitempty" bson:"send_phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ExpressInfo) Reset()         { *m = ExpressInfo{} }
func (m *ExpressInfo) String() string { return proto.CompactTextString(m) }
func (*ExpressInfo) ProtoMessage()    {}
func (*ExpressInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{86}
}
func (m *ExpressInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExpressInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExpressInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExpressInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpressInfo.Merge(m, src)
}
func (m *ExpressInfo) XXX_Size() int {
	return m.Size()
}
func (m *ExpressInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpressInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ExpressInfo proto.InternalMessageInfo

func (m *ExpressInfo) GetOrderId() int64 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

func (m *ExpressInfo) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *ExpressInfo) GetCom() string {
	if m != nil && m.Com != nil {
		return *m.Com
	}
	return ""
}

func (m *ExpressInfo) GetSendPhone() string {
	if m != nil && m.SendPhone != nil {
		return *m.SendPhone
	}
	return ""
}

type ShopItemMessageListInfo struct {
	Type                 *BuySell_Type `protobuf:"varint,1,req,name=type,enum=share_message.BuySell_Type" json:"type,omitempty" bson:"type,omitempty"`
	IncrementTime        *int64        `protobuf:"varint,2,req,name=increment_time" json:"increment_time,omitempty" bson:"increment_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-" bson:"-"`
	XXX_unrecognized     []byte        `json:"-" bson:"-"`
	XXX_sizecache        int32         `json:"-" bson:"-"`
}

func (m *ShopItemMessageListInfo) Reset()         { *m = ShopItemMessageListInfo{} }
func (m *ShopItemMessageListInfo) String() string { return proto.CompactTextString(m) }
func (*ShopItemMessageListInfo) ProtoMessage()    {}
func (*ShopItemMessageListInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{87}
}
func (m *ShopItemMessageListInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopItemMessageListInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopItemMessageListInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopItemMessageListInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItemMessageListInfo.Merge(m, src)
}
func (m *ShopItemMessageListInfo) XXX_Size() int {
	return m.Size()
}
func (m *ShopItemMessageListInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItemMessageListInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItemMessageListInfo proto.InternalMessageInfo

func (m *ShopItemMessageListInfo) GetType() BuySell_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return BuySell_Type_Buyer
}

func (m *ShopItemMessageListInfo) GetIncrementTime() int64 {
	if m != nil && m.IncrementTime != nil {
		return *m.IncrementTime
	}
	return 0
}

type ShopItemMessageList struct {
	List                 []*ShopItemMessage `protobuf:"bytes,1,rep,name=list" json:"list,omitempty" bson:"list,omitempty"`
	IncrementFlag        *bool              `protobuf:"varint,2,req,name=increment_flag" json:"increment_flag,omitempty" bson:"increment_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-" bson:"-"`
	XXX_unrecognized     []byte             `json:"-" bson:"-"`
	XXX_sizecache        int32              `json:"-" bson:"-"`
}

func (m *ShopItemMessageList) Reset()         { *m = ShopItemMessageList{} }
func (m *ShopItemMessageList) String() string { return proto.CompactTextString(m) }
func (*ShopItemMessageList) ProtoMessage()    {}
func (*ShopItemMessageList) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{88}
}
func (m *ShopItemMessageList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopItemMessageList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopItemMessageList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopItemMessageList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItemMessageList.Merge(m, src)
}
func (m *ShopItemMessageList) XXX_Size() int {
	return m.Size()
}
func (m *ShopItemMessageList) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItemMessageList.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItemMessageList proto.InternalMessageInfo

func (m *ShopItemMessageList) GetList() []*ShopItemMessage {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *ShopItemMessageList) GetIncrementFlag() bool {
	if m != nil && m.IncrementFlag != nil {
		return *m.IncrementFlag
	}
	return false
}

type ShopItemMessage struct {
	MessageId            *int64        `protobuf:"varint,1,req,name=message_id" json:"message_id,omitempty" bson:"message_id,omitempty"`
	Type                 *BuySell_Type `protobuf:"varint,2,opt,name=type,enum=share_message.BuySell_Type" json:"type,omitempty" bson:"type,omitempty"`
	File                 *ItemFile     `protobuf:"bytes,3,opt,name=file" json:"file,omitempty" bson:"file,omitempty"`
	Nickname             *string       `protobuf:"bytes,4,opt,name=nickname" json:"nickname,omitempty" bson:"nickname,omitempty"`
	Avatar               *string       `protobuf:"bytes,5,opt,name=avatar" json:"avatar,omitempty" bson:"avatar,omitempty"`
	ItemName             *string       `protobuf:"bytes,6,opt,name=item_name" json:"item_name,omitempty" bson:"item_name,omitempty"`
	ItemTitle            *string       `protobuf:"bytes,7,opt,name=item_title" json:"item_title,omitempty" bson:"item_title,omitempty"`
	Content              *string       `protobuf:"bytes,8,opt,name=content" json:"content,omitempty" bson:"content,omitempty"`
	CreateTime           *int64        `protobuf:"varint,9,opt,name=create_time" json:"create_time,omitempty" bson:"create_time,omitempty"`
	OrderId              *int64        `protobuf:"varint,10,opt,name=order_id" json:"order_id,omitempty" bson:"order_id,omitempty"`
	ShowTime             *string       `protobuf:"bytes,11,opt,name=show_time" json:"show_time,omitempty" bson:"show_time,omitempty"`
	ViewFlag             *bool         `protobuf:"varint,12,opt,name=view_flag" json:"view_flag,omitempty" bson:"view_flag,omitempty"`
	CopyName             *string       `protobuf:"bytes,13,opt,name=copy_name" json:"copy_name,omitempty" bson:"copy_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-" bson:"-"`
	XXX_unrecognized     []byte        `json:"-" bson:"-"`
	XXX_sizecache        int32         `json:"-" bson:"-"`
}

func (m *ShopItemMessage) Reset()         { *m = ShopItemMessage{} }
func (m *ShopItemMessage) String() string { return proto.CompactTextString(m) }
func (*ShopItemMessage) ProtoMessage()    {}
func (*ShopItemMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{89}
}
func (m *ShopItemMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopItemMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopItemMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopItemMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItemMessage.Merge(m, src)
}
func (m *ShopItemMessage) XXX_Size() int {
	return m.Size()
}
func (m *ShopItemMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItemMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItemMessage proto.InternalMessageInfo

func (m *ShopItemMessage) GetMessageId() int64 {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return 0
}

func (m *ShopItemMessage) GetType() BuySell_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return BuySell_Type_Buyer
}

func (m *ShopItemMessage) GetFile() *ItemFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *ShopItemMessage) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *ShopItemMessage) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

func (m *ShopItemMessage) GetItemName() string {
	if m != nil && m.ItemName != nil {
		return *m.ItemName
	}
	return ""
}

func (m *ShopItemMessage) GetItemTitle() string {
	if m != nil && m.ItemTitle != nil {
		return *m.ItemTitle
	}
	return ""
}

func (m *ShopItemMessage) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func (m *ShopItemMessage) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *ShopItemMessage) GetOrderId() int64 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

func (m *ShopItemMessage) GetShowTime() string {
	if m != nil && m.ShowTime != nil {
		return *m.ShowTime
	}
	return ""
}

func (m *ShopItemMessage) GetViewFlag() bool {
	if m != nil && m.ViewFlag != nil {
		return *m.ViewFlag
	}
	return false
}

func (m *ShopItemMessage) GetCopyName() string {
	if m != nil && m.CopyName != nil {
		return *m.CopyName
	}
	return ""
}

type ShopItemMessageInfo struct {
	Type                 *BuySell_Type    `protobuf:"varint,1,req,name=type,enum=share_message.BuySell_Type" json:"type,omitempty" bson:"type,omitempty"`
	ShopMessage          *ShopItemMessage `protobuf:"bytes,2,req,name=shopMessage" json:"shopMessage,omitempty" bson:"shopMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-" bson:"-"`
	XXX_unrecognized     []byte           `json:"-" bson:"-"`
	XXX_sizecache        int32            `json:"-" bson:"-"`
}

func (m *ShopItemMessageInfo) Reset()         { *m = ShopItemMessageInfo{} }
func (m *ShopItemMessageInfo) String() string { return proto.CompactTextString(m) }
func (*ShopItemMessageInfo) ProtoMessage()    {}
func (*ShopItemMessageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{90}
}
func (m *ShopItemMessageInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopItemMessageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopItemMessageInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopItemMessageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItemMessageInfo.Merge(m, src)
}
func (m *ShopItemMessageInfo) XXX_Size() int {
	return m.Size()
}
func (m *ShopItemMessageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItemMessageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItemMessageInfo proto.InternalMessageInfo

func (m *ShopItemMessageInfo) GetType() BuySell_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return BuySell_Type_Buyer
}

func (m *ShopItemMessageInfo) GetShopMessage() *ShopItemMessage {
	if m != nil {
		return m.ShopMessage
	}
	return nil
}

type ShopItemMessageInfoWithWho struct {
	Type                 *BuySell_Type    `protobuf:"varint,1,req,name=type,enum=share_message.BuySell_Type" json:"type,omitempty" bson:"type,omitempty"`
	PlayerId             *int64           `protobuf:"varint,2,req,name=player_id" json:"player_id,omitempty" bson:"player_id,omitempty"`
	ShopMessage          *ShopItemMessage `protobuf:"bytes,3,req,name=shopMessage" json:"shopMessage,omitempty" bson:"shopMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-" bson:"-"`
	XXX_unrecognized     []byte           `json:"-" bson:"-"`
	XXX_sizecache        int32            `json:"-" bson:"-"`
}

func (m *ShopItemMessageInfoWithWho) Reset()         { *m = ShopItemMessageInfoWithWho{} }
func (m *ShopItemMessageInfoWithWho) String() string { return proto.CompactTextString(m) }
func (*ShopItemMessageInfoWithWho) ProtoMessage()    {}
func (*ShopItemMessageInfoWithWho) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{91}
}
func (m *ShopItemMessageInfoWithWho) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopItemMessageInfoWithWho) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopItemMessageInfoWithWho.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopItemMessageInfoWithWho) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItemMessageInfoWithWho.Merge(m, src)
}
func (m *ShopItemMessageInfoWithWho) XXX_Size() int {
	return m.Size()
}
func (m *ShopItemMessageInfoWithWho) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItemMessageInfoWithWho.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItemMessageInfoWithWho proto.InternalMessageInfo

func (m *ShopItemMessageInfoWithWho) GetType() BuySell_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return BuySell_Type_Buyer
}

func (m *ShopItemMessageInfoWithWho) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *ShopItemMessageInfoWithWho) GetShopMessage() *ShopItemMessage {
	if m != nil {
		return m.ShopMessage
	}
	return nil
}

type ShopOrderNotifyInfoWithWho struct {
	PlayerId             *int64   `protobuf:"varint,1,req,name=player_id" json:"player_id,omitempty" bson:"player_id,omitempty"`
	OrderId              *int64   `protobuf:"varint,2,opt,name=order_id" json:"order_id,omitempty" bson:"order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ShopOrderNotifyInfoWithWho) Reset()         { *m = ShopOrderNotifyInfoWithWho{} }
func (m *ShopOrderNotifyInfoWithWho) String() string { return proto.CompactTextString(m) }
func (*ShopOrderNotifyInfoWithWho) ProtoMessage()    {}
func (*ShopOrderNotifyInfoWithWho) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{92}
}
func (m *ShopOrderNotifyInfoWithWho) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopOrderNotifyInfoWithWho) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopOrderNotifyInfoWithWho.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopOrderNotifyInfoWithWho) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopOrderNotifyInfoWithWho.Merge(m, src)
}
func (m *ShopOrderNotifyInfoWithWho) XXX_Size() int {
	return m.Size()
}
func (m *ShopOrderNotifyInfoWithWho) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopOrderNotifyInfoWithWho.DiscardUnknown(m)
}

var xxx_messageInfo_ShopOrderNotifyInfoWithWho proto.InternalMessageInfo

func (m *ShopOrderNotifyInfoWithWho) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *ShopOrderNotifyInfoWithWho) GetOrderId() int64 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

type ShopOrderNotifyInfo struct {
	OrderId              *int64   `protobuf:"varint,1,opt,name=order_id" json:"order_id,omitempty" bson:"order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ShopOrderNotifyInfo) Reset()         { *m = ShopOrderNotifyInfo{} }
func (m *ShopOrderNotifyInfo) String() string { return proto.CompactTextString(m) }
func (*ShopOrderNotifyInfo) ProtoMessage()    {}
func (*ShopOrderNotifyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{93}
}
func (m *ShopOrderNotifyInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopOrderNotifyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopOrderNotifyInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopOrderNotifyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopOrderNotifyInfo.Merge(m, src)
}
func (m *ShopOrderNotifyInfo) XXX_Size() int {
	return m.Size()
}
func (m *ShopOrderNotifyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopOrderNotifyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ShopOrderNotifyInfo proto.InternalMessageInfo

func (m *ShopOrderNotifyInfo) GetOrderId() int64 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

type ShopOrderIdList struct {
	OrderIds             []int64  `protobuf:"varint,1,rep,name=order_ids" json:"order_ids,omitempty" bson:"order_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ShopOrderIdList) Reset()         { *m = ShopOrderIdList{} }
func (m *ShopOrderIdList) String() string { return proto.CompactTextString(m) }
func (*ShopOrderIdList) ProtoMessage()    {}
func (*ShopOrderIdList) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{94}
}
func (m *ShopOrderIdList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopOrderIdList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopOrderIdList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopOrderIdList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopOrderIdList.Merge(m, src)
}
func (m *ShopOrderIdList) XXX_Size() int {
	return m.Size()
}
func (m *ShopOrderIdList) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopOrderIdList.DiscardUnknown(m)
}

var xxx_messageInfo_ShopOrderIdList proto.InternalMessageInfo

func (m *ShopOrderIdList) GetOrderIds() []int64 {
	if m != nil {
		return m.OrderIds
	}
	return nil
}

type ShopOrderNotifyFlgUpdInfo struct {
	OrderIds             []int64       `protobuf:"varint,1,rep,name=order_ids" json:"order_ids,omitempty" bson:"order_ids,omitempty"`
	BuySell_Type         *BuySell_Type `protobuf:"varint,2,opt,name=buySell_Type,enum=share_message.BuySell_Type" json:"buySell_Type,omitempty" bson:"buySell_Type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-" bson:"-"`
	XXX_unrecognized     []byte        `json:"-" bson:"-"`
	XXX_sizecache        int32         `json:"-" bson:"-"`
}

func (m *ShopOrderNotifyFlgUpdInfo) Reset()         { *m = ShopOrderNotifyFlgUpdInfo{} }
func (m *ShopOrderNotifyFlgUpdInfo) String() string { return proto.CompactTextString(m) }
func (*ShopOrderNotifyFlgUpdInfo) ProtoMessage()    {}
func (*ShopOrderNotifyFlgUpdInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{95}
}
func (m *ShopOrderNotifyFlgUpdInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopOrderNotifyFlgUpdInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopOrderNotifyFlgUpdInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopOrderNotifyFlgUpdInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopOrderNotifyFlgUpdInfo.Merge(m, src)
}
func (m *ShopOrderNotifyFlgUpdInfo) XXX_Size() int {
	return m.Size()
}
func (m *ShopOrderNotifyFlgUpdInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopOrderNotifyFlgUpdInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ShopOrderNotifyFlgUpdInfo proto.InternalMessageInfo

func (m *ShopOrderNotifyFlgUpdInfo) GetOrderIds() []int64 {
	if m != nil {
		return m.OrderIds
	}
	return nil
}

func (m *ShopOrderNotifyFlgUpdInfo) GetBuySell_Type() BuySell_Type {
	if m != nil && m.BuySell_Type != nil {
		return *m.BuySell_Type
	}
	return BuySell_Type_Buyer
}

type MessageIdList struct {
	MessageIds           []int64  `protobuf:"varint,1,rep,name=message_ids" json:"message_ids,omitempty" bson:"message_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *MessageIdList) Reset()         { *m = MessageIdList{} }
func (m *MessageIdList) String() string { return proto.CompactTextString(m) }
func (*MessageIdList) ProtoMessage()    {}
func (*MessageIdList) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{96}
}
func (m *MessageIdList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MessageIdList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MessageIdList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MessageIdList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageIdList.Merge(m, src)
}
func (m *MessageIdList) XXX_Size() int {
	return m.Size()
}
func (m *MessageIdList) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageIdList.DiscardUnknown(m)
}

var xxx_messageInfo_MessageIdList proto.InternalMessageInfo

func (m *MessageIdList) GetMessageIds() []int64 {
	if m != nil {
		return m.MessageIds
	}
	return nil
}

type PaySellerInfo struct {
	OrderId              *int64   `protobuf:"varint,1,req,name=order_id" json:"order_id,omitempty" bson:"order_id,omitempty"`
	Money                *int32   `protobuf:"varint,2,req,name=money" json:"money,omitempty" bson:"money,omitempty"`
	Sponsor_Id           *int64   `protobuf:"varint,3,req,name=sponsor_Id" json:"sponsor_Id,omitempty" bson:"sponsor_Id,omitempty"`
	ReceiverId           *int64   `protobuf:"varint,4,req,name=receiver_id" json:"receiver_id,omitempty" bson:"receiver_id,omitempty"`
	PayType              *int32   `protobuf:"varint,5,req,name=pay_type" json:"pay_type,omitempty" bson:"pay_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *PaySellerInfo) Reset()         { *m = PaySellerInfo{} }
func (m *PaySellerInfo) String() string { return proto.CompactTextString(m) }
func (*PaySellerInfo) ProtoMessage()    {}
func (*PaySellerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{97}
}
func (m *PaySellerInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PaySellerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PaySellerInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PaySellerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaySellerInfo.Merge(m, src)
}
func (m *PaySellerInfo) XXX_Size() int {
	return m.Size()
}
func (m *PaySellerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PaySellerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PaySellerInfo proto.InternalMessageInfo

func (m *PaySellerInfo) GetOrderId() int64 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

func (m *PaySellerInfo) GetMoney() int32 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *PaySellerInfo) GetSponsor_Id() int64 {
	if m != nil && m.Sponsor_Id != nil {
		return *m.Sponsor_Id
	}
	return 0
}

func (m *PaySellerInfo) GetReceiverId() int64 {
	if m != nil && m.ReceiverId != nil {
		return *m.ReceiverId
	}
	return 0
}

func (m *PaySellerInfo) GetPayType() int32 {
	if m != nil && m.PayType != nil {
		return *m.PayType
	}
	return 0
}

type UploadAuthResult struct {
	UploadAuthFlag       *int32   `protobuf:"varint,1,req,name=upload_auth_flag" json:"upload_auth_flag,omitempty" bson:"upload_auth_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UploadAuthResult) Reset()         { *m = UploadAuthResult{} }
func (m *UploadAuthResult) String() string { return proto.CompactTextString(m) }
func (*UploadAuthResult) ProtoMessage()    {}
func (*UploadAuthResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{98}
}
func (m *UploadAuthResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UploadAuthResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UploadAuthResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UploadAuthResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadAuthResult.Merge(m, src)
}
func (m *UploadAuthResult) XXX_Size() int {
	return m.Size()
}
func (m *UploadAuthResult) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadAuthResult.DiscardUnknown(m)
}

var xxx_messageInfo_UploadAuthResult proto.InternalMessageInfo

func (m *UploadAuthResult) GetUploadAuthFlag() int32 {
	if m != nil && m.UploadAuthFlag != nil {
		return *m.UploadAuthFlag
	}
	return 0
}

type QueryExpressInfo struct {
	OrderId              *int64   `protobuf:"varint,1,req,name=order_id" json:"order_id,omitempty" bson:"order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *QueryExpressInfo) Reset()         { *m = QueryExpressInfo{} }
func (m *QueryExpressInfo) String() string { return proto.CompactTextString(m) }
func (*QueryExpressInfo) ProtoMessage()    {}
func (*QueryExpressInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{99}
}
func (m *QueryExpressInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryExpressInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryExpressInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryExpressInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryExpressInfo.Merge(m, src)
}
func (m *QueryExpressInfo) XXX_Size() int {
	return m.Size()
}
func (m *QueryExpressInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryExpressInfo.DiscardUnknown(m)
}

var xxx_messageInfo_QueryExpressInfo proto.InternalMessageInfo

func (m *QueryExpressInfo) GetOrderId() int64 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

type QueryExpressBody struct {
	DateTime             *string         `protobuf:"bytes,1,opt,name=dateTime" json:"dateTime,omitempty" bson:"dateTime,omitempty"`
	Remark               *string         `protobuf:"bytes,2,opt,name=remark" json:"remark,omitempty" bson:"remark,omitempty"`
	Status               *Express_Status `protobuf:"varint,3,opt,name=status,enum=share_message.Express_Status" json:"status,omitempty" bson:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *QueryExpressBody) Reset()         { *m = QueryExpressBody{} }
func (m *QueryExpressBody) String() string { return proto.CompactTextString(m) }
func (*QueryExpressBody) ProtoMessage()    {}
func (*QueryExpressBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{100}
}
func (m *QueryExpressBody) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryExpressBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryExpressBody.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryExpressBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryExpressBody.Merge(m, src)
}
func (m *QueryExpressBody) XXX_Size() int {
	return m.Size()
}
func (m *QueryExpressBody) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryExpressBody.DiscardUnknown(m)
}

var xxx_messageInfo_QueryExpressBody proto.InternalMessageInfo

func (m *QueryExpressBody) GetDateTime() string {
	if m != nil && m.DateTime != nil {
		return *m.DateTime
	}
	return ""
}

func (m *QueryExpressBody) GetRemark() string {
	if m != nil && m.Remark != nil {
		return *m.Remark
	}
	return ""
}

func (m *QueryExpressBody) GetStatus() Express_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Express_Status_PENDING
}

type QueryExpressInfosResult struct {
	Result               *int32              `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string             `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	ExpressInfos         []*QueryExpressBody `protobuf:"bytes,3,rep,name=expressInfos" json:"expressInfos,omitempty" bson:"expressInfos,omitempty"`
	ExpressPhone         *string             `protobuf:"bytes,4,opt,name=expressPhone" json:"expressPhone,omitempty" bson:"expressPhone,omitempty"`
	ExpressName          *string             `protobuf:"bytes,5,opt,name=expressName" json:"expressName,omitempty" bson:"expressName,omitempty"`
	UserId               *int64              `protobuf:"varint,6,opt,name=userId" json:"userId,omitempty" bson:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-" bson:"-"`
	XXX_unrecognized     []byte              `json:"-" bson:"-"`
	XXX_sizecache        int32               `json:"-" bson:"-"`
}

func (m *QueryExpressInfosResult) Reset()         { *m = QueryExpressInfosResult{} }
func (m *QueryExpressInfosResult) String() string { return proto.CompactTextString(m) }
func (*QueryExpressInfosResult) ProtoMessage()    {}
func (*QueryExpressInfosResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{101}
}
func (m *QueryExpressInfosResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryExpressInfosResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryExpressInfosResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryExpressInfosResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryExpressInfosResult.Merge(m, src)
}
func (m *QueryExpressInfosResult) XXX_Size() int {
	return m.Size()
}
func (m *QueryExpressInfosResult) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryExpressInfosResult.DiscardUnknown(m)
}

var xxx_messageInfo_QueryExpressInfosResult proto.InternalMessageInfo

func (m *QueryExpressInfosResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *QueryExpressInfosResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *QueryExpressInfosResult) GetExpressInfos() []*QueryExpressBody {
	if m != nil {
		return m.ExpressInfos
	}
	return nil
}

func (m *QueryExpressInfosResult) GetExpressPhone() string {
	if m != nil && m.ExpressPhone != nil {
		return *m.ExpressPhone
	}
	return ""
}

func (m *QueryExpressInfosResult) GetExpressName() string {
	if m != nil && m.ExpressName != nil {
		return *m.ExpressName
	}
	return ""
}

func (m *QueryExpressInfosResult) GetUserId() int64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type ExpressCom struct {
	Code                 *string  `protobuf:"bytes,1,opt,name=code" json:"code,omitempty" bson:"code,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty" bson:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ExpressCom) Reset()         { *m = ExpressCom{} }
func (m *ExpressCom) String() string { return proto.CompactTextString(m) }
func (*ExpressCom) ProtoMessage()    {}
func (*ExpressCom) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{102}
}
func (m *ExpressCom) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExpressCom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExpressCom.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExpressCom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpressCom.Merge(m, src)
}
func (m *ExpressCom) XXX_Size() int {
	return m.Size()
}
func (m *ExpressCom) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpressCom.DiscardUnknown(m)
}

var xxx_messageInfo_ExpressCom proto.InternalMessageInfo

func (m *ExpressCom) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *ExpressCom) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type ExpressComInfosResult struct {
	Result               *int32        `protobuf:"varint,1,req,name=result" json:"result,omitempty" bson:"result,omitempty"`
	Msg                  *string       `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty" bson:"msg,omitempty"`
	CommonUseComInfos    []*ExpressCom `protobuf:"bytes,3,rep,name=commonUseComInfos" json:"commonUseComInfos,omitempty" bson:"commonUseComInfos,omitempty"`
	ComInfos             []*ExpressCom `protobuf:"bytes,4,rep,name=comInfos" json:"comInfos,omitempty" bson:"comInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-" bson:"-"`
	XXX_unrecognized     []byte        `json:"-" bson:"-"`
	XXX_sizecache        int32         `json:"-" bson:"-"`
}

func (m *ExpressComInfosResult) Reset()         { *m = ExpressComInfosResult{} }
func (m *ExpressComInfosResult) String() string { return proto.CompactTextString(m) }
func (*ExpressComInfosResult) ProtoMessage()    {}
func (*ExpressComInfosResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{103}
}
func (m *ExpressComInfosResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExpressComInfosResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExpressComInfosResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExpressComInfosResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpressComInfosResult.Merge(m, src)
}
func (m *ExpressComInfosResult) XXX_Size() int {
	return m.Size()
}
func (m *ExpressComInfosResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpressComInfosResult.DiscardUnknown(m)
}

var xxx_messageInfo_ExpressComInfosResult proto.InternalMessageInfo

func (m *ExpressComInfosResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *ExpressComInfosResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *ExpressComInfosResult) GetCommonUseComInfos() []*ExpressCom {
	if m != nil {
		return m.CommonUseComInfos
	}
	return nil
}

func (m *ExpressComInfosResult) GetComInfos() []*ExpressCom {
	if m != nil {
		return m.ComInfos
	}
	return nil
}

type ShopPointCardInfo struct {
	CardId               *int64   `protobuf:"varint,1,opt,name=card_id" json:"card_id,omitempty" bson:"card_id,omitempty"`
	CardNo               *string  `protobuf:"bytes,2,opt,name=card_no" json:"card_no,omitempty" bson:"card_no,omitempty"`
	CardPassword         *string  `protobuf:"bytes,3,opt,name=card_password" json:"card_password,omitempty" bson:"card_password,omitempty"`
	Key                  *string  `protobuf:"bytes,4,opt,name=key" json:"key,omitempty" bson:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ShopPointCardInfo) Reset()         { *m = ShopPointCardInfo{} }
func (m *ShopPointCardInfo) String() string { return proto.CompactTextString(m) }
func (*ShopPointCardInfo) ProtoMessage()    {}
func (*ShopPointCardInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa7ec18be621996e, []int{104}
}
func (m *ShopPointCardInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopPointCardInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopPointCardInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopPointCardInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopPointCardInfo.Merge(m, src)
}
func (m *ShopPointCardInfo) XXX_Size() int {
	return m.Size()
}
func (m *ShopPointCardInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopPointCardInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ShopPointCardInfo proto.InternalMessageInfo

func (m *ShopPointCardInfo) GetCardId() int64 {
	if m != nil && m.CardId != nil {
		return *m.CardId
	}
	return 0
}

func (m *ShopPointCardInfo) GetCardNo() string {
	if m != nil && m.CardNo != nil {
		return *m.CardNo
	}
	return ""
}

func (m *ShopPointCardInfo) GetCardPassword() string {
	if m != nil && m.CardPassword != nil {
		return *m.CardPassword
	}
	return ""
}

func (m *ShopPointCardInfo) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func init() {
	proto.RegisterEnum("share_message.CommQuery_Con", CommQuery_Con_name, CommQuery_Con_value)
	proto.RegisterEnum("share_message.BuySell_Type", BuySell_Type_name, BuySell_Type_value)
	proto.RegisterEnum("share_message.Search_Type", Search_Type_name, Search_Type_value)
	proto.RegisterEnum("share_message.SearchOrder_Con", SearchOrder_Con_name, SearchOrder_Con_value)
	proto.RegisterEnum("share_message.Express_Status", Express_Status_name, Express_Status_value)
	proto.RegisterType((*ShopInfo)(nil), "share_message.ShopInfo")
	proto.RegisterType((*ItemFile)(nil), "share_message.ItemFile")
	proto.RegisterType((*ShopItem)(nil), "share_message.ShopItem")
	proto.RegisterType((*ItemList)(nil), "share_message.ItemList")
	proto.RegisterType((*MyReleaseInfo)(nil), "share_message.MyReleaseInfo")
	proto.RegisterType((*ItemListForMyRelease)(nil), "share_message.ItemListForMyRelease")
	proto.RegisterType((*BuyItem)(nil), "share_message.BuyItem")
	proto.RegisterType((*BuyItemID)(nil), "share_message.BuyItemID")
	proto.RegisterType((*BuyItemInfo)(nil), "share_message.BuyItemInfo")
	proto.RegisterType((*BuyItemResult)(nil), "share_message.BuyItemResult")
	proto.RegisterType((*SettlementItemID)(nil), "share_message.SettlementItemID")
	proto.RegisterType((*SettlementInfo)(nil), "share_message.SettlementInfo")
	proto.RegisterType((*SettlementResult)(nil), "share_message.SettlementResult")
	proto.RegisterType((*OrderInfo)(nil), "share_message.OrderInfo")
	proto.RegisterType((*OrderDetailInfoPara)(nil), "share_message.OrderDetailInfoPara")
	proto.RegisterType((*OrderID)(nil), "share_message.OrderID")
	proto.RegisterType((*EditOrderAddress)(nil), "share_message.EditOrderAddress")
	proto.RegisterType((*EditOrderAddressResult)(nil), "share_message.EditOrderAddressResult")
	proto.RegisterType((*EditDeliverAddress)(nil), "share_message.EditDeliverAddress")
	proto.RegisterType((*EditDeliverAddressResult)(nil), "share_message.EditDeliverAddressResult")
	proto.RegisterType((*ShopAddressResult)(nil), "share_message.ShopAddressResult")
	proto.RegisterType((*ShopAddressInfo)(nil), "share_message.ShopAddressInfo")
	proto.RegisterType((*ConfirmReceiveResult)(nil), "share_message.ConfirmReceiveResult")
	proto.RegisterType((*DelayReceiveResult)(nil), "share_message.DelayReceiveResult")
	proto.RegisterType((*NotifySendItemResult)(nil), "share_message.NotifySendItemResult")
	proto.RegisterType((*ReceiveAddress)(nil), "share_message.ReceiveAddress")
	proto.RegisterType((*ReceiveAddressInfo)(nil), "share_message.ReceiveAddressInfo")
	proto.RegisterType((*ReceiveAddressList)(nil), "share_message.ReceiveAddressList")
	proto.RegisterType((*ReceiveAddressID)(nil), "share_message.ReceiveAddressID")
	proto.RegisterType((*PlayerID)(nil), "share_message.PlayerID")
	proto.RegisterType((*ReceiveAddressAddResult)(nil), "share_message.ReceiveAddressAddResult")
	proto.RegisterType((*ReceiveAddressRemoveResult)(nil), "share_message.ReceiveAddressRemoveResult")
	proto.RegisterType((*ReceiveAddressEditResult)(nil), "share_message.ReceiveAddressEditResult")
	proto.RegisterType((*DeliverAddress)(nil), "share_message.DeliverAddress")
	proto.RegisterType((*DeliverAddressInfo)(nil), "share_message.DeliverAddressInfo")
	proto.RegisterType((*DeliverAddressList)(nil), "share_message.DeliverAddressList")
	proto.RegisterType((*DeliverAddressID)(nil), "share_message.DeliverAddressID")
	proto.RegisterType((*DeliverAddressAddResult)(nil), "share_message.DeliverAddressAddResult")
	proto.RegisterType((*DeliverAddressRemoveResult)(nil), "share_message.DeliverAddressRemoveResult")
	proto.RegisterType((*DeliverAddressEditResult)(nil), "share_message.DeliverAddressEditResult")
	proto.RegisterType((*OrderDetailInfo)(nil), "share_message.OrderDetailInfo")
	proto.RegisterType((*OrderDetailInfoShow)(nil), "share_message.OrderDetailInfoShow")
	proto.RegisterType((*ExpressMsg)(nil), "share_message.ExpressMsg")
	proto.RegisterType((*CancelOrderResult)(nil), "share_message.CancelOrderResult")
	proto.RegisterType((*DeleteOrderResult)(nil), "share_message.DeleteOrderResult")
	proto.RegisterType((*CheckoutResult)(nil), "share_message.CheckoutResult")
	proto.RegisterType((*ShopItemID)(nil), "share_message.ShopItemID")
	proto.RegisterType((*ShopItemInfo)(nil), "share_message.ShopItemInfo")
	proto.RegisterType((*ShopItemType)(nil), "share_message.ShopItemType")
	proto.RegisterType((*ShopItemTypeName)(nil), "share_message.ShopItemTypeName")
	proto.RegisterType((*ShopItemUploadInfo)(nil), "share_message.ShopItemUploadInfo")
	proto.RegisterType((*ShopItemUploadResult)(nil), "share_message.ShopItemUploadResult")
	proto.RegisterType((*ShopItemDeleteResult)(nil), "share_message.ShopItemDeleteResult")
	proto.RegisterType((*ShopItemSoldOutResult)(nil), "share_message.ShopItemSoldOutResult")
	proto.RegisterType((*ShopItemEditInfo)(nil), "share_message.ShopItemEditInfo")
	proto.RegisterType((*ShopItemDetail)(nil), "share_message.ShopItemDetail")
	proto.RegisterType((*RelatedShopItem)(nil), "share_message.RelatedShopItem")
	proto.RegisterType((*SellerInfo)(nil), "share_message.SellerInfo")
	proto.RegisterType((*ShopItemShowDetail)(nil), "share_message.ShopItemShowDetail")
	proto.RegisterType((*CommInfoForDetail)(nil), "share_message.CommInfoForDetail")
	proto.RegisterType((*CommentInfo)(nil), "share_message.CommentInfo")
	proto.RegisterType((*UploadComment)(nil), "share_message.UploadComment")
	proto.RegisterType((*UploadEvalute)(nil), "share_message.UploadEvalute")
	proto.RegisterType((*UploadCommentResult)(nil), "share_message.UploadCommentResult")
	proto.RegisterType((*LikeCommentResult)(nil), "share_message.LikeCommentResult")
	proto.RegisterType((*LikeCommentInfo)(nil), "share_message.LikeCommentInfo")
	proto.RegisterType((*ShopCommentList)(nil), "share_message.ShopCommentList")
	proto.RegisterType((*ShopCommentListResult)(nil), "share_message.ShopCommentListResult")
	proto.RegisterType((*ExpressCodeResult)(nil), "share_message.ExpressCodeResult")
	proto.RegisterType((*StoreItemList)(nil), "share_message.StoreItemList")
	proto.RegisterType((*AddStoreResult)(nil), "share_message.AddStoreResult")
	proto.RegisterType((*RemoveStoreResult)(nil), "share_message.RemoveStoreResult")
	proto.RegisterType((*BatchAddStoreResult)(nil), "share_message.BatchAddStoreResult")
	proto.RegisterType((*CartItem)(nil), "share_message.CartItem")
	proto.RegisterType((*CartItemInfo)(nil), "share_message.CartItemInfo")
	proto.RegisterType((*CartItemInfoList)(nil), "share_message.CartItemInfoList")
	proto.RegisterType((*AddCartResult)(nil), "share_message.AddCartResult")
	proto.RegisterType((*SubCartResult)(nil), "share_message.SubCartResult")
	proto.RegisterType((*ItemIdList)(nil), "share_message.ItemIdList")
	proto.RegisterType((*RemoveCartResult)(nil), "share_message.RemoveCartResult")
	proto.RegisterType((*SelectCartItemResult)(nil), "share_message.SelectCartItemResult")
	proto.RegisterType((*SelectCartInfo)(nil), "share_message.SelectCartInfo")
	proto.RegisterType((*SearchInfo)(nil), "share_message.SearchInfo")
	proto.RegisterType((*SearchResult)(nil), "share_message.SearchResult")
	proto.RegisterType((*OrderItem)(nil), "share_message.OrderItem")
	proto.RegisterType((*OrderItemList)(nil), "share_message.OrderItemList")
	proto.RegisterType((*ExpressInfo)(nil), "share_message.ExpressInfo")
	proto.RegisterType((*ShopItemMessageListInfo)(nil), "share_message.ShopItemMessageListInfo")
	proto.RegisterType((*ShopItemMessageList)(nil), "share_message.ShopItemMessageList")
	proto.RegisterType((*ShopItemMessage)(nil), "share_message.ShopItemMessage")
	proto.RegisterType((*ShopItemMessageInfo)(nil), "share_message.ShopItemMessageInfo")
	proto.RegisterType((*ShopItemMessageInfoWithWho)(nil), "share_message.ShopItemMessageInfoWithWho")
	proto.RegisterType((*ShopOrderNotifyInfoWithWho)(nil), "share_message.ShopOrderNotifyInfoWithWho")
	proto.RegisterType((*ShopOrderNotifyInfo)(nil), "share_message.ShopOrderNotifyInfo")
	proto.RegisterType((*ShopOrderIdList)(nil), "share_message.ShopOrderIdList")
	proto.RegisterType((*ShopOrderNotifyFlgUpdInfo)(nil), "share_message.ShopOrderNotifyFlgUpdInfo")
	proto.RegisterType((*MessageIdList)(nil), "share_message.MessageIdList")
	proto.RegisterType((*PaySellerInfo)(nil), "share_message.PaySellerInfo")
	proto.RegisterType((*UploadAuthResult)(nil), "share_message.UploadAuthResult")
	proto.RegisterType((*QueryExpressInfo)(nil), "share_message.QueryExpressInfo")
	proto.RegisterType((*QueryExpressBody)(nil), "share_message.QueryExpressBody")
	proto.RegisterType((*QueryExpressInfosResult)(nil), "share_message.QueryExpressInfosResult")
	proto.RegisterType((*ExpressCom)(nil), "share_message.ExpressCom")
	proto.RegisterType((*ExpressComInfosResult)(nil), "share_message.ExpressComInfosResult")
	proto.RegisterType((*ShopPointCardInfo)(nil), "share_message.ShopPointCardInfo")
}

func init() { proto.RegisterFile("ShopCommon.proto", fileDescriptor_aa7ec18be621996e) }

var fileDescriptor_aa7ec18be621996e = []byte{
	// 3346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0xdd, 0x6e, 0xe3, 0xc6,
	0xf5, 0x5f, 0x89, 0x92, 0x25, 0x1d, 0x7d, 0x51, 0xb4, 0xbd, 0xd6, 0xee, 0xfe, 0x77, 0xe3, 0x10,
	0x9b, 0xc4, 0xff, 0x4d, 0xb2, 0x9f, 0xd9, 0x26, 0xbd, 0x49, 0x23, 0x4b, 0x72, 0xaa, 0xc4, 0x2b,
	0xbb, 0x92, 0x77, 0x37, 0x8b, 0x16, 0x20, 0xb8, 0xe4, 0x58, 0x62, 0x4d, 0x91, 0x2a, 0x49, 0xad,
	0xa3, 0x5e, 0x17, 0x28, 0x50, 0x14, 0x28, 0x90, 0x9b, 0xbe, 0x42, 0x6f, 0xfb, 0x04, 0xb9, 0x6d,
	0x6f, 0x8a, 0x3e, 0x40, 0x2f, 0x8a, 0x3c, 0x42, 0x1f, 0xa0, 0x28, 0xe6, 0xcc, 0x0c, 0x45, 0x52,
	0xb2, 0x4d, 0xbb, 0x09, 0xd0, 0x3b, 0x71, 0x3e, 0xce, 0x9c, 0x73, 0xe6, 0x77, 0x3e, 0x47, 0x20,
	0x0f, 0xc7, 0xee, 0xb4, 0xed, 0x4e, 0x26, 0xae, 0x73, 0x7f, 0xea, 0xb9, 0x81, 0xab, 0x54, 0xfd,
	0xb1, 0xee, 0x11, 0x6d, 0x42, 0x7c, 0x5f, 0x1f, 0x91, 0x9b, 0x95, 0xd1, 0xc8, 0x0d, 0xf4, 0x11,
	0x9b, 0x54, 0x2d, 0x28, 0xd2, 0x0d, 0x3d, 0xe7, 0xd8, 0x55, 0x2a, 0x90, 0x9b, 0xea, 0x23, 0xd2,
	0xcc, 0x6c, 0x67, 0x77, 0xf2, 0x4a, 0x03, 0x4a, 0xf4, 0x4b, 0xf3, 0xad, 0x5f, 0x93, 0x66, 0x16,
	0x87, 0x2a, 0x90, 0x0b, 0xe6, 0x53, 0xd2, 0x94, 0xf0, 0xab, 0x09, 0xb2, 0xa1, 0x1b, 0x63, 0xa2,
	0x59, 0x01, 0x99, 0x68, 0x74, 0xc2, 0x6f, 0xe6, 0xb6, 0xa5, 0x9d, 0xbc, 0xb2, 0x01, 0x15, 0x36,
	0xe3, 0x13, 0xdd, 0x33, 0xc6, 0xcd, 0xfc, 0xb6, 0xb4, 0x53, 0x52, 0xbf, 0x82, 0x62, 0x2f, 0x20,
	0x93, 0x3d, 0xcb, 0x26, 0x8a, 0x0c, 0xc5, 0x63, 0xcb, 0x26, 0xda, 0xcc, 0xb3, 0xf1, 0xb8, 0x12,
	0x3d, 0x0e, 0x47, 0xf0, 0x00, 0x76, 0x9c, 0x02, 0x80, 0x43, 0xa7, 0x96, 0x19, 0x8c, 0x9b, 0xd2,
	0x76, 0x66, 0xa7, 0xa4, 0xac, 0x43, 0x19, 0xc7, 0xc6, 0xc4, 0x1a, 0x8d, 0x83, 0x66, 0x8e, 0x0e,
	0xaa, 0xff, 0xc8, 0x72, 0x29, 0x02, 0x32, 0x51, 0xea, 0x50, 0x40, 0x86, 0x2c, 0x13, 0x29, 0x4b,
	0x4a, 0x15, 0xf2, 0x53, 0xcf, 0x32, 0x28, 0xd5, 0xcc, 0x4e, 0x5e, 0xb9, 0x07, 0x25, 0x9c, 0xa7,
	0x64, 0x90, 0x68, 0xf9, 0xf1, 0xd6, 0xfd, 0x98, 0x8a, 0xee, 0x87, 0x6c, 0x56, 0x21, 0x1f, 0x58,
	0x81, 0x4d, 0xd8, 0x39, 0xf4, 0x70, 0x3f, 0x70, 0x3d, 0xa2, 0x19, 0xee, 0xcc, 0x09, 0x9a, 0x79,
	0xa4, 0x47, 0xf5, 0x64, 0xeb, 0x73, 0xe2, 0xd1, 0x13, 0xd7, 0xb6, 0x33, 0x3b, 0x12, 0x95, 0xce,
	0xb1, 0x8c, 0x13, 0x47, 0x9f, 0x90, 0x66, 0x01, 0x77, 0xd6, 0x60, 0x4d, 0x7f, 0xa3, 0x07, 0xba,
	0xd7, 0x2c, 0xe2, 0xf7, 0x26, 0x54, 0xfd, 0xb1, 0xeb, 0x05, 0x9a, 0x6e, 0x9a, 0x1e, 0xf1, 0xfd,
	0x66, 0x09, 0x87, 0xeb, 0x50, 0xd0, 0x0d, 0x46, 0x1c, 0x70, 0xa0, 0x0c, 0x92, 0x4f, 0xbe, 0x6e,
	0x96, 0xf1, 0xa4, 0x0a, 0xe4, 0x90, 0x64, 0x05, 0xa7, 0xaa, 0x90, 0xf7, 0x03, 0x3d, 0x20, 0xcd,
	0xaa, 0x60, 0x23, 0xbc, 0x87, 0x66, 0x4d, 0x0c, 0x4d, 0xf4, 0xb9, 0x46, 0x9c, 0x5f, 0xba, 0xf3,
	0x66, 0x7d, 0x3b, 0xb3, 0x53, 0x0c, 0x57, 0x1d, 0xdb, 0xfa, 0xa8, 0x29, 0x8b, 0x21, 0xc3, 0x9d,
	0xce, 0x35, 0x24, 0xdd, 0x10, 0xa4, 0x8f, 0xf0, 0x3a, 0x15, 0x4a, 0x47, 0x7d, 0xcd, 0x2e, 0x6e,
	0xdf, 0xf2, 0x03, 0xe5, 0x5d, 0xc8, 0x53, 0x02, 0x7e, 0x33, 0xb3, 0x2d, 0xad, 0xd0, 0x5c, 0x78,
	0x0b, 0x02, 0x4b, 0xd9, 0x65, 0x2c, 0x31, 0xf4, 0x54, 0x21, 0xcf, 0x04, 0xcd, 0xd1, 0x4f, 0xf5,
	0x21, 0x54, 0x9f, 0xcd, 0x07, 0xc4, 0x26, 0xba, 0x4f, 0x52, 0x81, 0x51, 0x75, 0x60, 0x43, 0x70,
	0xb5, 0xe7, 0x7a, 0xe1, 0xe6, 0x1f, 0x8c, 0xc3, 0x6f, 0xb2, 0x50, 0xd8, 0x9d, 0xcd, 0x57, 0x63,
	0x2c, 0x06, 0x2a, 0x4a, 0xf1, 0x1c, 0x50, 0x89, 0x6b, 0x64, 0x80, 0xde, 0x80, 0x8a, 0xeb, 0x59,
	0x23, 0xcb, 0xd1, 0x18, 0x48, 0x73, 0x78, 0x75, 0x21, 0x66, 0x19, 0xc6, 0x14, 0x00, 0x7f, 0xea,
	0x3a, 0xbe, 0x1b, 0x01, 0xd9, 0x02, 0x52, 0x0c, 0x62, 0x51, 0xd0, 0x15, 0xc5, 0x35, 0x32, 0x01,
	0x4a, 0x48, 0x84, 0x63, 0x09, 0xc4, 0x01, 0x0c, 0xd9, 0x65, 0x5c, 0xfa, 0x23, 0xa8, 0x9b, 0xc4,
	0xb6, 0xde, 0x10, 0x2f, 0x44, 0x64, 0x05, 0x4d, 0xe3, 0x76, 0x42, 0x8a, 0x0e, 0x5b, 0xd5, 0x62,
	0x8b, 0xd4, 0xd7, 0x50, 0xe2, 0x3a, 0xe9, 0x75, 0xe2, 0x5a, 0xc9, 0x30, 0xcb, 0x63, 0x0c, 0x30,
	0xcb, 0xab, 0xc1, 0x9a, 0x47, 0x26, 0xba, 0x77, 0xc2, 0x45, 0x57, 0x00, 0x18, 0x64, 0x23, 0x26,
	0x26, 0x00, 0x8a, 0x62, 0xe4, 0xd1, 0xba, 0x8f, 0xa1, 0x2c, 0xce, 0xa0, 0xc0, 0x78, 0x2f, 0x7e,
	0xbf, 0xcd, 0x04, 0x83, 0x0b, 0x76, 0xee, 0x43, 0x41, 0xc8, 0xc2, 0x6e, 0x24, 0x29, 0xcb, 0x80,
	0x18, 0xc4, 0x7a, 0x43, 0x84, 0x2c, 0x9f, 0x42, 0x95, 0x6f, 0x1e, 0x10, 0x7f, 0x66, 0x07, 0x8c,
	0x5f, 0xfa, 0x8b, 0x83, 0xb0, 0x0c, 0xd2, 0xc4, 0x1f, 0x21, 0x31, 0x54, 0xb7, 0xeb, 0x99, 0xcc,
	0xea, 0xa9, 0x38, 0x92, 0xfa, 0x0a, 0xe4, 0x21, 0x09, 0x02, 0x9b, 0x4c, 0x88, 0x13, 0xac, 0x52,
	0x49, 0x36, 0xae, 0x12, 0xee, 0xe2, 0x22, 0x2a, 0x90, 0x84, 0x27, 0x5c, 0xa8, 0x80, 0x62, 0xaf,
	0xa4, 0x7e, 0x06, 0xb5, 0x08, 0x69, 0xaa, 0x85, 0xfb, 0x71, 0x2d, 0xbc, 0x95, 0x44, 0x79, 0x82,
	0x11, 0xd5, 0x8d, 0x32, 0x77, 0x86, 0x7c, 0x4d, 0x90, 0x1d, 0x57, 0xf3, 0x75, 0x3b, 0xa4, 0x43,
	0x35, 0x27, 0xed, 0x94, 0x94, 0x1b, 0xd0, 0xa0, 0x33, 0x81, 0x6b, 0x9c, 0x2c, 0xa6, 0x24, 0x9c,
	0xba, 0x0e, 0xb5, 0xd7, 0xb6, 0x1e, 0x1d, 0xcf, 0xa1, 0xb7, 0xff, 0x5d, 0x06, 0x4a, 0x07, 0x54,
	0x41, 0xc8, 0xee, 0xff, 0xf3, 0xc8, 0x41, 0x0f, 0xaa, 0x3d, 0xbe, 0xb5, 0x7c, 0x67, 0x43, 0x62,
	0xdb, 0x1a, 0x75, 0x3a, 0xca, 0xa3, 0xa8, 0x23, 0xcb, 0xe2, 0xfa, 0x3b, 0x4b, 0xd2, 0xd1, 0xb0,
	0x82, 0xd4, 0xb5, 0xb6, 0xeb, 0x84, 0xa6, 0x2c, 0x2d, 0x9b, 0x32, 0xb3, 0xdd, 0x01, 0xac, 0xe3,
	0xea, 0x0e, 0x09, 0x74, 0xcb, 0xa6, 0x1c, 0x1d, 0xea, 0x9e, 0x7e, 0x19, 0xae, 0xa2, 0xd7, 0x4d,
	0x99, 0x92, 0xd4, 0x5b, 0x50, 0x60, 0xf2, 0x75, 0x62, 0x93, 0x78, 0xcd, 0xea, 0x11, 0xc8, 0x5d,
	0xd3, 0x0a, 0x70, 0x01, 0xc7, 0xd7, 0xf2, 0xaa, 0x4b, 0x23, 0xf4, 0x29, 0x5c, 0x4f, 0x52, 0x4d,
	0x01, 0x55, 0xf5, 0x05, 0x28, 0x74, 0x5b, 0xdc, 0x74, 0xaf, 0xc2, 0x4e, 0xc2, 0xf8, 0x3f, 0x86,
	0xe6, 0x32, 0xdd, 0x34, 0x0c, 0x8d, 0xa1, 0x41, 0xdd, 0x70, 0xfa, 0x1d, 0xab, 0xfc, 0x93, 0x94,
	0xc6, 0x3f, 0xa9, 0x50, 0x8f, 0x9c, 0x84, 0x50, 0x4c, 0x9a, 0xa4, 0xfa, 0x04, 0x36, 0xda, 0xae,
	0x73, 0x6c, 0x79, 0x13, 0xae, 0xee, 0x34, 0x22, 0x3c, 0x02, 0xa5, 0x43, 0x6c, 0x7d, 0x7e, 0x89,
	0x2d, 0x4f, 0x60, 0xa3, 0xef, 0x06, 0xd6, 0xf1, 0x7c, 0x48, 0x1c, 0x33, 0xa5, 0x9b, 0x51, 0x4f,
	0xa0, 0x16, 0x07, 0x41, 0x18, 0x3e, 0x32, 0xc2, 0xc7, 0x4f, 0xc7, 0xae, 0xc3, 0x92, 0x9b, 0x12,
	0xa3, 0x35, 0xb2, 0x5c, 0x87, 0xbb, 0xd8, 0xeb, 0x50, 0x33, 0x11, 0xf3, 0xa1, 0xda, 0x72, 0x22,
	0xea, 0x98, 0xe4, 0x58, 0x9f, 0xd9, 0x01, 0x4b, 0x05, 0x30, 0xcc, 0xa8, 0x5f, 0x81, 0x12, 0x3f,
	0x0c, 0x15, 0xa6, 0x00, 0xf0, 0xcd, 0x57, 0x47, 0x6e, 0x37, 0x49, 0x19, 0x93, 0x89, 0x07, 0x90,
	0xb3, 0x2d, 0x3f, 0xe0, 0x3e, 0xec, 0xed, 0x73, 0x49, 0x50, 0x56, 0xd4, 0x77, 0x41, 0x4e, 0x8c,
	0x76, 0x56, 0xb1, 0xa7, 0xde, 0x86, 0xe2, 0x21, 0xe6, 0x64, 0xbd, 0x4e, 0x3c, 0x3f, 0x63, 0xd3,
	0x5f, 0xc0, 0x56, 0x9c, 0x4c, 0xcb, 0x34, 0xd3, 0xa0, 0x30, 0x7e, 0x14, 0xf3, 0xfa, 0x3f, 0x86,
	0x9b, 0x71, 0x5a, 0x03, 0x32, 0x71, 0xd3, 0x01, 0xe2, 0x63, 0x68, 0xc6, 0xb7, 0x52, 0x6b, 0x4a,
	0x09, 0x8a, 0x84, 0x31, 0xff, 0xb0, 0xa0, 0x88, 0x1f, 0x76, 0x75, 0x50, 0x24, 0x8c, 0xb3, 0x9b,
	0xa4, 0x9c, 0x02, 0x14, 0xcb, 0xac, 0x50, 0x50, 0x24, 0x46, 0x57, 0x83, 0xe2, 0x0b, 0xd8, 0x8a,
	0xaf, 0xfb, 0xef, 0x6e, 0x3d, 0xe9, 0xf6, 0x2e, 0x71, 0xeb, 0xf1, 0xad, 0x69, 0x6f, 0xfd, 0xdf,
	0x59, 0xa8, 0x27, 0xa2, 0xd8, 0x0a, 0x27, 0x7e, 0x17, 0x72, 0xd4, 0xbd, 0xf1, 0x1b, 0xb8, 0xbe,
	0x3a, 0x3b, 0x5a, 0x14, 0x0f, 0x2c, 0x64, 0x46, 0x6e, 0x2e, 0xb7, 0xd2, 0xad, 0x26, 0x7c, 0xd0,
	0x06, 0x54, 0xc8, 0xd7, 0x53, 0x54, 0x89, 0xe1, 0x9a, 0x3c, 0x51, 0xa3, 0xe5, 0xd1, 0x62, 0x74,
	0x82, 0x69, 0x6a, 0x29, 0xba, 0x34, 0x52, 0x0f, 0xad, 0x43, 0xd9, 0xf0, 0x88, 0x1e, 0x10, 0x2d,
	0xb0, 0x78, 0xbe, 0x2a, 0x29, 0x5b, 0x50, 0xf7, 0x89, 0x47, 0x7d, 0xbc, 0xe3, 0x9e, 0xb2, 0x89,
	0x92, 0xa8, 0xa7, 0xa6, 0xfa, 0x9c, 0x8d, 0x00, 0x8e, 0x34, 0xa0, 0xe4, 0x13, 0xc7, 0x64, 0x43,
	0x65, 0x1c, 0xc2, 0xca, 0xd0, 0xb1, 0xfc, 0x31, 0x1b, 0xac, 0xe0, 0xe0, 0xd3, 0xf0, 0x74, 0xaa,
	0x2e, 0xbf, 0x59, 0x5d, 0x99, 0x2d, 0xfd, 0x6c, 0x46, 0xbc, 0x79, 0x97, 0xad, 0xdb, 0x75, 0xcd,
	0x79, 0x84, 0xe9, 0x43, 0xb4, 0xa3, 0x1a, 0x26, 0xa2, 0x27, 0x4b, 0x59, 0xc4, 0x70, 0xec, 0x9e,
	0x9e, 0x0f, 0x9e, 0x8f, 0xa1, 0xee, 0xc6, 0xf7, 0xf0, 0xc0, 0x95, 0xcc, 0x69, 0x12, 0x94, 0xd5,
	0x1d, 0x00, 0xce, 0xd1, 0x33, 0x7f, 0x44, 0xed, 0xdb, 0xa2, 0x7b, 0x99, 0x7d, 0xd3, 0x3a, 0x9c,
	0xca, 0x98, 0x45, 0x2c, 0x3e, 0x84, 0x46, 0x5b, 0x77, 0x0c, 0x62, 0x23, 0x89, 0x34, 0x48, 0x7a,
	0x08, 0x8d, 0x0e, 0xb1, 0x49, 0x40, 0x52, 0xef, 0xf8, 0x09, 0xd4, 0xda, 0x63, 0x62, 0x9c, 0xb8,
	0xb3, 0xe0, 0x6a, 0xc9, 0xf1, 0x6d, 0x00, 0x51, 0x79, 0xad, 0x48, 0x8b, 0xd5, 0xd7, 0x50, 0x09,
	0xa7, 0x57, 0x05, 0x69, 0x9a, 0xaa, 0xa1, 0x4f, 0xca, 0x5e, 0x9c, 0xaa, 0x5d, 0x87, 0x1a, 0xe6,
	0x7f, 0x6f, 0x2c, 0x72, 0xca, 0x1c, 0x99, 0x84, 0x8e, 0xec, 0xe1, 0xe2, 0x0c, 0x5c, 0x57, 0x09,
	0xb3, 0x3f, 0x5e, 0x62, 0xb9, 0xc1, 0x98, 0x78, 0x22, 0xef, 0xa4, 0x39, 0xec, 0x27, 0xac, 0x9b,
	0x22, 0x76, 0xf4, 0xf5, 0x09, 0x26, 0x82, 0x01, 0xff, 0xcd, 0x6f, 0x63, 0xd5, 0xce, 0x6f, 0xb2,
	0xa0, 0x88, 0xad, 0xcf, 0xa7, 0xb6, 0xab, 0x9b, 0x28, 0x56, 0x58, 0x75, 0xb1, 0x9e, 0xc7, 0xfb,
	0x3c, 0xfb, 0xa7, 0x55, 0x23, 0x4b, 0xb5, 0xcf, 0xef, 0x45, 0xb0, 0x92, 0x90, 0x99, 0xec, 0xea,
	0xba, 0xb1, 0x01, 0xa5, 0x99, 0x4f, 0x0d, 0x88, 0x95, 0x4f, 0xd9, 0x68, 0x30, 0x58, 0xc3, 0xcf,
	0xfa, 0xc2, 0xd4, 0x0b, 0x38, 0xb0, 0x1c, 0x0d, 0x8a, 0x38, 0xfe, 0x21, 0x57, 0x4f, 0x09, 0x1d,
	0xc9, 0x5b, 0x67, 0x94, 0xd1, 0xa1, 0x5e, 0x58, 0x6f, 0xc4, 0x38, 0xd1, 0x44, 0xfb, 0x22, 0x1b,
	0xe9, 0x58, 0x94, 0x11, 0x44, 0x1d, 0xd8, 0x88, 0xeb, 0x24, 0x0d, 0x94, 0x22, 0x48, 0x60, 0x48,
	0x7a, 0xb2, 0xa0, 0xc2, 0x40, 0x9c, 0x06, 0xbf, 0x1f, 0xc1, 0xa6, 0xd8, 0x34, 0x74, 0x6d, 0xf3,
	0x20, 0x15, 0x8c, 0x69, 0x16, 0x2f, 0x76, 0x51, 0x27, 0xbd, 0x1a, 0x99, 0x0f, 0xb8, 0x69, 0x32,
	0x87, 0xfb, 0xf6, 0x19, 0x7a, 0x5a, 0x80, 0x40, 0xfd, 0x6b, 0x0e, 0x6a, 0x0b, 0x09, 0xa8, 0xe6,
	0x57, 0x56, 0xce, 0xd1, 0x9e, 0x55, 0xf2, 0xb2, 0x11, 0xd0, 0x09, 0xf8, 0xe4, 0x2e, 0x84, 0x0f,
	0x83, 0x5e, 0x5e, 0xd4, 0xd9, 0xdf, 0x5b, 0xd7, 0x2a, 0xd1, 0x16, 0x63, 0x0d, 0x86, 0x84, 0x87,
	0x67, 0x3e, 0x5a, 0x14, 0x5c, 0xac, 0xb7, 0x70, 0xeb, 0x1c, 0x4c, 0x25, 0xf1, 0x14, 0x36, 0xb9,
	0x28, 0x35, 0xcd, 0x76, 0x9d, 0x11, 0x73, 0xca, 0x51, 0x3c, 0xd7, 0xcf, 0xc8, 0x6e, 0x64, 0xe1,
	0x34, 0x23, 0x2d, 0x2e, 0xde, 0x0c, 0x51, 0x44, 0x33, 0x84, 0x45, 0xc3, 0xf5, 0x65, 0x23, 0xda,
	0x88, 0x67, 0x54, 0x9b, 0xc2, 0xe4, 0x99, 0xc4, 0xe8, 0x5e, 0xae, 0x63, 0x1f, 0x6d, 0x0b, 0xea,
	0x53, 0xd7, 0x72, 0x02, 0xcd, 0xd0, 0x3d, 0x93, 0xed, 0xdd, 0x12, 0xaa, 0x5e, 0x34, 0xd8, 0x9a,
	0x38, 0xf4, 0x09, 0xc8, 0x1e, 0xb1, 0xf5, 0x80, 0x98, 0x42, 0x66, 0xbf, 0x79, 0x03, 0xef, 0xef,
	0xce, 0x52, 0xe0, 0x8d, 0x2d, 0x5b, 0xb4, 0xe6, 0x6e, 0xa2, 0x4f, 0x3b, 0x80, 0x7a, 0x72, 0xc5,
	0x12, 0x96, 0x2e, 0xe3, 0x65, 0xd4, 0xdf, 0x67, 0x01, 0xa8, 0x2b, 0xe5, 0x75, 0x7b, 0x14, 0x13,
	0x99, 0x04, 0x26, 0xb2, 0x22, 0xbe, 0xd3, 0xe4, 0xd2, 0x0f, 0x88, 0xa7, 0x99, 0xfa, 0x9c, 0x43,
	0x13, 0x43, 0xb9, 0x6d, 0xb3, 0xd6, 0xb0, 0xe8, 0xa2, 0x71, 0xdd, 0x52, 0x62, 0x9a, 0x3e, 0x0b,
	0xc6, 0x67, 0x37, 0x50, 0x23, 0x7d, 0xd0, 0x42, 0x5c, 0xff, 0x61, 0x67, 0xeb, 0x70, 0xec, 0x06,
	0x2e, 0x07, 0x60, 0x03, 0x4a, 0x43, 0x6b, 0xe4, 0xe8, 0xc1, 0xcc, 0x23, 0xab, 0x1a, 0xa7, 0x9b,
	0x50, 0x9d, 0xea, 0xf3, 0x09, 0xa1, 0x97, 0x83, 0x44, 0x2b, 0xc2, 0xe5, 0x87, 0x81, 0xc2, 0xe7,
	0x08, 0x0b, 0xf5, 0x8b, 0x2d, 0x54, 0xf5, 0x6f, 0x99, 0x85, 0x1f, 0xa7, 0xc1, 0x9e, 0xdb, 0xeb,
	0xb9, 0x1e, 0xeb, 0x29, 0xd4, 0xfc, 0x98, 0x79, 0x9f, 0x51, 0xaa, 0x26, 0x7c, 0xc0, 0x87, 0x00,
	0x7e, 0xa8, 0x78, 0x9e, 0x86, 0xdd, 0x58, 0x6a, 0x7c, 0x84, 0x37, 0xf3, 0x14, 0xca, 0x86, 0x3b,
	0x11, 0xfd, 0x20, 0x54, 0x65, 0xf9, 0xf1, 0x76, 0x62, 0x7d, 0xdb, 0x9d, 0x60, 0x3c, 0xdd, 0x73,
	0x79, 0x6a, 0xa1, 0x9e, 0x42, 0x63, 0x69, 0x50, 0x79, 0x08, 0x15, 0x4e, 0x4b, 0x0b, 0xb3, 0x8c,
	0xf2, 0xe3, 0x9b, 0x2b, 0x88, 0x89, 0xf6, 0xd3, 0x26, 0x54, 0xc5, 0x8e, 0x68, 0x87, 0xef, 0x06,
	0x34, 0x46, 0xae, 0x6b, 0x6a, 0x62, 0xce, 0x63, 0x29, 0x26, 0xd5, 0xe4, 0x6f, 0xb2, 0x50, 0x8e,
	0x52, 0x50, 0x00, 0xc2, 0x33, 0x05, 0x52, 0x63, 0x48, 0xc8, 0x26, 0xba, 0x9c, 0xd2, 0x52, 0x97,
	0x33, 0x27, 0x1c, 0x80, 0xe1, 0x3a, 0x01, 0xe1, 0x0d, 0xf9, 0x58, 0xc4, 0x58, 0x13, 0x64, 0x17,
	0x5e, 0xa3, 0x10, 0x85, 0x47, 0x31, 0xec, 0xae, 0x06, 0xba, 0xa7, 0xd9, 0xe4, 0x0d, 0xb1, 0x79,
	0xb3, 0x54, 0x01, 0xb0, 0xad, 0x93, 0xb8, 0x4b, 0x6b, 0x40, 0xc9, 0x23, 0x6d, 0x7e, 0x56, 0x59,
	0x58, 0x03, 0xf5, 0x1c, 0x33, 0x9f, 0x43, 0xaa, 0x0e, 0x05, 0x8f, 0x7b, 0xbc, 0xaa, 0x58, 0x60,
	0xf9, 0xfb, 0xd6, 0x09, 0xcb, 0x21, 0x8b, 0x6a, 0x17, 0xaa, 0x2c, 0x14, 0x70, 0x5d, 0x2c, 0xc7,
	0x93, 0x88, 0x3c, 0x61, 0xfd, 0x21, 0x9a, 0xbf, 0x3d, 0x13, 0xa3, 0xbf, 0xa4, 0xbe, 0x14, 0x64,
	0xba, 0x6f, 0x74, 0x7b, 0x16, 0x90, 0x14, 0x64, 0xe2, 0x39, 0x19, 0x5d, 0x12, 0x97, 0x9b, 0x75,
	0xca, 0x08, 0xac, 0xc7, 0xf8, 0x4b, 0x13, 0xa2, 0x1f, 0xd1, 0xa3, 0x70, 0x35, 0x47, 0xfa, 0xc5,
	0x30, 0x7c, 0x08, 0x0d, 0xaa, 0x94, 0xf4, 0x87, 0xa8, 0x9f, 0x40, 0x3d, 0xb2, 0x63, 0x25, 0x84,
	0xb2, 0xec, 0xae, 0xf1, 0xde, 0xc2, 0xee, 0x61, 0x51, 0xfd, 0x6d, 0x86, 0x35, 0x81, 0xf8, 0x56,
	0x2c, 0x32, 0x97, 0xd4, 0x15, 0x57, 0x72, 0x96, 0xd7, 0xb3, 0xc5, 0x5f, 0xd1, 0xca, 0xa0, 0x8d,
	0x95, 0x33, 0xcd, 0x3b, 0xff, 0x6f, 0x85, 0x60, 0x58, 0x3c, 0xc4, 0xda, 0x90, 0xb9, 0xe5, 0x36,
	0x64, 0x1e, 0x95, 0xfb, 0xa7, 0x0c, 0x4b, 0x43, 0x22, 0x9c, 0xa4, 0xd1, 0xef, 0x07, 0x50, 0xe4,
	0x72, 0xb2, 0xa6, 0xeb, 0xf9, 0xa6, 0xb9, 0x01, 0x95, 0x96, 0x6d, 0xd3, 0x91, 0x76, 0xc4, 0xef,
	0x0a, 0xde, 0x16, 0x2e, 0x37, 0xe4, 0x6d, 0x4d, 0x38, 0xbe, 0x85, 0xc3, 0xa5, 0xc9, 0x72, 0x83,
	0x97, 0x1f, 0x6d, 0xd7, 0x4c, 0x95, 0x62, 0xbd, 0x82, 0xea, 0x90, 0xc6, 0xc4, 0xf0, 0xa9, 0xe8,
	0x5c, 0x99, 0xde, 0xe7, 0x11, 0x94, 0xc5, 0x3e, 0xe9, 0xdc, 0xa7, 0x1a, 0xf5, 0x53, 0xa8, 0xb5,
	0x4c, 0x13, 0xa9, 0x5f, 0x29, 0x65, 0x7c, 0x08, 0x0d, 0x56, 0x9f, 0xa7, 0x25, 0xa1, 0x3e, 0x86,
	0xf5, 0x5d, 0x3d, 0x30, 0xc6, 0x97, 0x38, 0x56, 0xfd, 0x36, 0x03, 0xc5, 0xb6, 0xee, 0x05, 0x67,
	0xbe, 0x42, 0xb2, 0xfc, 0x8b, 0xf1, 0x98, 0x78, 0x85, 0xcc, 0xa6, 0xca, 0xfc, 0xc3, 0x10, 0xaa,
	0x9b, 0x66, 0xec, 0x0d, 0x32, 0x99, 0x1f, 0xae, 0xc5, 0xde, 0x0b, 0x0b, 0x22, 0xff, 0xc1, 0x6c,
	0xa5, 0x28, 0xd2, 0x33, 0xe2, 0x79, 0x9a, 0x70, 0x11, 0x18, 0x47, 0x55, 0x1b, 0x2a, 0x42, 0x00,
	0x84, 0xd2, 0x3d, 0x28, 0x19, 0xfc, 0xfb, 0xac, 0xe7, 0xb4, 0x50, 0x60, 0x1e, 0xf1, 0x89, 0xa7,
	0x31, 0x17, 0xde, 0x13, 0x1e, 0x7c, 0x31, 0x41, 0x1d, 0x77, 0x3f, 0x7c, 0xf9, 0x52, 0xf7, 0x40,
	0x8e, 0x9e, 0x86, 0x98, 0x79, 0x0c, 0x55, 0x23, 0x32, 0x26, 0x4e, 0xbd, 0x75, 0xc6, 0xa9, 0x98,
	0x4f, 0x1f, 0x42, 0xb5, 0x65, 0x9a, 0x74, 0xe8, 0x2a, 0xe0, 0x88, 0xab, 0x13, 0x35, 0x4c, 0x29,
	0x0e, 0x67, 0xaf, 0xbf, 0x4f, 0x8a, 0xb7, 0x01, 0x90, 0x5f, 0x33, 0xea, 0x7d, 0x7a, 0x26, 0x93,
	0x4f, 0x52, 0x1f, 0x80, 0xcc, 0x00, 0x9a, 0xf2, 0x4c, 0xb5, 0x0b, 0x1b, 0x43, 0x62, 0x13, 0x23,
	0x10, 0x9a, 0x48, 0x59, 0x95, 0x73, 0x46, 0x99, 0xc5, 0x49, 0xea, 0xdb, 0x50, 0x8b, 0x90, 0x59,
	0x2a, 0x6f, 0xe8, 0x12, 0x97, 0xe6, 0x83, 0xba, 0x67, 0x8c, 0xc5, 0xb4, 0x80, 0x0c, 0x2b, 0x61,
	0x2f, 0x7c, 0x45, 0x7d, 0x00, 0x65, 0xf6, 0x2f, 0x00, 0x96, 0x2b, 0x53, 0x75, 0xd4, 0x96, 0xfc,
	0x17, 0x3b, 0x01, 0xcb, 0x77, 0xf5, 0x18, 0x2a, 0xec, 0x93, 0x8b, 0xf4, 0x43, 0xbd, 0xe7, 0xfe,
	0x2b, 0x7c, 0xa0, 0xa2, 0xbb, 0xff, 0xf7, 0x1b, 0x69, 0x89, 0x82, 0xaa, 0x70, 0x56, 0xcb, 0x8c,
	0xf5, 0xd2, 0x36, 0xa1, 0x6a, 0x12, 0x5b, 0x9f, 0x6b, 0x1e, 0x3b, 0x90, 0xa5, 0x35, 0xea, 0x18,
	0xaa, 0xa1, 0xcc, 0x08, 0xc5, 0x0b, 0x5e, 0x53, 0x17, 0x0a, 0xba, 0xac, 0x7a, 0xfb, 0x50, 0xee,
	0x2e, 0x3a, 0x6f, 0x2b, 0xf4, 0x5b, 0x81, 0x1c, 0x8a, 0xcc, 0xb0, 0x59, 0x06, 0x89, 0x8a, 0x2a,
	0x85, 0x19, 0x0f, 0x71, 0x4c, 0x8d, 0xa5, 0xfc, 0xec, 0x09, 0xf4, 0x17, 0xb0, 0x25, 0xae, 0xfa,
	0x19, 0x63, 0x8e, 0xf2, 0x7f, 0xd9, 0xc7, 0xc5, 0xeb, 0x50, 0xb3, 0x1c, 0xc3, 0xc3, 0x57, 0x50,
	0x8d, 0xf7, 0xd0, 0x68, 0x3e, 0xf5, 0x73, 0x58, 0x5f, 0x41, 0x5d, 0xf9, 0x20, 0xd6, 0x8b, 0xbe,
	0x73, 0x06, 0xf4, 0xf8, 0x8e, 0x38, 0xf1, 0xb0, 0x5b, 0x55, 0x54, 0xff, 0x9c, 0x65, 0x09, 0x48,
	0x74, 0xad, 0x02, 0xc0, 0xc9, 0xc4, 0x7a, 0x5c, 0x3c, 0x6d, 0xc9, 0x5c, 0x24, 0xc7, 0x3b, 0x90,
	0x4b, 0xf3, 0xff, 0x95, 0xe5, 0x6c, 0x79, 0x91, 0x4f, 0xe7, 0x97, 0xdf, 0xdb, 0xd7, 0x56, 0x3c,
	0xcb, 0x17, 0x92, 0x49, 0x76, 0x71, 0x15, 0x1a, 0xc3, 0x3e, 0x6d, 0x78, 0xc9, 0x8b, 0x3e, 0xed,
	0x58, 0x20, 0xb3, 0x2c, 0x4e, 0x5c, 0x74, 0xe6, 0x2a, 0xcb, 0x7f, 0x41, 0xc1, 0xbc, 0x59, 0x9d,
	0x2d, 0x5d, 0xc8, 0x65, 0xaf, 0xfa, 0x09, 0x94, 0x69, 0x19, 0xc6, 0x77, 0x73, 0x33, 0xbe, 0xe0,
	0x0a, 0xd5, 0x3f, 0x64, 0xe0, 0xe6, 0x8a, 0x73, 0x5f, 0x5a, 0xc1, 0xf8, 0xe5, 0xf8, 0x52, 0xc7,
	0x27, 0x6a, 0x19, 0x7a, 0xbf, 0x09, 0x8e, 0xa4, 0x54, 0x1c, 0xb5, 0x18, 0x43, 0x68, 0x88, 0xec,
	0xf9, 0x30, 0xca, 0xd0, 0xf2, 0xe3, 0x56, 0xe2, 0xa5, 0x9a, 0xa6, 0x3f, 0xef, 0x31, 0x5d, 0x26,
	0x48, 0x24, 0x4c, 0x92, 0x2e, 0xbc, 0xcb, 0x70, 0xca, 0x8c, 0x9e, 0x85, 0xaa, 0x06, 0x94, 0xc4,
	0x22, 0x11, 0xac, 0x74, 0xb8, 0x91, 0x20, 0xb7, 0x67, 0x8f, 0x9e, 0x4f, 0x59, 0x87, 0x73, 0x79,
	0xbd, 0xf2, 0x08, 0x2a, 0xaf, 0x23, 0x9a, 0x49, 0x01, 0x6f, 0xf5, 0x2e, 0x54, 0x85, 0xf6, 0x19,
	0x1b, 0xeb, 0x50, 0x5e, 0x98, 0x8b, 0x60, 0xe4, 0x04, 0xaa, 0x87, 0xfa, 0x3c, 0xde, 0xad, 0x48,
	0x38, 0x99, 0x2a, 0xe4, 0x27, 0xae, 0x43, 0xe6, 0x8b, 0xbf, 0x5b, 0x24, 0x4b, 0x29, 0x4a, 0x9a,
	0xfb, 0x48, 0xdc, 0x97, 0x13, 0x4a, 0xc4, 0x17, 0x07, 0xca, 0x2f, 0xcb, 0xdd, 0x3f, 0x00, 0x99,
	0x15, 0x46, 0xad, 0x59, 0x20, 0x42, 0x53, 0x13, 0xe4, 0x19, 0x8e, 0x61, 0x3b, 0x83, 0x21, 0x1a,
	0xe3, 0xae, 0x7a, 0x17, 0xe4, 0xe8, 0xa3, 0xc2, 0x6a, 0xee, 0x54, 0x23, 0xbe, 0x0a, 0x9f, 0x1e,
	0x64, 0x28, 0x9a, 0x7a, 0x40, 0x8e, 0xac, 0x68, 0xc7, 0x85, 0xff, 0x6d, 0x86, 0x75, 0x5c, 0x3e,
	0x0c, 0x6b, 0x4e, 0x09, 0x35, 0x99, 0x0c, 0x31, 0x9c, 0x9a, 0x36, 0xc4, 0x45, 0xb4, 0xe8, 0xd8,
	0x4a, 0xf2, 0x92, 0xea, 0xcd, 0x3d, 0xf9, 0x76, 0x22, 0x5d, 0xed, 0xed, 0x24, 0x97, 0x08, 0x69,
	0xfd, 0xf0, 0x9f, 0x3d, 0xf4, 0xf8, 0x99, 0x8f, 0xa9, 0x22, 0x16, 0xea, 0x91, 0x37, 0x8f, 0xb6,
	0x3b, 0x09, 0x03, 0x44, 0x26, 0xd6, 0xbe, 0x43, 0x1d, 0xa8, 0x7f, 0xcc, 0xc0, 0xe6, 0x62, 0x69,
	0x6a, 0x91, 0x3e, 0x82, 0x86, 0x81, 0x7f, 0x8d, 0x7c, 0xee, 0x13, 0xb1, 0x8f, 0xcb, 0x75, 0x63,
	0xb5, 0x16, 0x29, 0x23, 0xef, 0x63, 0xfd, 0xc5, 0x16, 0xe7, 0x2e, 0x58, 0xac, 0xbe, 0x62, 0xff,
	0x6d, 0x38, 0x74, 0x2d, 0x87, 0x66, 0x55, 0x66, 0x98, 0x36, 0xe9, 0x9e, 0xb9, 0xe8, 0x74, 0x88,
	0x01, 0xc7, 0xe5, 0x97, 0xba, 0x89, 0x89, 0xaf, 0xa9, 0x4d, 0x75, 0xdf, 0x3f, 0x75, 0x3d, 0x93,
	0xb7, 0x3b, 0xca, 0x20, 0x9d, 0x90, 0x39, 0xd3, 0xe1, 0xbd, 0xcf, 0xa0, 0x1a, 0x2f, 0x38, 0x0b,
	0x20, 0xb5, 0xf6, 0xf7, 0xe5, 0x6b, 0xf4, 0x47, 0xbf, 0xfb, 0x52, 0xce, 0x28, 0x45, 0xc8, 0x7d,
	0x7e, 0x70, 0xd0, 0x91, 0xb3, 0x0a, 0xc0, 0xda, 0xb3, 0x5e, 0xa7, 0xb3, 0xdf, 0x95, 0x25, 0x3a,
	0xbd, 0xdb, 0xea, 0xc8, 0xb9, 0x7b, 0xef, 0x40, 0x25, 0xe6, 0xa4, 0x4a, 0x90, 0xdf, 0x9d, 0xcd,
	0x89, 0x27, 0x5f, 0xa3, 0xeb, 0x99, 0x25, 0xc9, 0x99, 0x7b, 0x26, 0x94, 0x23, 0x19, 0x99, 0x52,
	0x85, 0x52, 0xdb, 0x9d, 0x4c, 0x5d, 0xdf, 0x0a, 0x88, 0x7c, 0x4d, 0xa9, 0x40, 0xf1, 0x90, 0x56,
	0x19, 0x2d, 0xdf, 0x90, 0x33, 0x74, 0x12, 0xbf, 0x3a, 0xc4, 0x37, 0xe4, 0xac, 0x52, 0x86, 0x42,
	0x9f, 0x9c, 0x0e, 0x5d, 0x2f, 0x90, 0xa9, 0xf5, 0x95, 0x86, 0xba, 0x4d, 0x7c, 0xfc, 0xcc, 0xe1,
	0x27, 0x2d, 0xa6, 0xf0, 0x33, 0x7f, 0x4f, 0x87, 0x7a, 0xf2, 0x8f, 0x3c, 0x55, 0x28, 0xb5, 0xf6,
	0xf7, 0xb5, 0x83, 0x41, 0xa7, 0x3b, 0x60, 0x27, 0xbd, 0x6c, 0xf5, 0x8e, 0xb4, 0xc3, 0xd6, 0x2b,
	0x76, 0x12, 0x7e, 0x0d, 0xbb, 0x7d, 0x2a, 0xa0, 0x0c, 0x15, 0xfc, 0x1c, 0x74, 0xdb, 0xdd, 0xde,
	0x0b, 0x2a, 0xa6, 0x0c, 0x95, 0xbd, 0x5e, 0xbf, 0x37, 0xfc, 0x29, 0x27, 0x90, 0xbb, 0xf7, 0x6d,
	0x06, 0x6a, 0x71, 0x73, 0xa0, 0x0c, 0x1e, 0x76, 0xfb, 0x9d, 0x5e, 0xff, 0x73, 0xf9, 0x1a, 0x25,
	0xd9, 0x3f, 0xa0, 0x14, 0x0e, 0x06, 0x1d, 0x39, 0x43, 0xd5, 0xd1, 0x1d, 0x0c, 0x0e, 0x06, 0x72,
	0x56, 0xa9, 0x01, 0xf4, 0xfa, 0xda, 0xd1, 0xa0, 0xd5, 0x1f, 0xf6, 0x8e, 0x64, 0x89, 0x7e, 0x77,
	0xba, 0xfb, 0xbd, 0x17, 0xdd, 0x01, 0xdd, 0x99, 0x43, 0x75, 0xf5, 0x3e, 0xef, 0x77, 0x3b, 0x32,
	0xad, 0xb3, 0x8a, 0x83, 0xee, 0x17, 0xdd, 0xf6, 0x51, 0xb7, 0x23, 0xaf, 0xe1, 0x01, 0x83, 0x83,
	0xdd, 0xfd, 0xee, 0x33, 0xb9, 0x40, 0x3f, 0x7a, 0xfd, 0x17, 0xad, 0xfd, 0x5e, 0x47, 0x2e, 0xd2,
	0x8f, 0xa3, 0xde, 0xb3, 0xee, 0xc1, 0xf3, 0x23, 0xb9, 0x44, 0x09, 0xec, 0xb5, 0x7a, 0xfb, 0xdd,
	0x8e, 0x0c, 0xa8, 0x98, 0x6e, 0xbf, 0xa3, 0xed, 0xb6, 0xda, 0x5f, 0xca, 0x65, 0x3a, 0x75, 0xd4,
	0xfa, 0x92, 0x9e, 0x53, 0xd9, 0xad, 0xfc, 0xe5, 0xbb, 0x3b, 0x99, 0xbf, 0x7f, 0x77, 0x27, 0xf3,
	0xcf, 0xef, 0xee, 0x64, 0xfe, 0x13, 0x00, 0x00, 0xff, 0xff, 0x95, 0xc6, 0xb6, 0xe1, 0xdd, 0x2b,
	0x00, 0x00,
}

func (m *ShopInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Page == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Page))
	}
	if m.PageSize == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page_size")
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PageSize))
	}
	if m.Type == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("type")
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Type))
	}
	if len(m.CacheItemTypes) > 0 {
		for _, num := range m.CacheItemTypes {
			dAtA[i] = 0x20
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(num))
		}
	}
	if len(m.CacheSearch) > 0 {
		for _, s := range m.CacheSearch {
			dAtA[i] = 0x2a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ItemFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ItemFile) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.FileUrl == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("file_url")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.FileUrl)))
		i += copy(dAtA[i:], *m.FileUrl)
	}
	if m.FileType == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("file_type")
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.FileType))
	}
	if m.FileWidth != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.FileWidth)))
		i += copy(dAtA[i:], *m.FileWidth)
	}
	if m.FileHeight != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.FileHeight)))
		i += copy(dAtA[i:], *m.FileHeight)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopItem) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ItemId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if m.Price != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Price))
	}
	if m.ItemFile != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.ItemFile.Size()))
		n1, err := m.ItemFile.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.Title != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Title)))
		i += copy(dAtA[i:], *m.Title)
	}
	if m.StoreCount != nil {
		dAtA[i] = 0x28
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.StoreCount))
	}
	if m.PlayerId != nil {
		dAtA[i] = 0x30
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PlayerId))
	}
	if m.Nickname != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Nickname)))
		i += copy(dAtA[i:], *m.Nickname)
	}
	if m.Avatar != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Avatar)))
		i += copy(dAtA[i:], *m.Avatar)
	}
	if m.ShortAddress != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ShortAddress)))
		i += copy(dAtA[i:], *m.ShortAddress)
	}
	if m.Account != nil {
		dAtA[i] = 0x52
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Account)))
		i += copy(dAtA[i:], *m.Account)
	}
	if m.Sex != nil {
		dAtA[i] = 0x58
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Sex))
	}
	if m.Name != nil {
		dAtA[i] = 0x62
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Name)))
		i += copy(dAtA[i:], *m.Name)
	}
	if m.State != nil {
		dAtA[i] = 0x68
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.State))
	}
	if m.ItemType != nil {
		dAtA[i] = 0x70
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemType))
	}
	if m.MayEnjoy != nil {
		dAtA[i] = 0x78
		i++
		if *m.MayEnjoy {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ItemFlag != nil {
		dAtA[i] = 0x80
		i++
		dAtA[i] = 0x1
		i++
		if *m.ItemFlag {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.CopyName != nil {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.CopyName)))
		i += copy(dAtA[i:], *m.CopyName)
	}
	if m.Types != nil {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Types))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ItemList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ItemList) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, msg := range m.Items {
			dAtA[i] = 0xa
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Page == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page")
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Page))
	}
	if m.PageSize == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page_size")
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PageSize))
	}
	if m.Count == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("count")
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Count))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *MyReleaseInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MyReleaseInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Page == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Page))
	}
	if m.PageSize == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page_size")
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ItemListForMyRelease) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ItemListForMyRelease) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, msg := range m.Items {
			dAtA[i] = 0xa
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Page == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page")
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Page))
	}
	if m.PageSize == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page_size")
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PageSize))
	}
	if m.Count == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("count")
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Count))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BuyItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BuyItem) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ItemId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if m.ItemFile == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_file")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.ItemFile.Size()))
		n2, err := m.ItemFile.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.Name != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Name)))
		i += copy(dAtA[i:], *m.Name)
	}
	if m.OriginPrice != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OriginPrice))
	}
	if m.Price != nil {
		dAtA[i] = 0x28
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Price))
	}
	if m.SponsorId != nil {
		dAtA[i] = 0x30
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.SponsorId))
	}
	if m.Avatar != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Avatar)))
		i += copy(dAtA[i:], *m.Avatar)
	}
	if m.Nickname != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Nickname)))
		i += copy(dAtA[i:], *m.Nickname)
	}
	if m.Count != nil {
		dAtA[i] = 0x48
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Count))
	}
	if m.Sex != nil {
		dAtA[i] = 0x50
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Sex))
	}
	if m.Title != nil {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Title)))
		i += copy(dAtA[i:], *m.Title)
	}
	if m.DeliverAddress != nil {
		dAtA[i] = 0x62
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.DeliverAddress.Size()))
		n3, err := m.DeliverAddress.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BuyItemID) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BuyItemID) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ItemId != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if m.Count != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Count))
	}
	if m.Remark != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Remark)))
		i += copy(dAtA[i:], *m.Remark)
	}
	if m.ItemTitle != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ItemTitle)))
		i += copy(dAtA[i:], *m.ItemTitle)
	}
	if m.ItemName != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ItemName)))
		i += copy(dAtA[i:], *m.ItemName)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BuyItemInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BuyItemInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, msg := range m.Items {
			dAtA[i] = 0xa
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Address == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.Address.Size()))
		n4, err := m.Address.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BuyItemResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BuyItemResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.OrderId != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OrderId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SettlementItemID) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SettlementItemID) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ItemId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if m.Count == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("count")
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Count))
	}
	if m.ItemTitle == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_title")
	} else {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ItemTitle)))
		i += copy(dAtA[i:], *m.ItemTitle)
	}
	if m.ItemName == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_name")
	} else {
		dAtA[i] = 0x22
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ItemName)))
		i += copy(dAtA[i:], *m.ItemName)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SettlementInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SettlementInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, msg := range m.Items {
			dAtA[i] = 0xa
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SettlementResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SettlementResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if len(m.NoSaleMessages) > 0 {
		for _, s := range m.NoSaleMessages {
			dAtA[i] = 0x12
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.NoStockMessages) > 0 {
		for _, s := range m.NoStockMessages {
			dAtA[i] = 0x1a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.BlackMessages) > 0 {
		for _, s := range m.BlackMessages {
			dAtA[i] = 0x22
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *OrderInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OrderInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Type == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("type")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Type))
	}
	if m.ItemType == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_type")
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemType))
	}
	if m.Page == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page")
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Page))
	}
	if m.PageSize == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page_size")
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *OrderDetailInfoPara) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OrderDetailInfoPara) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Type == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("type")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Type))
	}
	if m.OrderId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OrderId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *OrderID) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OrderID) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.OrderId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OrderId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *EditOrderAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EditOrderAddress) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.OrderId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OrderId))
	}
	if m.Address == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.Address.Size()))
		n5, err := m.Address.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *EditOrderAddressResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EditOrderAddressResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *EditDeliverAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EditDeliverAddress) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.OrderId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OrderId))
	}
	if m.Address == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.Address.Size()))
		n6, err := m.Address.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *EditDeliverAddressResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EditDeliverAddressResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopAddressResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopAddressResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.DeliverAddress != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.DeliverAddress.Size()))
		n7, err := m.DeliverAddress.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopAddressInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopAddressInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ItemId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ConfirmReceiveResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConfirmReceiveResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DelayReceiveResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DelayReceiveResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *NotifySendItemResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NotifySendItemResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ReceiveAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReceiveAddress) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Name != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Name)))
		i += copy(dAtA[i:], *m.Name)
	}
	if m.Phone != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Phone)))
		i += copy(dAtA[i:], *m.Phone)
	}
	if m.Region != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Region)))
		i += copy(dAtA[i:], *m.Region)
	}
	if m.DetailAddress != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.DetailAddress)))
		i += copy(dAtA[i:], *m.DetailAddress)
	}
	if m.DefaultFlag != nil {
		dAtA[i] = 0x28
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.DefaultFlag))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ReceiveAddressInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReceiveAddressInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.AddressId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.AddressId))
	}
	if m.Address == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.Address.Size()))
		n8, err := m.Address.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ReceiveAddressList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReceiveAddressList) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, msg := range m.List {
			dAtA[i] = 0xa
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ReceiveAddressID) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReceiveAddressID) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.AddressId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.AddressId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *PlayerID) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlayerID) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.PlayerId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("player_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PlayerId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ReceiveAddressAddResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReceiveAddressAddResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.AddressId != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.AddressId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ReceiveAddressRemoveResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReceiveAddressRemoveResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ReceiveAddressEditResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReceiveAddressEditResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeliverAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeliverAddress) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Name != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Name)))
		i += copy(dAtA[i:], *m.Name)
	}
	if m.Phone != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Phone)))
		i += copy(dAtA[i:], *m.Phone)
	}
	if m.Region != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Region)))
		i += copy(dAtA[i:], *m.Region)
	}
	if m.DetailAddress != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.DetailAddress)))
		i += copy(dAtA[i:], *m.DetailAddress)
	}
	if m.DefaultFlag != nil {
		dAtA[i] = 0x28
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.DefaultFlag))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeliverAddressInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeliverAddressInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.AddressId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.AddressId))
	}
	if m.Address == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.Address.Size()))
		n9, err := m.Address.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n9
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeliverAddressList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeliverAddressList) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, msg := range m.List {
			dAtA[i] = 0xa
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeliverAddressID) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeliverAddressID) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.AddressId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.AddressId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeliverAddressAddResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeliverAddressAddResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.AddressId != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.AddressId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeliverAddressRemoveResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeliverAddressRemoveResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeliverAddressEditResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeliverAddressEditResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *OrderDetailInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OrderDetailInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.OrderId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OrderId))
	}
	if m.Item == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.Item.Size()))
		n10, err := m.Item.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n10
	}
	if m.State == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("state")
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.State))
	}
	if m.Address != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.Address.Size()))
		n11, err := m.Address.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n11
	}
	if m.ExpressCode != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ExpressCode)))
		i += copy(dAtA[i:], *m.ExpressCode)
	}
	if m.ExpressCom != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ExpressCom)))
		i += copy(dAtA[i:], *m.ExpressCom)
	}
	if m.ExpressName != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ExpressName)))
		i += copy(dAtA[i:], *m.ExpressName)
	}
	if m.CreateTime != nil {
		dAtA[i] = 0x40
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.CreateTime))
	}
	if m.ServerNowTime != nil {
		dAtA[i] = 0x48
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ServerNowTime))
	}
	if m.PayTime != nil {
		dAtA[i] = 0x50
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PayTime))
	}
	if m.SendTime != nil {
		dAtA[i] = 0x58
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.SendTime))
	}
	if m.FinishTime != nil {
		dAtA[i] = 0x60
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.FinishTime))
	}
	if len(m.ExpressInfos) > 0 {
		for _, msg := range m.ExpressInfos {
			dAtA[i] = 0x6a
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.ExpressPhone != nil {
		dAtA[i] = 0x72
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ExpressPhone)))
		i += copy(dAtA[i:], *m.ExpressPhone)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *OrderDetailInfoShow) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OrderDetailInfoShow) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.OrderDetailInfo != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.OrderDetailInfo.Size()))
		n12, err := m.OrderDetailInfo.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n12
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ExpressMsg) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExpressMsg) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Info != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Info)))
		i += copy(dAtA[i:], *m.Info)
	}
	if m.Time != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Time))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CancelOrderResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CancelOrderResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeleteOrderResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteOrderResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CheckoutResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckoutResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.OrderId != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OrderId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopItemID) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopItemID) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ItemId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopItemInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopItemInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ItemId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if m.Flag == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("flag")
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Flag))
	}
	if m.PageViewFlag != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PageViewFlag))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopItemType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopItemType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Type != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Type))
	}
	if len(m.OtherType) > 0 {
		for _, s := range m.OtherType {
			dAtA[i] = 0x12
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopItemTypeName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopItemTypeName) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.TypeName != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.TypeName)))
		i += copy(dAtA[i:], *m.TypeName)
	}
	if len(m.OtherType) > 0 {
		for _, s := range m.OtherType {
			dAtA[i] = 0x12
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopItemUploadInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopItemUploadInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Title == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("title")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Title)))
		i += copy(dAtA[i:], *m.Title)
	}
	if len(m.ItemFiles) > 0 {
		for _, msg := range m.ItemFiles {
			dAtA[i] = 0x12
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Price == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("price")
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Price))
	}
	if m.OriginPrice != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OriginPrice))
	}
	if m.UserName == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("user_name")
	} else {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.UserName)))
		i += copy(dAtA[i:], *m.UserName)
	}
	if m.Phone == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("phone")
	} else {
		dAtA[i] = 0x32
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Phone)))
		i += copy(dAtA[i:], *m.Phone)
	}
	if m.Address == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address")
	} else {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Address)))
		i += copy(dAtA[i:], *m.Address)
	}
	if m.DetailAddress == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("detail_address")
	} else {
		dAtA[i] = 0x42
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.DetailAddress)))
		i += copy(dAtA[i:], *m.DetailAddress)
	}
	if m.Type == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("type")
	} else {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.Type.Size()))
		n13, err := m.Type.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n13
	}
	if m.StockCount == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("stock_count")
	} else {
		dAtA[i] = 0x50
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.StockCount))
	}
	if m.Name == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("name")
	} else {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Name)))
		i += copy(dAtA[i:], *m.Name)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopItemUploadResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopItemUploadResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.ItemId != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopItemDeleteResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopItemDeleteResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopItemSoldOutResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopItemSoldOutResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopItemEditInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopItemEditInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ItemId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if m.Info == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("info")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.Info.Size()))
		n14, err := m.Info.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n14
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopItemDetail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopItemDetail) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ItemId != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if m.Price != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Price))
	}
	if m.OriginPrice != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OriginPrice))
	}
	if len(m.ItemFiles) > 0 {
		for _, msg := range m.ItemFiles {
			dAtA[i] = 0x22
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Title != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Title)))
		i += copy(dAtA[i:], *m.Title)
	}
	if m.PlayerId != nil {
		dAtA[i] = 0x30
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PlayerId))
	}
	if m.Nickname != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Nickname)))
		i += copy(dAtA[i:], *m.Nickname)
	}
	if m.Avatar != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Avatar)))
		i += copy(dAtA[i:], *m.Avatar)
	}
	if m.ShortAddress != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ShortAddress)))
		i += copy(dAtA[i:], *m.ShortAddress)
	}
	if m.StoreCount != nil {
		dAtA[i] = 0x50
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.StoreCount))
	}
	if m.CreateTime != nil {
		dAtA[i] = 0x58
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.CreateTime))
	}
	if m.Type != nil {
		dAtA[i] = 0x62
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.Type.Size()))
		n15, err := m.Type.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n15
	}
	if m.StockCount != nil {
		dAtA[i] = 0x68
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.StockCount))
	}
	if m.TimeLong != nil {
		dAtA[i] = 0x72
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.TimeLong)))
		i += copy(dAtA[i:], *m.TimeLong)
	}
	if m.Address != nil {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Address)))
		i += copy(dAtA[i:], *m.Address)
	}
	if m.DetailAddress != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.DetailAddress)))
		i += copy(dAtA[i:], *m.DetailAddress)
	}
	if m.Name != nil {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Name)))
		i += copy(dAtA[i:], *m.Name)
	}
	if m.Sex != nil {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Sex))
	}
	if m.State != nil {
		dAtA[i] = 0x98
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.State))
	}
	if m.UserName != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.UserName)))
		i += copy(dAtA[i:], *m.UserName)
	}
	if m.Phone != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Phone)))
		i += copy(dAtA[i:], *m.Phone)
	}
	if m.StoreFlag != nil {
		dAtA[i] = 0xb0
		i++
		dAtA[i] = 0x1
		i++
		if *m.StoreFlag {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.PointCardName != nil {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.PointCardName)))
		i += copy(dAtA[i:], *m.PointCardName)
	}
	if m.CopyName != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.CopyName)))
		i += copy(dAtA[i:], *m.CopyName)
	}
	if len(m.RelatedShopItems) > 0 {
		for _, msg := range m.RelatedShopItems {
			dAtA[i] = 0xca
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Types != nil {
		dAtA[i] = 0xd0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Types))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RelatedShopItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RelatedShopItem) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ItemId != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if len(m.ItemFiles) > 0 {
		for _, msg := range m.ItemFiles {
			dAtA[i] = 0x12
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SellerInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SellerInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Nickname != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Nickname)))
		i += copy(dAtA[i:], *m.Nickname)
	}
	if m.Avatar != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Avatar)))
		i += copy(dAtA[i:], *m.Avatar)
	}
	if m.RegisterDay != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.RegisterDay))
	}
	if m.SellItemCount != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.SellItemCount))
	}
	if m.NameAuth != nil {
		dAtA[i] = 0x28
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.NameAuth))
	}
	if m.PlayerId != nil {
		dAtA[i] = 0x30
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PlayerId))
	}
	if m.Account != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Account)))
		i += copy(dAtA[i:], *m.Account)
	}
	if m.Phone != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Phone)))
		i += copy(dAtA[i:], *m.Phone)
	}
	if m.Photo != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Photo)))
		i += copy(dAtA[i:], *m.Photo)
	}
	if m.Signature != nil {
		dAtA[i] = 0x52
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Signature)))
		i += copy(dAtA[i:], *m.Signature)
	}
	if m.Sex != nil {
		dAtA[i] = 0x58
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Sex))
	}
	if m.PaymentCount != nil {
		dAtA[i] = 0x60
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PaymentCount))
	}
	if m.PageViews != nil {
		dAtA[i] = 0x68
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PageViews))
	}
	if m.Types != nil {
		dAtA[i] = 0x70
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Types))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopItemShowDetail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopItemShowDetail) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.ShopItemDetail != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.ShopItemDetail.Size()))
		n16, err := m.ShopItemDetail.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n16
	}
	if m.SellerInfo != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.SellerInfo.Size()))
		n17, err := m.SellerInfo.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n17
	}
	if m.CommentInfo != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.CommentInfo.Size()))
		n18, err := m.CommentInfo.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n18
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CommInfoForDetail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CommInfoForDetail) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.CommentInfo != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.CommentInfo.Size()))
		n19, err := m.CommentInfo.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n19
	}
	if m.CommentCount != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.CommentCount))
	}
	if m.GoodCommentRate != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.GoodCommentRate))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CommentInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CommentInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.CommentId != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.CommentId))
	}
	if m.PlayerId != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PlayerId))
	}
	if m.Avatar != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Avatar)))
		i += copy(dAtA[i:], *m.Avatar)
	}
	if m.Nickname != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Nickname)))
		i += copy(dAtA[i:], *m.Nickname)
	}
	if m.Content != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Content)))
		i += copy(dAtA[i:], *m.Content)
	}
	if m.ItemId != nil {
		dAtA[i] = 0x30
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if m.TimeLong != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.TimeLong)))
		i += copy(dAtA[i:], *m.TimeLong)
	}
	if m.Sex != nil {
		dAtA[i] = 0x40
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Sex))
	}
	if m.StarLevel != nil {
		dAtA[i] = 0x48
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.StarLevel))
	}
	if m.LikeCount != nil {
		dAtA[i] = 0x50
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.LikeCount))
	}
	if m.ReContent != nil {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ReContent)))
		i += copy(dAtA[i:], *m.ReContent)
	}
	if m.Status != nil {
		dAtA[i] = 0x60
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Status))
	}
	if m.ReTime != nil {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ReTime)))
		i += copy(dAtA[i:], *m.ReTime)
	}
	if m.IsLike != nil {
		dAtA[i] = 0x70
		i++
		if *m.IsLike {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UploadComment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UploadComment) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ItemId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if m.Content == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("content")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Content)))
		i += copy(dAtA[i:], *m.Content)
	}
	if m.Sponsor_Id == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("sponsor_Id")
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Sponsor_Id))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UploadEvalute) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UploadEvalute) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ItemId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if m.Content == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("content")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Content)))
		i += copy(dAtA[i:], *m.Content)
	}
	if m.OrderId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OrderId))
	}
	if m.StarLevel == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("star_level")
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.StarLevel))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UploadCommentResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UploadCommentResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.Comment != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.Comment.Size()))
		n20, err := m.Comment.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n20
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *LikeCommentResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LikeCommentResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *LikeCommentInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LikeCommentInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.CommentId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("comment_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.CommentId))
	}
	if m.LikeType == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("like_type")
	} else {
		dAtA[i] = 0x10
		i++
		if *m.LikeType {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopCommentList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopCommentList) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ItemId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if m.Sponsor_Id == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("sponsor_Id")
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Sponsor_Id))
	}
	if m.QueryCon == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("queryCon")
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.QueryCon))
	}
	if m.Page == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page")
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Page))
	}
	if m.PageSize == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page_size")
	} else {
		dAtA[i] = 0x28
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopCommentListResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopCommentListResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if len(m.Comments) > 0 {
		for _, msg := range m.Comments {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.AllCommCount != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.AllCommCount))
	}
	if m.Page != nil {
		dAtA[i] = 0x28
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Page))
	}
	if m.PageSize != nil {
		dAtA[i] = 0x30
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PageSize))
	}
	if m.Count != nil {
		dAtA[i] = 0x38
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Count))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ExpressCodeResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExpressCodeResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *StoreItemList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StoreItemList) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if len(m.StoreItems) > 0 {
		for _, msg := range m.StoreItems {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *AddStoreResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddStoreResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.ItemId != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RemoveStoreResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RemoveStoreResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BatchAddStoreResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BatchAddStoreResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CartItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CartItem) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ItemId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if m.Title == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("title")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Title)))
		i += copy(dAtA[i:], *m.Title)
	}
	if m.ItemFile == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_file")
	} else {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.ItemFile.Size()))
		n21, err := m.ItemFile.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n21
	}
	if m.Price != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Price))
	}
	if m.AddCount != nil {
		dAtA[i] = 0x28
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.AddCount))
	}
	if m.OriginPrice != nil {
		dAtA[i] = 0x30
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OriginPrice))
	}
	if m.Name != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Name)))
		i += copy(dAtA[i:], *m.Name)
	}
	if m.Flag != nil {
		dAtA[i] = 0x40
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Flag))
	}
	if m.ErrContent != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ErrContent)))
		i += copy(dAtA[i:], *m.ErrContent)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CartItemInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CartItemInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.CartItems) > 0 {
		for _, msg := range m.CartItems {
			dAtA[i] = 0xa
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.SellerPlayerId != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.SellerPlayerId))
	}
	if m.SellerNickName != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.SellerNickName)))
		i += copy(dAtA[i:], *m.SellerNickName)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CartItemInfoList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CartItemInfoList) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.CartItemInfos) > 0 {
		for _, msg := range m.CartItemInfos {
			dAtA[i] = 0xa
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *AddCartResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddCartResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.ItemId != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if m.AddCount != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.AddCount))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SubCartResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SubCartResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.ItemId != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ItemId))
	}
	if m.AddCount != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.AddCount))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ItemIdList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ItemIdList) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ItemIds) > 0 {
		for _, num := range m.ItemIds {
			dAtA[i] = 0x8
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(num))
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RemoveCartResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RemoveCartResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SelectCartItemResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SelectCartItemResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if len(m.ItemIds) > 0 {
		for _, num := range m.ItemIds {
			dAtA[i] = 0x18
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(num))
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SelectCartInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SelectCartInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ItemId) > 0 {
		for _, num := range m.ItemId {
			dAtA[i] = 0x8
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(num))
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SearchInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Content == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("content")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Content)))
		i += copy(dAtA[i:], *m.Content)
	}
	if m.Page == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page")
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Page))
	}
	if m.PageSize == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page_size")
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PageSize))
	}
	if m.SearchFlag != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.SearchFlag))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SearchResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, msg := range m.Items {
			dAtA[i] = 0xa
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Page == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page")
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Page))
	}
	if m.PageSize == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page_size")
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PageSize))
	}
	if m.Count == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("count")
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Count))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *OrderItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OrderItem) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.OrderId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OrderId))
	}
	if m.Item == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.Item.Size()))
		n22, err := m.Item.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n22
	}
	if m.State == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("state")
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.State))
	}
	if m.Address != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.Address.Size()))
		n23, err := m.Address.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n23
	}
	if m.ExpressCode != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ExpressCode)))
		i += copy(dAtA[i:], *m.ExpressCode)
	}
	if m.ExpressCom != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ExpressCom)))
		i += copy(dAtA[i:], *m.ExpressCom)
	}
	if m.CreateTime != nil {
		dAtA[i] = 0x38
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.CreateTime))
	}
	if m.ServerNowTime != nil {
		dAtA[i] = 0x40
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ServerNowTime))
	}
	if m.DelayReceive != nil {
		dAtA[i] = 0x48
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.DelayReceive))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *OrderItemList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OrderItemList) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, msg := range m.Items {
			dAtA[i] = 0xa
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Page == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page")
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Page))
	}
	if m.PageSize == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page_size")
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PageSize))
	}
	if m.Count == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("count")
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Count))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ExpressInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExpressInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.OrderId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OrderId))
	}
	if m.Code == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("code")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Code)))
		i += copy(dAtA[i:], *m.Code)
	}
	if m.Com == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("com")
	} else {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Com)))
		i += copy(dAtA[i:], *m.Com)
	}
	if m.SendPhone == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("send_phone")
	} else {
		dAtA[i] = 0x22
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.SendPhone)))
		i += copy(dAtA[i:], *m.SendPhone)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopItemMessageListInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopItemMessageListInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Type == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("type")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Type))
	}
	if m.IncrementTime == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("increment_time")
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.IncrementTime))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopItemMessageList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopItemMessageList) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, msg := range m.List {
			dAtA[i] = 0xa
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.IncrementFlag == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("increment_flag")
	} else {
		dAtA[i] = 0x10
		i++
		if *m.IncrementFlag {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopItemMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopItemMessage) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.MessageId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("message_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.MessageId))
	}
	if m.Type != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Type))
	}
	if m.File != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.File.Size()))
		n24, err := m.File.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n24
	}
	if m.Nickname != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Nickname)))
		i += copy(dAtA[i:], *m.Nickname)
	}
	if m.Avatar != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Avatar)))
		i += copy(dAtA[i:], *m.Avatar)
	}
	if m.ItemName != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ItemName)))
		i += copy(dAtA[i:], *m.ItemName)
	}
	if m.ItemTitle != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ItemTitle)))
		i += copy(dAtA[i:], *m.ItemTitle)
	}
	if m.Content != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Content)))
		i += copy(dAtA[i:], *m.Content)
	}
	if m.CreateTime != nil {
		dAtA[i] = 0x48
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.CreateTime))
	}
	if m.OrderId != nil {
		dAtA[i] = 0x50
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OrderId))
	}
	if m.ShowTime != nil {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ShowTime)))
		i += copy(dAtA[i:], *m.ShowTime)
	}
	if m.ViewFlag != nil {
		dAtA[i] = 0x60
		i++
		if *m.ViewFlag {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.CopyName != nil {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.CopyName)))
		i += copy(dAtA[i:], *m.CopyName)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopItemMessageInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopItemMessageInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Type == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("type")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Type))
	}
	if m.ShopMessage == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("shopMessage")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.ShopMessage.Size()))
		n25, err := m.ShopMessage.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n25
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopItemMessageInfoWithWho) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopItemMessageInfoWithWho) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Type == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("type")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Type))
	}
	if m.PlayerId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("player_id")
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PlayerId))
	}
	if m.ShopMessage == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("shopMessage")
	} else {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(m.ShopMessage.Size()))
		n26, err := m.ShopMessage.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n26
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopOrderNotifyInfoWithWho) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopOrderNotifyInfoWithWho) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.PlayerId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("player_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PlayerId))
	}
	if m.OrderId != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OrderId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopOrderNotifyInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopOrderNotifyInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.OrderId != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OrderId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopOrderIdList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopOrderIdList) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.OrderIds) > 0 {
		for _, num := range m.OrderIds {
			dAtA[i] = 0x8
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(num))
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopOrderNotifyFlgUpdInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopOrderNotifyFlgUpdInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.OrderIds) > 0 {
		for _, num := range m.OrderIds {
			dAtA[i] = 0x8
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(num))
		}
	}
	if m.BuySell_Type != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.BuySell_Type))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *MessageIdList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MessageIdList) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.MessageIds) > 0 {
		for _, num := range m.MessageIds {
			dAtA[i] = 0x8
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(num))
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *PaySellerInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PaySellerInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.OrderId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OrderId))
	}
	if m.Money == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("money")
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Money))
	}
	if m.Sponsor_Id == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("sponsor_Id")
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Sponsor_Id))
	}
	if m.ReceiverId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("receiver_id")
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.ReceiverId))
	}
	if m.PayType == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("pay_type")
	} else {
		dAtA[i] = 0x28
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.PayType))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UploadAuthResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UploadAuthResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.UploadAuthFlag == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("upload_auth_flag")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.UploadAuthFlag))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *QueryExpressInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryExpressInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.OrderId == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.OrderId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *QueryExpressBody) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryExpressBody) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.DateTime != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.DateTime)))
		i += copy(dAtA[i:], *m.DateTime)
	}
	if m.Remark != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Remark)))
		i += copy(dAtA[i:], *m.Remark)
	}
	if m.Status != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Status))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *QueryExpressInfosResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryExpressInfosResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if len(m.ExpressInfos) > 0 {
		for _, msg := range m.ExpressInfos {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.ExpressPhone != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ExpressPhone)))
		i += copy(dAtA[i:], *m.ExpressPhone)
	}
	if m.ExpressName != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.ExpressName)))
		i += copy(dAtA[i:], *m.ExpressName)
	}
	if m.UserId != nil {
		dAtA[i] = 0x30
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.UserId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ExpressCom) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExpressCom) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Code != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Code)))
		i += copy(dAtA[i:], *m.Code)
	}
	if m.Name != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Name)))
		i += copy(dAtA[i:], *m.Name)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ExpressComInfosResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExpressComInfosResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.Result))
	}
	if m.Msg == nil {
		return 0, github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Msg)))
		i += copy(dAtA[i:], *m.Msg)
	}
	if len(m.CommonUseComInfos) > 0 {
		for _, msg := range m.CommonUseComInfos {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.ComInfos) > 0 {
		for _, msg := range m.ComInfos {
			dAtA[i] = 0x22
			i++
			i = encodeVarintShopCommon(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopPointCardInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopPointCardInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.CardId != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(*m.CardId))
	}
	if m.CardNo != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.CardNo)))
		i += copy(dAtA[i:], *m.CardNo)
	}
	if m.CardPassword != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.CardPassword)))
		i += copy(dAtA[i:], *m.CardPassword)
	}
	if m.Key != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintShopCommon(dAtA, i, uint64(len(*m.Key)))
		i += copy(dAtA[i:], *m.Key)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintShopCommon(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *ShopInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != nil {
		n += 1 + sovShopCommon(uint64(*m.Page))
	}
	if m.PageSize != nil {
		n += 1 + sovShopCommon(uint64(*m.PageSize))
	}
	if m.Type != nil {
		n += 1 + sovShopCommon(uint64(*m.Type))
	}
	if len(m.CacheItemTypes) > 0 {
		for _, e := range m.CacheItemTypes {
			n += 1 + sovShopCommon(uint64(e))
		}
	}
	if len(m.CacheSearch) > 0 {
		for _, s := range m.CacheSearch {
			l = len(s)
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ItemFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FileUrl != nil {
		l = len(*m.FileUrl)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.FileType != nil {
		n += 1 + sovShopCommon(uint64(*m.FileType))
	}
	if m.FileWidth != nil {
		l = len(*m.FileWidth)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.FileHeight != nil {
		l = len(*m.FileHeight)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if m.Price != nil {
		n += 1 + sovShopCommon(uint64(*m.Price))
	}
	if m.ItemFile != nil {
		l = m.ItemFile.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Title != nil {
		l = len(*m.Title)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.StoreCount != nil {
		n += 1 + sovShopCommon(uint64(*m.StoreCount))
	}
	if m.PlayerId != nil {
		n += 1 + sovShopCommon(uint64(*m.PlayerId))
	}
	if m.Nickname != nil {
		l = len(*m.Nickname)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Avatar != nil {
		l = len(*m.Avatar)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ShortAddress != nil {
		l = len(*m.ShortAddress)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Account != nil {
		l = len(*m.Account)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Sex != nil {
		n += 1 + sovShopCommon(uint64(*m.Sex))
	}
	if m.Name != nil {
		l = len(*m.Name)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.State != nil {
		n += 1 + sovShopCommon(uint64(*m.State))
	}
	if m.ItemType != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemType))
	}
	if m.MayEnjoy != nil {
		n += 2
	}
	if m.ItemFlag != nil {
		n += 3
	}
	if m.CopyName != nil {
		l = len(*m.CopyName)
		n += 2 + l + sovShopCommon(uint64(l))
	}
	if m.Types != nil {
		n += 2 + sovShopCommon(uint64(*m.Types))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ItemList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.Page != nil {
		n += 1 + sovShopCommon(uint64(*m.Page))
	}
	if m.PageSize != nil {
		n += 1 + sovShopCommon(uint64(*m.PageSize))
	}
	if m.Count != nil {
		n += 1 + sovShopCommon(uint64(*m.Count))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MyReleaseInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != nil {
		n += 1 + sovShopCommon(uint64(*m.Page))
	}
	if m.PageSize != nil {
		n += 1 + sovShopCommon(uint64(*m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ItemListForMyRelease) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.Page != nil {
		n += 1 + sovShopCommon(uint64(*m.Page))
	}
	if m.PageSize != nil {
		n += 1 + sovShopCommon(uint64(*m.PageSize))
	}
	if m.Count != nil {
		n += 1 + sovShopCommon(uint64(*m.Count))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BuyItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if m.ItemFile != nil {
		l = m.ItemFile.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Name != nil {
		l = len(*m.Name)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.OriginPrice != nil {
		n += 1 + sovShopCommon(uint64(*m.OriginPrice))
	}
	if m.Price != nil {
		n += 1 + sovShopCommon(uint64(*m.Price))
	}
	if m.SponsorId != nil {
		n += 1 + sovShopCommon(uint64(*m.SponsorId))
	}
	if m.Avatar != nil {
		l = len(*m.Avatar)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Nickname != nil {
		l = len(*m.Nickname)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Count != nil {
		n += 1 + sovShopCommon(uint64(*m.Count))
	}
	if m.Sex != nil {
		n += 1 + sovShopCommon(uint64(*m.Sex))
	}
	if m.Title != nil {
		l = len(*m.Title)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.DeliverAddress != nil {
		l = m.DeliverAddress.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BuyItemID) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if m.Count != nil {
		n += 1 + sovShopCommon(uint64(*m.Count))
	}
	if m.Remark != nil {
		l = len(*m.Remark)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ItemTitle != nil {
		l = len(*m.ItemTitle)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ItemName != nil {
		l = len(*m.ItemName)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BuyItemInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.Address != nil {
		l = m.Address.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BuyItemResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.OrderId != nil {
		n += 1 + sovShopCommon(uint64(*m.OrderId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SettlementItemID) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if m.Count != nil {
		n += 1 + sovShopCommon(uint64(*m.Count))
	}
	if m.ItemTitle != nil {
		l = len(*m.ItemTitle)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ItemName != nil {
		l = len(*m.ItemName)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SettlementInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SettlementResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if len(m.NoSaleMessages) > 0 {
		for _, s := range m.NoSaleMessages {
			l = len(s)
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if len(m.NoStockMessages) > 0 {
		for _, s := range m.NoStockMessages {
			l = len(s)
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if len(m.BlackMessages) > 0 {
		for _, s := range m.BlackMessages {
			l = len(s)
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OrderInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 1 + sovShopCommon(uint64(*m.Type))
	}
	if m.ItemType != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemType))
	}
	if m.Page != nil {
		n += 1 + sovShopCommon(uint64(*m.Page))
	}
	if m.PageSize != nil {
		n += 1 + sovShopCommon(uint64(*m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OrderDetailInfoPara) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 1 + sovShopCommon(uint64(*m.Type))
	}
	if m.OrderId != nil {
		n += 1 + sovShopCommon(uint64(*m.OrderId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OrderID) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OrderId != nil {
		n += 1 + sovShopCommon(uint64(*m.OrderId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EditOrderAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OrderId != nil {
		n += 1 + sovShopCommon(uint64(*m.OrderId))
	}
	if m.Address != nil {
		l = m.Address.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EditOrderAddressResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EditDeliverAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OrderId != nil {
		n += 1 + sovShopCommon(uint64(*m.OrderId))
	}
	if m.Address != nil {
		l = m.Address.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EditDeliverAddressResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopAddressResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.DeliverAddress != nil {
		l = m.DeliverAddress.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopAddressInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConfirmReceiveResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DelayReceiveResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NotifySendItemResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReceiveAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Phone != nil {
		l = len(*m.Phone)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Region != nil {
		l = len(*m.Region)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.DetailAddress != nil {
		l = len(*m.DetailAddress)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.DefaultFlag != nil {
		n += 1 + sovShopCommon(uint64(*m.DefaultFlag))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReceiveAddressInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AddressId != nil {
		n += 1 + sovShopCommon(uint64(*m.AddressId))
	}
	if m.Address != nil {
		l = m.Address.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReceiveAddressList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReceiveAddressID) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AddressId != nil {
		n += 1 + sovShopCommon(uint64(*m.AddressId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PlayerID) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerId != nil {
		n += 1 + sovShopCommon(uint64(*m.PlayerId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReceiveAddressAddResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.AddressId != nil {
		n += 1 + sovShopCommon(uint64(*m.AddressId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReceiveAddressRemoveResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReceiveAddressEditResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeliverAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Phone != nil {
		l = len(*m.Phone)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Region != nil {
		l = len(*m.Region)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.DetailAddress != nil {
		l = len(*m.DetailAddress)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.DefaultFlag != nil {
		n += 1 + sovShopCommon(uint64(*m.DefaultFlag))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeliverAddressInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AddressId != nil {
		n += 1 + sovShopCommon(uint64(*m.AddressId))
	}
	if m.Address != nil {
		l = m.Address.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeliverAddressList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeliverAddressID) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AddressId != nil {
		n += 1 + sovShopCommon(uint64(*m.AddressId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeliverAddressAddResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.AddressId != nil {
		n += 1 + sovShopCommon(uint64(*m.AddressId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeliverAddressRemoveResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeliverAddressEditResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OrderDetailInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OrderId != nil {
		n += 1 + sovShopCommon(uint64(*m.OrderId))
	}
	if m.Item != nil {
		l = m.Item.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.State != nil {
		n += 1 + sovShopCommon(uint64(*m.State))
	}
	if m.Address != nil {
		l = m.Address.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ExpressCode != nil {
		l = len(*m.ExpressCode)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ExpressCom != nil {
		l = len(*m.ExpressCom)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ExpressName != nil {
		l = len(*m.ExpressName)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.CreateTime != nil {
		n += 1 + sovShopCommon(uint64(*m.CreateTime))
	}
	if m.ServerNowTime != nil {
		n += 1 + sovShopCommon(uint64(*m.ServerNowTime))
	}
	if m.PayTime != nil {
		n += 1 + sovShopCommon(uint64(*m.PayTime))
	}
	if m.SendTime != nil {
		n += 1 + sovShopCommon(uint64(*m.SendTime))
	}
	if m.FinishTime != nil {
		n += 1 + sovShopCommon(uint64(*m.FinishTime))
	}
	if len(m.ExpressInfos) > 0 {
		for _, e := range m.ExpressInfos {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.ExpressPhone != nil {
		l = len(*m.ExpressPhone)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OrderDetailInfoShow) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.OrderDetailInfo != nil {
		l = m.OrderDetailInfo.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ExpressMsg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = len(*m.Info)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Time != nil {
		n += 1 + sovShopCommon(uint64(*m.Time))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CancelOrderResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteOrderResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CheckoutResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.OrderId != nil {
		n += 1 + sovShopCommon(uint64(*m.OrderId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopItemID) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopItemInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if m.Flag != nil {
		n += 1 + sovShopCommon(uint64(*m.Flag))
	}
	if m.PageViewFlag != nil {
		n += 1 + sovShopCommon(uint64(*m.PageViewFlag))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopItemType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 1 + sovShopCommon(uint64(*m.Type))
	}
	if len(m.OtherType) > 0 {
		for _, s := range m.OtherType {
			l = len(s)
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopItemTypeName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TypeName != nil {
		l = len(*m.TypeName)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if len(m.OtherType) > 0 {
		for _, s := range m.OtherType {
			l = len(s)
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopItemUploadInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Title != nil {
		l = len(*m.Title)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if len(m.ItemFiles) > 0 {
		for _, e := range m.ItemFiles {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.Price != nil {
		n += 1 + sovShopCommon(uint64(*m.Price))
	}
	if m.OriginPrice != nil {
		n += 1 + sovShopCommon(uint64(*m.OriginPrice))
	}
	if m.UserName != nil {
		l = len(*m.UserName)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Phone != nil {
		l = len(*m.Phone)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Address != nil {
		l = len(*m.Address)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.DetailAddress != nil {
		l = len(*m.DetailAddress)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Type != nil {
		l = m.Type.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.StockCount != nil {
		n += 1 + sovShopCommon(uint64(*m.StockCount))
	}
	if m.Name != nil {
		l = len(*m.Name)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopItemUploadResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopItemDeleteResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopItemSoldOutResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopItemEditInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopItemDetail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if m.Price != nil {
		n += 1 + sovShopCommon(uint64(*m.Price))
	}
	if m.OriginPrice != nil {
		n += 1 + sovShopCommon(uint64(*m.OriginPrice))
	}
	if len(m.ItemFiles) > 0 {
		for _, e := range m.ItemFiles {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.Title != nil {
		l = len(*m.Title)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.PlayerId != nil {
		n += 1 + sovShopCommon(uint64(*m.PlayerId))
	}
	if m.Nickname != nil {
		l = len(*m.Nickname)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Avatar != nil {
		l = len(*m.Avatar)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ShortAddress != nil {
		l = len(*m.ShortAddress)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.StoreCount != nil {
		n += 1 + sovShopCommon(uint64(*m.StoreCount))
	}
	if m.CreateTime != nil {
		n += 1 + sovShopCommon(uint64(*m.CreateTime))
	}
	if m.Type != nil {
		l = m.Type.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.StockCount != nil {
		n += 1 + sovShopCommon(uint64(*m.StockCount))
	}
	if m.TimeLong != nil {
		l = len(*m.TimeLong)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Address != nil {
		l = len(*m.Address)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.DetailAddress != nil {
		l = len(*m.DetailAddress)
		n += 2 + l + sovShopCommon(uint64(l))
	}
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovShopCommon(uint64(l))
	}
	if m.Sex != nil {
		n += 2 + sovShopCommon(uint64(*m.Sex))
	}
	if m.State != nil {
		n += 2 + sovShopCommon(uint64(*m.State))
	}
	if m.UserName != nil {
		l = len(*m.UserName)
		n += 2 + l + sovShopCommon(uint64(l))
	}
	if m.Phone != nil {
		l = len(*m.Phone)
		n += 2 + l + sovShopCommon(uint64(l))
	}
	if m.StoreFlag != nil {
		n += 3
	}
	if m.PointCardName != nil {
		l = len(*m.PointCardName)
		n += 2 + l + sovShopCommon(uint64(l))
	}
	if m.CopyName != nil {
		l = len(*m.CopyName)
		n += 2 + l + sovShopCommon(uint64(l))
	}
	if len(m.RelatedShopItems) > 0 {
		for _, e := range m.RelatedShopItems {
			l = e.Size()
			n += 2 + l + sovShopCommon(uint64(l))
		}
	}
	if m.Types != nil {
		n += 2 + sovShopCommon(uint64(*m.Types))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RelatedShopItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if len(m.ItemFiles) > 0 {
		for _, e := range m.ItemFiles {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SellerInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Nickname != nil {
		l = len(*m.Nickname)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Avatar != nil {
		l = len(*m.Avatar)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.RegisterDay != nil {
		n += 1 + sovShopCommon(uint64(*m.RegisterDay))
	}
	if m.SellItemCount != nil {
		n += 1 + sovShopCommon(uint64(*m.SellItemCount))
	}
	if m.NameAuth != nil {
		n += 1 + sovShopCommon(uint64(*m.NameAuth))
	}
	if m.PlayerId != nil {
		n += 1 + sovShopCommon(uint64(*m.PlayerId))
	}
	if m.Account != nil {
		l = len(*m.Account)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Phone != nil {
		l = len(*m.Phone)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Photo != nil {
		l = len(*m.Photo)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Signature != nil {
		l = len(*m.Signature)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Sex != nil {
		n += 1 + sovShopCommon(uint64(*m.Sex))
	}
	if m.PaymentCount != nil {
		n += 1 + sovShopCommon(uint64(*m.PaymentCount))
	}
	if m.PageViews != nil {
		n += 1 + sovShopCommon(uint64(*m.PageViews))
	}
	if m.Types != nil {
		n += 1 + sovShopCommon(uint64(*m.Types))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopItemShowDetail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ShopItemDetail != nil {
		l = m.ShopItemDetail.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.SellerInfo != nil {
		l = m.SellerInfo.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.CommentInfo != nil {
		l = m.CommentInfo.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CommInfoForDetail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CommentInfo != nil {
		l = m.CommentInfo.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.CommentCount != nil {
		n += 1 + sovShopCommon(uint64(*m.CommentCount))
	}
	if m.GoodCommentRate != nil {
		n += 1 + sovShopCommon(uint64(*m.GoodCommentRate))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CommentInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CommentId != nil {
		n += 1 + sovShopCommon(uint64(*m.CommentId))
	}
	if m.PlayerId != nil {
		n += 1 + sovShopCommon(uint64(*m.PlayerId))
	}
	if m.Avatar != nil {
		l = len(*m.Avatar)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Nickname != nil {
		l = len(*m.Nickname)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Content != nil {
		l = len(*m.Content)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if m.TimeLong != nil {
		l = len(*m.TimeLong)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Sex != nil {
		n += 1 + sovShopCommon(uint64(*m.Sex))
	}
	if m.StarLevel != nil {
		n += 1 + sovShopCommon(uint64(*m.StarLevel))
	}
	if m.LikeCount != nil {
		n += 1 + sovShopCommon(uint64(*m.LikeCount))
	}
	if m.ReContent != nil {
		l = len(*m.ReContent)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Status != nil {
		n += 1 + sovShopCommon(uint64(*m.Status))
	}
	if m.ReTime != nil {
		l = len(*m.ReTime)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.IsLike != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UploadComment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if m.Content != nil {
		l = len(*m.Content)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Sponsor_Id != nil {
		n += 1 + sovShopCommon(uint64(*m.Sponsor_Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UploadEvalute) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if m.Content != nil {
		l = len(*m.Content)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.OrderId != nil {
		n += 1 + sovShopCommon(uint64(*m.OrderId))
	}
	if m.StarLevel != nil {
		n += 1 + sovShopCommon(uint64(*m.StarLevel))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UploadCommentResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Comment != nil {
		l = m.Comment.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LikeCommentResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LikeCommentInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CommentId != nil {
		n += 1 + sovShopCommon(uint64(*m.CommentId))
	}
	if m.LikeType != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopCommentList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if m.Sponsor_Id != nil {
		n += 1 + sovShopCommon(uint64(*m.Sponsor_Id))
	}
	if m.QueryCon != nil {
		n += 1 + sovShopCommon(uint64(*m.QueryCon))
	}
	if m.Page != nil {
		n += 1 + sovShopCommon(uint64(*m.Page))
	}
	if m.PageSize != nil {
		n += 1 + sovShopCommon(uint64(*m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopCommentListResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if len(m.Comments) > 0 {
		for _, e := range m.Comments {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.AllCommCount != nil {
		n += 1 + sovShopCommon(uint64(*m.AllCommCount))
	}
	if m.Page != nil {
		n += 1 + sovShopCommon(uint64(*m.Page))
	}
	if m.PageSize != nil {
		n += 1 + sovShopCommon(uint64(*m.PageSize))
	}
	if m.Count != nil {
		n += 1 + sovShopCommon(uint64(*m.Count))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ExpressCodeResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StoreItemList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if len(m.StoreItems) > 0 {
		for _, e := range m.StoreItems {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AddStoreResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RemoveStoreResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BatchAddStoreResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CartItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if m.Title != nil {
		l = len(*m.Title)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ItemFile != nil {
		l = m.ItemFile.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Price != nil {
		n += 1 + sovShopCommon(uint64(*m.Price))
	}
	if m.AddCount != nil {
		n += 1 + sovShopCommon(uint64(*m.AddCount))
	}
	if m.OriginPrice != nil {
		n += 1 + sovShopCommon(uint64(*m.OriginPrice))
	}
	if m.Name != nil {
		l = len(*m.Name)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Flag != nil {
		n += 1 + sovShopCommon(uint64(*m.Flag))
	}
	if m.ErrContent != nil {
		l = len(*m.ErrContent)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CartItemInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.CartItems) > 0 {
		for _, e := range m.CartItems {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.SellerPlayerId != nil {
		n += 1 + sovShopCommon(uint64(*m.SellerPlayerId))
	}
	if m.SellerNickName != nil {
		l = len(*m.SellerNickName)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CartItemInfoList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.CartItemInfos) > 0 {
		for _, e := range m.CartItemInfos {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AddCartResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if m.AddCount != nil {
		n += 1 + sovShopCommon(uint64(*m.AddCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SubCartResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ItemId != nil {
		n += 1 + sovShopCommon(uint64(*m.ItemId))
	}
	if m.AddCount != nil {
		n += 1 + sovShopCommon(uint64(*m.AddCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ItemIdList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ItemIds) > 0 {
		for _, e := range m.ItemIds {
			n += 1 + sovShopCommon(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RemoveCartResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SelectCartItemResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if len(m.ItemIds) > 0 {
		for _, e := range m.ItemIds {
			n += 1 + sovShopCommon(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SelectCartInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ItemId) > 0 {
		for _, e := range m.ItemId {
			n += 1 + sovShopCommon(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SearchInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Content != nil {
		l = len(*m.Content)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Page != nil {
		n += 1 + sovShopCommon(uint64(*m.Page))
	}
	if m.PageSize != nil {
		n += 1 + sovShopCommon(uint64(*m.PageSize))
	}
	if m.SearchFlag != nil {
		n += 1 + sovShopCommon(uint64(*m.SearchFlag))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SearchResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.Page != nil {
		n += 1 + sovShopCommon(uint64(*m.Page))
	}
	if m.PageSize != nil {
		n += 1 + sovShopCommon(uint64(*m.PageSize))
	}
	if m.Count != nil {
		n += 1 + sovShopCommon(uint64(*m.Count))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OrderItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OrderId != nil {
		n += 1 + sovShopCommon(uint64(*m.OrderId))
	}
	if m.Item != nil {
		l = m.Item.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.State != nil {
		n += 1 + sovShopCommon(uint64(*m.State))
	}
	if m.Address != nil {
		l = m.Address.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ExpressCode != nil {
		l = len(*m.ExpressCode)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ExpressCom != nil {
		l = len(*m.ExpressCom)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.CreateTime != nil {
		n += 1 + sovShopCommon(uint64(*m.CreateTime))
	}
	if m.ServerNowTime != nil {
		n += 1 + sovShopCommon(uint64(*m.ServerNowTime))
	}
	if m.DelayReceive != nil {
		n += 1 + sovShopCommon(uint64(*m.DelayReceive))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OrderItemList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.Page != nil {
		n += 1 + sovShopCommon(uint64(*m.Page))
	}
	if m.PageSize != nil {
		n += 1 + sovShopCommon(uint64(*m.PageSize))
	}
	if m.Count != nil {
		n += 1 + sovShopCommon(uint64(*m.Count))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ExpressInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OrderId != nil {
		n += 1 + sovShopCommon(uint64(*m.OrderId))
	}
	if m.Code != nil {
		l = len(*m.Code)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Com != nil {
		l = len(*m.Com)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.SendPhone != nil {
		l = len(*m.SendPhone)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopItemMessageListInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 1 + sovShopCommon(uint64(*m.Type))
	}
	if m.IncrementTime != nil {
		n += 1 + sovShopCommon(uint64(*m.IncrementTime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopItemMessageList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.IncrementFlag != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopItemMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MessageId != nil {
		n += 1 + sovShopCommon(uint64(*m.MessageId))
	}
	if m.Type != nil {
		n += 1 + sovShopCommon(uint64(*m.Type))
	}
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Nickname != nil {
		l = len(*m.Nickname)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Avatar != nil {
		l = len(*m.Avatar)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ItemName != nil {
		l = len(*m.ItemName)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ItemTitle != nil {
		l = len(*m.ItemTitle)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Content != nil {
		l = len(*m.Content)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.CreateTime != nil {
		n += 1 + sovShopCommon(uint64(*m.CreateTime))
	}
	if m.OrderId != nil {
		n += 1 + sovShopCommon(uint64(*m.OrderId))
	}
	if m.ShowTime != nil {
		l = len(*m.ShowTime)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ViewFlag != nil {
		n += 2
	}
	if m.CopyName != nil {
		l = len(*m.CopyName)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopItemMessageInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 1 + sovShopCommon(uint64(*m.Type))
	}
	if m.ShopMessage != nil {
		l = m.ShopMessage.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopItemMessageInfoWithWho) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 1 + sovShopCommon(uint64(*m.Type))
	}
	if m.PlayerId != nil {
		n += 1 + sovShopCommon(uint64(*m.PlayerId))
	}
	if m.ShopMessage != nil {
		l = m.ShopMessage.Size()
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopOrderNotifyInfoWithWho) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerId != nil {
		n += 1 + sovShopCommon(uint64(*m.PlayerId))
	}
	if m.OrderId != nil {
		n += 1 + sovShopCommon(uint64(*m.OrderId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopOrderNotifyInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OrderId != nil {
		n += 1 + sovShopCommon(uint64(*m.OrderId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopOrderIdList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.OrderIds) > 0 {
		for _, e := range m.OrderIds {
			n += 1 + sovShopCommon(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopOrderNotifyFlgUpdInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.OrderIds) > 0 {
		for _, e := range m.OrderIds {
			n += 1 + sovShopCommon(uint64(e))
		}
	}
	if m.BuySell_Type != nil {
		n += 1 + sovShopCommon(uint64(*m.BuySell_Type))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MessageIdList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.MessageIds) > 0 {
		for _, e := range m.MessageIds {
			n += 1 + sovShopCommon(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PaySellerInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OrderId != nil {
		n += 1 + sovShopCommon(uint64(*m.OrderId))
	}
	if m.Money != nil {
		n += 1 + sovShopCommon(uint64(*m.Money))
	}
	if m.Sponsor_Id != nil {
		n += 1 + sovShopCommon(uint64(*m.Sponsor_Id))
	}
	if m.ReceiverId != nil {
		n += 1 + sovShopCommon(uint64(*m.ReceiverId))
	}
	if m.PayType != nil {
		n += 1 + sovShopCommon(uint64(*m.PayType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UploadAuthResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UploadAuthFlag != nil {
		n += 1 + sovShopCommon(uint64(*m.UploadAuthFlag))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *QueryExpressInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OrderId != nil {
		n += 1 + sovShopCommon(uint64(*m.OrderId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *QueryExpressBody) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DateTime != nil {
		l = len(*m.DateTime)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Remark != nil {
		l = len(*m.Remark)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Status != nil {
		n += 1 + sovShopCommon(uint64(*m.Status))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *QueryExpressInfosResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if len(m.ExpressInfos) > 0 {
		for _, e := range m.ExpressInfos {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.ExpressPhone != nil {
		l = len(*m.ExpressPhone)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.ExpressName != nil {
		l = len(*m.ExpressName)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.UserId != nil {
		n += 1 + sovShopCommon(uint64(*m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ExpressCom) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != nil {
		l = len(*m.Code)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Name != nil {
		l = len(*m.Name)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ExpressComInfosResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovShopCommon(uint64(*m.Result))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if len(m.CommonUseComInfos) > 0 {
		for _, e := range m.CommonUseComInfos {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if len(m.ComInfos) > 0 {
		for _, e := range m.ComInfos {
			l = e.Size()
			n += 1 + l + sovShopCommon(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopPointCardInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CardId != nil {
		n += 1 + sovShopCommon(uint64(*m.CardId))
	}
	if m.CardNo != nil {
		l = len(*m.CardNo)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.CardPassword != nil {
		l = len(*m.CardPassword)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.Key != nil {
		l = len(*m.Key)
		n += 1 + l + sovShopCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovShopCommon(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozShopCommon(x uint64) (n int) {
	return sovShopCommon(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ShopInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Page = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PageSize = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowShopCommon
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.CacheItemTypes = append(m.CacheItemTypes, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowShopCommon
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthShopCommon
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthShopCommon
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.CacheItemTypes) == 0 {
					m.CacheItemTypes = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowShopCommon
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.CacheItemTypes = append(m.CacheItemTypes, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CacheItemTypes", wireType)
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CacheSearch", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CacheSearch = append(m.CacheSearch, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page_size")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("type")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ItemFile) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ItemFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ItemFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.FileUrl = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileType", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FileType = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileWidth", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.FileWidth = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileHeight", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.FileHeight = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("file_url")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("file_type")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopItem) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Price = &v
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemFile", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ItemFile == nil {
				m.ItemFile = &ItemFile{}
			}
			if err := m.ItemFile.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Title = &s
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StoreCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StoreCount = &v
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PlayerId = &v
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Nickname = &s
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Avatar = &s
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShortAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ShortAddress = &s
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Account = &s
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sex", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Sex = &v
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.State = &v
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemType", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemType = &v
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MayEnjoy", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.MayEnjoy = &b
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemFlag", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.ItemFlag = &b
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CopyName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.CopyName = &s
			iNdEx = postIndex
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Types", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Types = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ItemList) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ItemList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ItemList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &ShopItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Page = &v
			hasFields[0] |= uint64(0x00000001)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PageSize = &v
			hasFields[0] |= uint64(0x00000002)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Count = &v
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page_size")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("count")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MyReleaseInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MyReleaseInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MyReleaseInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Page = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PageSize = &v
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page_size")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ItemListForMyRelease) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ItemListForMyRelease: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ItemListForMyRelease: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &ShopItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Page = &v
			hasFields[0] |= uint64(0x00000001)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PageSize = &v
			hasFields[0] |= uint64(0x00000002)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Count = &v
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page_size")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("count")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuyItem) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuyItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuyItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemFile", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ItemFile == nil {
				m.ItemFile = &ItemFile{}
			}
			if err := m.ItemFile.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginPrice", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OriginPrice = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Price = &v
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SponsorId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SponsorId = &v
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Avatar = &s
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Nickname = &s
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Count = &v
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sex", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Sex = &v
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Title = &s
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeliverAddress", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeliverAddress == nil {
				m.DeliverAddress = &DeliverAddress{}
			}
			if err := m.DeliverAddress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_file")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuyItemID) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuyItemID: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuyItemID: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Count = &v
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Remark", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Remark = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ItemTitle = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ItemName = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuyItemInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuyItemInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuyItemInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &BuyItemID{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Address == nil {
				m.Address = &ReceiveAddress{}
			}
			if err := m.Address.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuyItemResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuyItemResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuyItemResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OrderId = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SettlementItemID) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SettlementItemID: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SettlementItemID: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Count = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ItemTitle = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ItemName = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("count")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_title")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_name")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SettlementInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SettlementInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SettlementInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &SettlementItemID{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SettlementResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SettlementResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SettlementResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoSaleMessages", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NoSaleMessages = append(m.NoSaleMessages, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoStockMessages", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NoStockMessages = append(m.NoStockMessages, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlackMessages", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BlackMessages = append(m.BlackMessages, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OrderInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OrderInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OrderInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v BuySell_Type
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= BuySell_Type(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemType", wireType)
			}
			var v SearchOrder_Con
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= SearchOrder_Con(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemType = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Page = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PageSize = &v
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("type")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_type")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page_size")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OrderDetailInfoPara) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OrderDetailInfoPara: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OrderDetailInfoPara: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v BuySell_Type
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= BuySell_Type(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OrderId = &v
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("type")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OrderID) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OrderID: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OrderID: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OrderId = &v
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EditOrderAddress) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EditOrderAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EditOrderAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OrderId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Address == nil {
				m.Address = &ReceiveAddress{}
			}
			if err := m.Address.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EditOrderAddressResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EditOrderAddressResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EditOrderAddressResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EditDeliverAddress) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EditDeliverAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EditDeliverAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OrderId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Address == nil {
				m.Address = &DeliverAddress{}
			}
			if err := m.Address.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EditDeliverAddressResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EditDeliverAddressResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EditDeliverAddressResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopAddressResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopAddressResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopAddressResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeliverAddress", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeliverAddress == nil {
				m.DeliverAddress = &DeliverAddress{}
			}
			if err := m.DeliverAddress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopAddressInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopAddressInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopAddressInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConfirmReceiveResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConfirmReceiveResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConfirmReceiveResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DelayReceiveResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DelayReceiveResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DelayReceiveResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NotifySendItemResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NotifySendItemResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NotifySendItemResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReceiveAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReceiveAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReceiveAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Phone = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Region", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Region = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DetailAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DetailAddress = &s
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultFlag", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DefaultFlag = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReceiveAddressInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReceiveAddressInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReceiveAddressInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AddressId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Address == nil {
				m.Address = &ReceiveAddress{}
			}
			if err := m.Address.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReceiveAddressList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReceiveAddressList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReceiveAddressList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &ReceiveAddressInfo{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReceiveAddressID) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReceiveAddressID: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReceiveAddressID: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AddressId = &v
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address_id")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PlayerID) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlayerID: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlayerID: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PlayerId = &v
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("player_id")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReceiveAddressAddResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReceiveAddressAddResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReceiveAddressAddResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AddressId = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReceiveAddressRemoveResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReceiveAddressRemoveResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReceiveAddressRemoveResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReceiveAddressEditResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReceiveAddressEditResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReceiveAddressEditResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeliverAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeliverAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeliverAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Phone = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Region", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Region = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DetailAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DetailAddress = &s
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultFlag", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DefaultFlag = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeliverAddressInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeliverAddressInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeliverAddressInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AddressId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Address == nil {
				m.Address = &DeliverAddress{}
			}
			if err := m.Address.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeliverAddressList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeliverAddressList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeliverAddressList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &DeliverAddressInfo{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeliverAddressID) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeliverAddressID: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeliverAddressID: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AddressId = &v
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address_id")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeliverAddressAddResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeliverAddressAddResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeliverAddressAddResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AddressId = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeliverAddressRemoveResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeliverAddressRemoveResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeliverAddressRemoveResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeliverAddressEditResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeliverAddressEditResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeliverAddressEditResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OrderDetailInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OrderDetailInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OrderDetailInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OrderId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Item", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Item == nil {
				m.Item = &BuyItem{}
			}
			if err := m.Item.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.State = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Address == nil {
				m.Address = &ReceiveAddress{}
			}
			if err := m.Address.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpressCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ExpressCode = &s
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpressCom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ExpressCom = &s
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpressName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ExpressName = &s
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateTime", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CreateTime = &v
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServerNowTime", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ServerNowTime = &v
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PayTime", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PayTime = &v
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendTime", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SendTime = &v
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinishTime", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FinishTime = &v
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpressInfos", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExpressInfos = append(m.ExpressInfos, &QueryExpressBody{})
			if err := m.ExpressInfos[len(m.ExpressInfos)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpressPhone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ExpressPhone = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("state")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OrderDetailInfoShow) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OrderDetailInfoShow: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OrderDetailInfoShow: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderDetailInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OrderDetailInfo == nil {
				m.OrderDetailInfo = &OrderDetailInfo{}
			}
			if err := m.OrderDetailInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExpressMsg) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExpressMsg: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExpressMsg: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Info = &s
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Time", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Time = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CancelOrderResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CancelOrderResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CancelOrderResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteOrderResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteOrderResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteOrderResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckoutResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckoutResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckoutResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OrderId = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopItemID) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopItemID: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopItemID: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopItemInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopItemInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopItemInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flag", wireType)
			}
			var v BuySell_Type
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= BuySell_Type(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Flag = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageViewFlag", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PageViewFlag = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("flag")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopItemType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopItemType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopItemType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OtherType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OtherType = append(m.OtherType, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopItemTypeName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopItemTypeName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopItemTypeName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.TypeName = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OtherType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OtherType = append(m.OtherType, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopItemUploadInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopItemUploadInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopItemUploadInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Title = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemFiles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemFiles = append(m.ItemFiles, &ItemFile{})
			if err := m.ItemFiles[len(m.ItemFiles)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Price = &v
			hasFields[0] |= uint64(0x00000002)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginPrice", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OriginPrice = &v
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.UserName = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Phone = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Address = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000010)
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DetailAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DetailAddress = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000020)
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Type == nil {
				m.Type = &ShopItemTypeName{}
			}
			if err := m.Type.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000040)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StockCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StockCount = &v
			hasFields[0] |= uint64(0x00000080)
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000100)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("title")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("price")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("user_name")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("phone")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("address")
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("detail_address")
	}
	if hasFields[0]&uint64(0x00000040) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("type")
	}
	if hasFields[0]&uint64(0x00000080) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("stock_count")
	}
	if hasFields[0]&uint64(0x00000100) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("name")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopItemUploadResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopItemUploadResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopItemUploadResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopItemDeleteResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopItemDeleteResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopItemDeleteResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopItemSoldOutResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopItemSoldOutResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopItemSoldOutResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopItemEditInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopItemEditInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopItemEditInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &ShopItemUploadInfo{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("info")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopItemDetail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopItemDetail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopItemDetail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Price = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginPrice", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OriginPrice = &v
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemFiles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemFiles = append(m.ItemFiles, &ItemFile{})
			if err := m.ItemFiles[len(m.ItemFiles)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Title = &s
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PlayerId = &v
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Nickname = &s
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Avatar = &s
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShortAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ShortAddress = &s
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StoreCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StoreCount = &v
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateTime", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CreateTime = &v
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Type == nil {
				m.Type = &ShopItemType{}
			}
			if err := m.Type.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StockCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StockCount = &v
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeLong", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.TimeLong = &s
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Address = &s
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DetailAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DetailAddress = &s
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sex", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Sex = &v
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.State = &v
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.UserName = &s
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Phone = &s
			iNdEx = postIndex
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StoreFlag", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.StoreFlag = &b
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PointCardName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.PointCardName = &s
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CopyName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.CopyName = &s
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RelatedShopItems", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RelatedShopItems = append(m.RelatedShopItems, &RelatedShopItem{})
			if err := m.RelatedShopItems[len(m.RelatedShopItems)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Types", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Types = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RelatedShopItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RelatedShopItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RelatedShopItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemFiles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemFiles = append(m.ItemFiles, &ItemFile{})
			if err := m.ItemFiles[len(m.ItemFiles)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SellerInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SellerInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SellerInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Nickname = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Avatar = &s
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegisterDay", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RegisterDay = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellItemCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SellItemCount = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NameAuth", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NameAuth = &v
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PlayerId = &v
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Account = &s
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Phone = &s
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Photo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Photo = &s
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Signature = &s
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sex", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Sex = &v
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PaymentCount = &v
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageViews", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PageViews = &v
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Types", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Types = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopItemShowDetail) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopItemShowDetail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopItemShowDetail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopItemDetail", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ShopItemDetail == nil {
				m.ShopItemDetail = &ShopItemDetail{}
			}
			if err := m.ShopItemDetail.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SellerInfo == nil {
				m.SellerInfo = &SellerInfo{}
			}
			if err := m.SellerInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CommentInfo == nil {
				m.CommentInfo = &CommInfoForDetail{}
			}
			if err := m.CommentInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CommInfoForDetail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CommInfoForDetail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CommInfoForDetail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CommentInfo == nil {
				m.CommentInfo = &CommentInfo{}
			}
			if err := m.CommentInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CommentCount = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GoodCommentRate", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.GoodCommentRate = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CommentInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CommentInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CommentInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CommentId = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PlayerId = &v
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Avatar = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Nickname = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Content = &s
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeLong", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.TimeLong = &s
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sex", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Sex = &v
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StarLevel", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StarLevel = &v
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LikeCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LikeCount = &v
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReContent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ReContent = &s
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = &v
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ReTime = &s
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsLike", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsLike = &b
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UploadComment) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UploadComment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UploadComment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Content = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sponsor_Id", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Sponsor_Id = &v
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("content")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("sponsor_Id")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UploadEvalute) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UploadEvalute: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UploadEvalute: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Content = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OrderId = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StarLevel", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StarLevel = &v
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("content")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("star_level")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UploadCommentResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UploadCommentResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UploadCommentResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Comment == nil {
				m.Comment = &CommInfoForDetail{}
			}
			if err := m.Comment.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LikeCommentResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LikeCommentResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LikeCommentResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LikeCommentInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LikeCommentInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LikeCommentInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CommentId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LikeType", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.LikeType = &b
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("comment_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("like_type")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopCommentList) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopCommentList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopCommentList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sponsor_Id", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Sponsor_Id = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryCon", wireType)
			}
			var v CommQuery_Con
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= CommQuery_Con(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.QueryCon = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Page = &v
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PageSize = &v
			hasFields[0] |= uint64(0x00000010)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("sponsor_Id")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("queryCon")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page_size")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopCommentListResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopCommentListResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopCommentListResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comments", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comments = append(m.Comments, &CommentInfo{})
			if err := m.Comments[len(m.Comments)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllCommCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllCommCount = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Page = &v
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PageSize = &v
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Count = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExpressCodeResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExpressCodeResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExpressCodeResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StoreItemList) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StoreItemList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StoreItemList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StoreItems", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StoreItems = append(m.StoreItems, &ShopItem{})
			if err := m.StoreItems[len(m.StoreItems)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AddStoreResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddStoreResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddStoreResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RemoveStoreResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RemoveStoreResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RemoveStoreResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BatchAddStoreResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BatchAddStoreResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BatchAddStoreResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CartItem) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CartItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CartItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Title = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemFile", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ItemFile == nil {
				m.ItemFile = &ItemFile{}
			}
			if err := m.ItemFile.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Price = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AddCount = &v
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginPrice", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OriginPrice = &v
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flag", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Flag = &v
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrContent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ErrContent = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("title")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item_file")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CartItemInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CartItemInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CartItemInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CartItems", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CartItems = append(m.CartItems, &CartItem{})
			if err := m.CartItems[len(m.CartItems)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerPlayerId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SellerPlayerId = &v
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SellerNickName = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CartItemInfoList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CartItemInfoList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CartItemInfoList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CartItemInfos", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CartItemInfos = append(m.CartItemInfos, &CartItemInfo{})
			if err := m.CartItemInfos[len(m.CartItemInfos)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AddCartResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddCartResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddCartResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AddCount = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SubCartResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SubCartResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SubCartResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ItemId = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AddCount = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ItemIdList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ItemIdList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ItemIdList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowShopCommon
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ItemIds = append(m.ItemIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowShopCommon
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthShopCommon
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthShopCommon
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ItemIds) == 0 {
					m.ItemIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowShopCommon
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ItemIds = append(m.ItemIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RemoveCartResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RemoveCartResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RemoveCartResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SelectCartItemResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SelectCartItemResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SelectCartItemResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowShopCommon
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ItemIds = append(m.ItemIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowShopCommon
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthShopCommon
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthShopCommon
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ItemIds) == 0 {
					m.ItemIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowShopCommon
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ItemIds = append(m.ItemIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SelectCartInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SelectCartInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SelectCartInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowShopCommon
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ItemId = append(m.ItemId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowShopCommon
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthShopCommon
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthShopCommon
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ItemId) == 0 {
					m.ItemId = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowShopCommon
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ItemId = append(m.ItemId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Content = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Page = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PageSize = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchFlag", wireType)
			}
			var v Search_Type
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= Search_Type(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SearchFlag = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("content")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page_size")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &ShopItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Page = &v
			hasFields[0] |= uint64(0x00000001)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PageSize = &v
			hasFields[0] |= uint64(0x00000002)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Count = &v
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page_size")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("count")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OrderItem) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OrderItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OrderItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OrderId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Item", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Item == nil {
				m.Item = &BuyItem{}
			}
			if err := m.Item.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.State = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Address == nil {
				m.Address = &ReceiveAddress{}
			}
			if err := m.Address.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpressCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ExpressCode = &s
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpressCom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ExpressCom = &s
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateTime", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CreateTime = &v
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServerNowTime", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ServerNowTime = &v
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelayReceive", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DelayReceive = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("item")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("state")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OrderItemList) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OrderItemList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OrderItemList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &OrderItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Page = &v
			hasFields[0] |= uint64(0x00000001)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PageSize = &v
			hasFields[0] |= uint64(0x00000002)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Count = &v
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("page_size")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("count")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExpressInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExpressInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExpressInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OrderId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Code = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Com", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Com = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendPhone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SendPhone = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("code")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("com")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("send_phone")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopItemMessageListInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopItemMessageListInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopItemMessageListInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v BuySell_Type
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= BuySell_Type(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IncrementTime", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IncrementTime = &v
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("type")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("increment_time")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopItemMessageList) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopItemMessageList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopItemMessageList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &ShopItemMessage{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IncrementFlag", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IncrementFlag = &b
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("increment_flag")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopItemMessage) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopItemMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopItemMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v BuySell_Type
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= BuySell_Type(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &ItemFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Nickname = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Avatar = &s
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ItemName = &s
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ItemTitle = &s
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Content = &s
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateTime", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CreateTime = &v
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OrderId = &v
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ShowTime = &s
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewFlag", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.ViewFlag = &b
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CopyName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.CopyName = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("message_id")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopItemMessageInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopItemMessageInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopItemMessageInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v BuySell_Type
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= BuySell_Type(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ShopMessage == nil {
				m.ShopMessage = &ShopItemMessage{}
			}
			if err := m.ShopMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("type")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("shopMessage")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopItemMessageInfoWithWho) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopItemMessageInfoWithWho: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopItemMessageInfoWithWho: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v BuySell_Type
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= BuySell_Type(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PlayerId = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ShopMessage == nil {
				m.ShopMessage = &ShopItemMessage{}
			}
			if err := m.ShopMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("type")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("player_id")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("shopMessage")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopOrderNotifyInfoWithWho) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopOrderNotifyInfoWithWho: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopOrderNotifyInfoWithWho: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PlayerId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OrderId = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("player_id")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopOrderNotifyInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopOrderNotifyInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopOrderNotifyInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OrderId = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopOrderIdList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopOrderIdList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopOrderIdList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowShopCommon
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.OrderIds = append(m.OrderIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowShopCommon
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthShopCommon
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthShopCommon
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.OrderIds) == 0 {
					m.OrderIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowShopCommon
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.OrderIds = append(m.OrderIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopOrderNotifyFlgUpdInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopOrderNotifyFlgUpdInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopOrderNotifyFlgUpdInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowShopCommon
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.OrderIds = append(m.OrderIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowShopCommon
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthShopCommon
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthShopCommon
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.OrderIds) == 0 {
					m.OrderIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowShopCommon
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.OrderIds = append(m.OrderIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderIds", wireType)
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuySell_Type", wireType)
			}
			var v BuySell_Type
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= BuySell_Type(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BuySell_Type = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MessageIdList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MessageIdList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MessageIdList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowShopCommon
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.MessageIds = append(m.MessageIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowShopCommon
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthShopCommon
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthShopCommon
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.MessageIds) == 0 {
					m.MessageIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowShopCommon
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.MessageIds = append(m.MessageIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PaySellerInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PaySellerInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PaySellerInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OrderId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Money", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Money = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sponsor_Id", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Sponsor_Id = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReceiverId = &v
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PayType", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PayType = &v
			hasFields[0] |= uint64(0x00000010)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("money")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("sponsor_Id")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("receiver_id")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("pay_type")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UploadAuthResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UploadAuthResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UploadAuthResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UploadAuthFlag", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UploadAuthFlag = &v
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("upload_auth_flag")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryExpressInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryExpressInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryExpressInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OrderId = &v
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("order_id")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryExpressBody) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryExpressBody: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryExpressBody: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DateTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DateTime = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Remark", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Remark = &s
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v Express_Status
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= Express_Status(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryExpressInfosResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryExpressInfosResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryExpressInfosResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpressInfos", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExpressInfos = append(m.ExpressInfos, &QueryExpressBody{})
			if err := m.ExpressInfos[len(m.ExpressInfos)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpressPhone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ExpressPhone = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpressName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ExpressName = &s
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UserId = &v
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExpressCom) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExpressCom: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExpressCom: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Code = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExpressComInfosResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExpressComInfosResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExpressComInfosResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommonUseComInfos", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommonUseComInfos = append(m.CommonUseComInfos, &ExpressCom{})
			if err := m.CommonUseComInfos[len(m.CommonUseComInfos)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComInfos", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComInfos = append(m.ComInfos, &ExpressCom{})
			if err := m.ComInfos[len(m.ComInfos)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("result")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_akqp2019_protobuf_proto.NewRequiredNotSetError("msg")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopPointCardInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopPointCardInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopPointCardInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CardId = &v
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardNo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.CardNo = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardPassword", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.CardPassword = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthShopCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthShopCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Key = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShopCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShopCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipShopCommon(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowShopCommon
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowShopCommon
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthShopCommon
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthShopCommon
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowShopCommon
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipShopCommon(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthShopCommon
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthShopCommon = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowShopCommon   = fmt.Errorf("proto: integer overflow")
)
